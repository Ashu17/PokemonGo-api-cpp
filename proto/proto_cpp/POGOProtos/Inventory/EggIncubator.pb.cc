// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/EggIncubator.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Inventory/EggIncubator.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Inventory {

namespace {

const ::google::protobuf::Descriptor* EggIncubator_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EggIncubator_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto() {
  protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Inventory/EggIncubator.proto");
  GOOGLE_CHECK(file != NULL);
  EggIncubator_descriptor_ = file->message_type(0);
  static const int EggIncubator_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, incubator_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, uses_remaining_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, pokemon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, start_km_walked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, target_km_walked_),
  };
  EggIncubator_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EggIncubator_descriptor_,
      EggIncubator::default_instance_,
      EggIncubator_offsets_,
      -1,
      -1,
      -1,
      sizeof(EggIncubator),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EggIncubator, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EggIncubator_descriptor_, &EggIncubator::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fInventory_2fEggIncubator_2eproto() {
  delete EggIncubator::default_instance_;
  delete EggIncubator_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemId_2eproto();
  ::POGOProtos::Inventory::protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubatorType_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\'POGOProtos/Inventory/EggIncubator.prot"
    "o\022\024POGOProtos.Inventory\032&POGOProtos/Inve"
    "ntory/Item/ItemId.proto\032+POGOProtos/Inve"
    "ntory/EggIncubatorType.proto\"\355\001\n\014EggIncu"
    "bator\022\n\n\002id\030\001 \001(\t\0222\n\007item_id\030\002 \001(\0162!.POG"
    "OProtos.Inventory.Item.ItemId\022>\n\016incubat"
    "or_type\030\003 \001(\0162&.POGOProtos.Inventory.Egg"
    "IncubatorType\022\026\n\016uses_remaining\030\004 \001(\005\022\022\n"
    "\npokemon_id\030\005 \001(\004\022\027\n\017start_km_walked\030\006 \001"
    "(\001\022\030\n\020target_km_walked\030\007 \001(\001b\006proto3", 396);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Inventory/EggIncubator.proto", &protobuf_RegisterTypes);
  EggIncubator::default_instance_ = new EggIncubator();
  EggIncubator::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fInventory_2fEggIncubator_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fInventory_2fEggIncubator_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fInventory_2fEggIncubator_2eproto() {
    protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fInventory_2fEggIncubator_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EggIncubator::kIdFieldNumber;
const int EggIncubator::kItemIdFieldNumber;
const int EggIncubator::kIncubatorTypeFieldNumber;
const int EggIncubator::kUsesRemainingFieldNumber;
const int EggIncubator::kPokemonIdFieldNumber;
const int EggIncubator::kStartKmWalkedFieldNumber;
const int EggIncubator::kTargetKmWalkedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EggIncubator::EggIncubator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Inventory.EggIncubator)
}

void EggIncubator::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EggIncubator::EggIncubator(const EggIncubator& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Inventory.EggIncubator)
}

void EggIncubator::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_ = 0;
  incubator_type_ = 0;
  uses_remaining_ = 0;
  pokemon_id_ = GOOGLE_ULONGLONG(0);
  start_km_walked_ = 0;
  target_km_walked_ = 0;
}

EggIncubator::~EggIncubator() {
  // @@protoc_insertion_point(destructor:POGOProtos.Inventory.EggIncubator)
  SharedDtor();
}

void EggIncubator::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EggIncubator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EggIncubator::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EggIncubator_descriptor_;
}

const EggIncubator& EggIncubator::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubator_2eproto();
  return *default_instance_;
}

EggIncubator* EggIncubator::default_instance_ = NULL;

EggIncubator* EggIncubator::New(::google::protobuf::Arena* arena) const {
  EggIncubator* n = new EggIncubator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EggIncubator::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Inventory.EggIncubator)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EggIncubator, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EggIncubator*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item_id_, uses_remaining_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool EggIncubator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Inventory.EggIncubator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Inventory.EggIncubator.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_id;
        break;
      }

      // optional .POGOProtos.Inventory.Item.ItemId item_id = 2;
      case 2: {
        if (tag == 16) {
         parse_item_id:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item_id(static_cast< ::POGOProtos::Inventory::Item::ItemId >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_incubator_type;
        break;
      }

      // optional .POGOProtos.Inventory.EggIncubatorType incubator_type = 3;
      case 3: {
        if (tag == 24) {
         parse_incubator_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_incubator_type(static_cast< ::POGOProtos::Inventory::EggIncubatorType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uses_remaining;
        break;
      }

      // optional int32 uses_remaining = 4;
      case 4: {
        if (tag == 32) {
         parse_uses_remaining:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uses_remaining_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_pokemon_id;
        break;
      }

      // optional uint64 pokemon_id = 5;
      case 5: {
        if (tag == 40) {
         parse_pokemon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &pokemon_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_start_km_walked;
        break;
      }

      // optional double start_km_walked = 6;
      case 6: {
        if (tag == 49) {
         parse_start_km_walked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &start_km_walked_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_target_km_walked;
        break;
      }

      // optional double target_km_walked = 7;
      case 7: {
        if (tag == 57) {
         parse_target_km_walked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &target_km_walked_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Inventory.EggIncubator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Inventory.EggIncubator)
  return false;
#undef DO_
}

void EggIncubator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Inventory.EggIncubator)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Inventory.EggIncubator.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional .POGOProtos.Inventory.Item.ItemId item_id = 2;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->item_id(), output);
  }

  // optional .POGOProtos.Inventory.EggIncubatorType incubator_type = 3;
  if (this->incubator_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->incubator_type(), output);
  }

  // optional int32 uses_remaining = 4;
  if (this->uses_remaining() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uses_remaining(), output);
  }

  // optional uint64 pokemon_id = 5;
  if (this->pokemon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->pokemon_id(), output);
  }

  // optional double start_km_walked = 6;
  if (this->start_km_walked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->start_km_walked(), output);
  }

  // optional double target_km_walked = 7;
  if (this->target_km_walked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->target_km_walked(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Inventory.EggIncubator)
}

::google::protobuf::uint8* EggIncubator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Inventory.EggIncubator)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Inventory.EggIncubator.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional .POGOProtos.Inventory.Item.ItemId item_id = 2;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->item_id(), target);
  }

  // optional .POGOProtos.Inventory.EggIncubatorType incubator_type = 3;
  if (this->incubator_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->incubator_type(), target);
  }

  // optional int32 uses_remaining = 4;
  if (this->uses_remaining() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uses_remaining(), target);
  }

  // optional uint64 pokemon_id = 5;
  if (this->pokemon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->pokemon_id(), target);
  }

  // optional double start_km_walked = 6;
  if (this->start_km_walked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->start_km_walked(), target);
  }

  // optional double target_km_walked = 7;
  if (this->target_km_walked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->target_km_walked(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Inventory.EggIncubator)
  return target;
}

int EggIncubator::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Inventory.EggIncubator)
  int total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional .POGOProtos.Inventory.Item.ItemId item_id = 2;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_id());
  }

  // optional .POGOProtos.Inventory.EggIncubatorType incubator_type = 3;
  if (this->incubator_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->incubator_type());
  }

  // optional int32 uses_remaining = 4;
  if (this->uses_remaining() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uses_remaining());
  }

  // optional uint64 pokemon_id = 5;
  if (this->pokemon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->pokemon_id());
  }

  // optional double start_km_walked = 6;
  if (this->start_km_walked() != 0) {
    total_size += 1 + 8;
  }

  // optional double target_km_walked = 7;
  if (this->target_km_walked() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EggIncubator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Inventory.EggIncubator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EggIncubator* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EggIncubator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Inventory.EggIncubator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Inventory.EggIncubator)
    MergeFrom(*source);
  }
}

void EggIncubator::MergeFrom(const EggIncubator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Inventory.EggIncubator)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.incubator_type() != 0) {
    set_incubator_type(from.incubator_type());
  }
  if (from.uses_remaining() != 0) {
    set_uses_remaining(from.uses_remaining());
  }
  if (from.pokemon_id() != 0) {
    set_pokemon_id(from.pokemon_id());
  }
  if (from.start_km_walked() != 0) {
    set_start_km_walked(from.start_km_walked());
  }
  if (from.target_km_walked() != 0) {
    set_target_km_walked(from.target_km_walked());
  }
}

void EggIncubator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Inventory.EggIncubator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EggIncubator::CopyFrom(const EggIncubator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Inventory.EggIncubator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EggIncubator::IsInitialized() const {

  return true;
}

void EggIncubator::Swap(EggIncubator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EggIncubator::InternalSwap(EggIncubator* other) {
  id_.Swap(&other->id_);
  std::swap(item_id_, other->item_id_);
  std::swap(incubator_type_, other->incubator_type_);
  std::swap(uses_remaining_, other->uses_remaining_);
  std::swap(pokemon_id_, other->pokemon_id_);
  std::swap(start_km_walked_, other->start_km_walked_);
  std::swap(target_km_walked_, other->target_km_walked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EggIncubator::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EggIncubator_descriptor_;
  metadata.reflection = EggIncubator_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EggIncubator

// optional string id = 1;
void EggIncubator::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EggIncubator::id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EggIncubator::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.id)
}
 void EggIncubator::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Inventory.EggIncubator.id)
}
 void EggIncubator::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Inventory.EggIncubator.id)
}
 ::std::string* EggIncubator::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Inventory.EggIncubator.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EggIncubator::release_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Inventory.EggIncubator.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EggIncubator::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Inventory.EggIncubator.id)
}

// optional .POGOProtos.Inventory.Item.ItemId item_id = 2;
void EggIncubator::clear_item_id() {
  item_id_ = 0;
}
 ::POGOProtos::Inventory::Item::ItemId EggIncubator::item_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.item_id)
  return static_cast< ::POGOProtos::Inventory::Item::ItemId >(item_id_);
}
 void EggIncubator::set_item_id(::POGOProtos::Inventory::Item::ItemId value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.item_id)
}

// optional .POGOProtos.Inventory.EggIncubatorType incubator_type = 3;
void EggIncubator::clear_incubator_type() {
  incubator_type_ = 0;
}
 ::POGOProtos::Inventory::EggIncubatorType EggIncubator::incubator_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.incubator_type)
  return static_cast< ::POGOProtos::Inventory::EggIncubatorType >(incubator_type_);
}
 void EggIncubator::set_incubator_type(::POGOProtos::Inventory::EggIncubatorType value) {
  
  incubator_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.incubator_type)
}

// optional int32 uses_remaining = 4;
void EggIncubator::clear_uses_remaining() {
  uses_remaining_ = 0;
}
 ::google::protobuf::int32 EggIncubator::uses_remaining() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.uses_remaining)
  return uses_remaining_;
}
 void EggIncubator::set_uses_remaining(::google::protobuf::int32 value) {
  
  uses_remaining_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.uses_remaining)
}

// optional uint64 pokemon_id = 5;
void EggIncubator::clear_pokemon_id() {
  pokemon_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 EggIncubator::pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.pokemon_id)
  return pokemon_id_;
}
 void EggIncubator::set_pokemon_id(::google::protobuf::uint64 value) {
  
  pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.pokemon_id)
}

// optional double start_km_walked = 6;
void EggIncubator::clear_start_km_walked() {
  start_km_walked_ = 0;
}
 double EggIncubator::start_km_walked() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.start_km_walked)
  return start_km_walked_;
}
 void EggIncubator::set_start_km_walked(double value) {
  
  start_km_walked_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.start_km_walked)
}

// optional double target_km_walked = 7;
void EggIncubator::clear_target_km_walked() {
  target_km_walked_ = 0;
}
 double EggIncubator::target_km_walked() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubator.target_km_walked)
  return target_km_walked_;
}
 void EggIncubator::set_target_km_walked(double value) {
  
  target_km_walked_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.EggIncubator.target_km_walked)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Inventory
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
