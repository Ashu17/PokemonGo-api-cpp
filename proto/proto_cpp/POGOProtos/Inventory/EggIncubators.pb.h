// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/EggIncubators.proto

#ifndef PROTOBUF_POGOProtos_2fInventory_2fEggIncubators_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fInventory_2fEggIncubators_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Inventory/EggIncubator.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Inventory {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubators_2eproto();
void protobuf_AssignDesc_POGOProtos_2fInventory_2fEggIncubators_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fInventory_2fEggIncubators_2eproto();

class EggIncubators;

// ===================================================================

class EggIncubators : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Inventory.EggIncubators) */ {
 public:
  EggIncubators();
  virtual ~EggIncubators();

  EggIncubators(const EggIncubators& from);

  inline EggIncubators& operator=(const EggIncubators& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EggIncubators& default_instance();

  void Swap(EggIncubators* other);

  // implements Message ----------------------------------------------

  inline EggIncubators* New() const { return New(NULL); }

  EggIncubators* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EggIncubators& from);
  void MergeFrom(const EggIncubators& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EggIncubators* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .POGOProtos.Inventory.EggIncubator egg_incubator = 1;
  int egg_incubator_size() const;
  void clear_egg_incubator();
  static const int kEggIncubatorFieldNumber = 1;
  const ::POGOProtos::Inventory::EggIncubator& egg_incubator(int index) const;
  ::POGOProtos::Inventory::EggIncubator* mutable_egg_incubator(int index);
  ::POGOProtos::Inventory::EggIncubator* add_egg_incubator();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::EggIncubator >*
      mutable_egg_incubator();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::EggIncubator >&
      egg_incubator() const;

  // @@protoc_insertion_point(class_scope:POGOProtos.Inventory.EggIncubators)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::EggIncubator > egg_incubator_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fInventory_2fEggIncubators_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fInventory_2fEggIncubators_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fInventory_2fEggIncubators_2eproto();

  void InitAsDefaultInstance();
  static EggIncubators* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EggIncubators

// repeated .POGOProtos.Inventory.EggIncubator egg_incubator = 1;
inline int EggIncubators::egg_incubator_size() const {
  return egg_incubator_.size();
}
inline void EggIncubators::clear_egg_incubator() {
  egg_incubator_.Clear();
}
inline const ::POGOProtos::Inventory::EggIncubator& EggIncubators::egg_incubator(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.EggIncubators.egg_incubator)
  return egg_incubator_.Get(index);
}
inline ::POGOProtos::Inventory::EggIncubator* EggIncubators::mutable_egg_incubator(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Inventory.EggIncubators.egg_incubator)
  return egg_incubator_.Mutable(index);
}
inline ::POGOProtos::Inventory::EggIncubator* EggIncubators::add_egg_incubator() {
  // @@protoc_insertion_point(field_add:POGOProtos.Inventory.EggIncubators.egg_incubator)
  return egg_incubator_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::EggIncubator >*
EggIncubators::mutable_egg_incubator() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Inventory.EggIncubators.egg_incubator)
  return &egg_incubator_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::EggIncubator >&
EggIncubators::egg_incubator() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Inventory.EggIncubators.egg_incubator)
  return egg_incubator_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Inventory
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fInventory_2fEggIncubators_2eproto__INCLUDED
