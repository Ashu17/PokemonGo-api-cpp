// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Inventory/InventoryItem.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Inventory/InventoryItem.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Inventory {

namespace {

const ::google::protobuf::Descriptor* InventoryItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InventoryItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* InventoryItem_DeletedItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InventoryItem_DeletedItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto() {
  protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Inventory/InventoryItem.proto");
  GOOGLE_CHECK(file != NULL);
  InventoryItem_descriptor_ = file->message_type(0);
  static const int InventoryItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem, modified_timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem, deleted_item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem, inventory_item_data_),
  };
  InventoryItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InventoryItem_descriptor_,
      InventoryItem::default_instance_,
      InventoryItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(InventoryItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem, _is_default_instance_));
  InventoryItem_DeletedItem_descriptor_ = InventoryItem_descriptor_->nested_type(0);
  static const int InventoryItem_DeletedItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem_DeletedItem, pokemon_id_),
  };
  InventoryItem_DeletedItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InventoryItem_DeletedItem_descriptor_,
      InventoryItem_DeletedItem::default_instance_,
      InventoryItem_DeletedItem_offsets_,
      -1,
      -1,
      -1,
      sizeof(InventoryItem_DeletedItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem_DeletedItem, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryItem_DeletedItem, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InventoryItem_descriptor_, &InventoryItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InventoryItem_DeletedItem_descriptor_, &InventoryItem_DeletedItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fInventory_2fInventoryItem_2eproto() {
  delete InventoryItem::default_instance_;
  delete InventoryItem_reflection_;
  delete InventoryItem_DeletedItem::default_instance_;
  delete InventoryItem_DeletedItem_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Inventory::protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItemData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(POGOProtos/Inventory/InventoryItem.pro"
    "to\022\024POGOProtos.Inventory\032,POGOProtos/Inv"
    "entory/InventoryItemData.proto\"\336\001\n\rInven"
    "toryItem\022\035\n\025modified_timestamp_ms\030\001 \001(\003\022"
    "E\n\014deleted_item\030\002 \001(\0132/.POGOProtos.Inven"
    "tory.InventoryItem.DeletedItem\022D\n\023invent"
    "ory_item_data\030\003 \001(\0132\'.POGOProtos.Invento"
    "ry.InventoryItemData\032!\n\013DeletedItem\022\022\n\np"
    "okemon_id\030\001 \001(\006b\006proto3", 343);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Inventory/InventoryItem.proto", &protobuf_RegisterTypes);
  InventoryItem::default_instance_ = new InventoryItem();
  InventoryItem_DeletedItem::default_instance_ = new InventoryItem_DeletedItem();
  InventoryItem::default_instance_->InitAsDefaultInstance();
  InventoryItem_DeletedItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fInventory_2fInventoryItem_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fInventory_2fInventoryItem_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fInventory_2fInventoryItem_2eproto() {
    protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fInventory_2fInventoryItem_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InventoryItem_DeletedItem::kPokemonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InventoryItem_DeletedItem::InventoryItem_DeletedItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Inventory.InventoryItem.DeletedItem)
}

void InventoryItem_DeletedItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

InventoryItem_DeletedItem::InventoryItem_DeletedItem(const InventoryItem_DeletedItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Inventory.InventoryItem.DeletedItem)
}

void InventoryItem_DeletedItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  pokemon_id_ = GOOGLE_ULONGLONG(0);
}

InventoryItem_DeletedItem::~InventoryItem_DeletedItem() {
  // @@protoc_insertion_point(destructor:POGOProtos.Inventory.InventoryItem.DeletedItem)
  SharedDtor();
}

void InventoryItem_DeletedItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InventoryItem_DeletedItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InventoryItem_DeletedItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InventoryItem_DeletedItem_descriptor_;
}

const InventoryItem_DeletedItem& InventoryItem_DeletedItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto();
  return *default_instance_;
}

InventoryItem_DeletedItem* InventoryItem_DeletedItem::default_instance_ = NULL;

InventoryItem_DeletedItem* InventoryItem_DeletedItem::New(::google::protobuf::Arena* arena) const {
  InventoryItem_DeletedItem* n = new InventoryItem_DeletedItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InventoryItem_DeletedItem::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  pokemon_id_ = GOOGLE_ULONGLONG(0);
}

bool InventoryItem_DeletedItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 pokemon_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &pokemon_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Inventory.InventoryItem.DeletedItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Inventory.InventoryItem.DeletedItem)
  return false;
#undef DO_
}

void InventoryItem_DeletedItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->pokemon_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Inventory.InventoryItem.DeletedItem)
}

::google::protobuf::uint8* InventoryItem_DeletedItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->pokemon_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Inventory.InventoryItem.DeletedItem)
  return target;
}

int InventoryItem_DeletedItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  int total_size = 0;

  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InventoryItem_DeletedItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InventoryItem_DeletedItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InventoryItem_DeletedItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Inventory.InventoryItem.DeletedItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Inventory.InventoryItem.DeletedItem)
    MergeFrom(*source);
  }
}

void InventoryItem_DeletedItem::MergeFrom(const InventoryItem_DeletedItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.pokemon_id() != 0) {
    set_pokemon_id(from.pokemon_id());
  }
}

void InventoryItem_DeletedItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InventoryItem_DeletedItem::CopyFrom(const InventoryItem_DeletedItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Inventory.InventoryItem.DeletedItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InventoryItem_DeletedItem::IsInitialized() const {

  return true;
}

void InventoryItem_DeletedItem::Swap(InventoryItem_DeletedItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InventoryItem_DeletedItem::InternalSwap(InventoryItem_DeletedItem* other) {
  std::swap(pokemon_id_, other->pokemon_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InventoryItem_DeletedItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InventoryItem_DeletedItem_descriptor_;
  metadata.reflection = InventoryItem_DeletedItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InventoryItem::kModifiedTimestampMsFieldNumber;
const int InventoryItem::kDeletedItemFieldNumber;
const int InventoryItem::kInventoryItemDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InventoryItem::InventoryItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Inventory.InventoryItem)
}

void InventoryItem::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  deleted_item_ = const_cast< ::POGOProtos::Inventory::InventoryItem_DeletedItem*>(&::POGOProtos::Inventory::InventoryItem_DeletedItem::default_instance());
  inventory_item_data_ = const_cast< ::POGOProtos::Inventory::InventoryItemData*>(&::POGOProtos::Inventory::InventoryItemData::default_instance());
}

InventoryItem::InventoryItem(const InventoryItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Inventory.InventoryItem)
}

void InventoryItem::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  modified_timestamp_ms_ = GOOGLE_LONGLONG(0);
  deleted_item_ = NULL;
  inventory_item_data_ = NULL;
}

InventoryItem::~InventoryItem() {
  // @@protoc_insertion_point(destructor:POGOProtos.Inventory.InventoryItem)
  SharedDtor();
}

void InventoryItem::SharedDtor() {
  if (this != default_instance_) {
    delete deleted_item_;
    delete inventory_item_data_;
  }
}

void InventoryItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InventoryItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InventoryItem_descriptor_;
}

const InventoryItem& InventoryItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fInventory_2fInventoryItem_2eproto();
  return *default_instance_;
}

InventoryItem* InventoryItem::default_instance_ = NULL;

InventoryItem* InventoryItem::New(::google::protobuf::Arena* arena) const {
  InventoryItem* n = new InventoryItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InventoryItem::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Inventory.InventoryItem)
  modified_timestamp_ms_ = GOOGLE_LONGLONG(0);
  if (GetArenaNoVirtual() == NULL && deleted_item_ != NULL) delete deleted_item_;
  deleted_item_ = NULL;
  if (GetArenaNoVirtual() == NULL && inventory_item_data_ != NULL) delete inventory_item_data_;
  inventory_item_data_ = NULL;
}

bool InventoryItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Inventory.InventoryItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 modified_timestamp_ms = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modified_timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_deleted_item;
        break;
      }

      // optional .POGOProtos.Inventory.InventoryItem.DeletedItem deleted_item = 2;
      case 2: {
        if (tag == 18) {
         parse_deleted_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deleted_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_inventory_item_data;
        break;
      }

      // optional .POGOProtos.Inventory.InventoryItemData inventory_item_data = 3;
      case 3: {
        if (tag == 26) {
         parse_inventory_item_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inventory_item_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Inventory.InventoryItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Inventory.InventoryItem)
  return false;
#undef DO_
}

void InventoryItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Inventory.InventoryItem)
  // optional int64 modified_timestamp_ms = 1;
  if (this->modified_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->modified_timestamp_ms(), output);
  }

  // optional .POGOProtos.Inventory.InventoryItem.DeletedItem deleted_item = 2;
  if (this->has_deleted_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->deleted_item_, output);
  }

  // optional .POGOProtos.Inventory.InventoryItemData inventory_item_data = 3;
  if (this->has_inventory_item_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->inventory_item_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Inventory.InventoryItem)
}

::google::protobuf::uint8* InventoryItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Inventory.InventoryItem)
  // optional int64 modified_timestamp_ms = 1;
  if (this->modified_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->modified_timestamp_ms(), target);
  }

  // optional .POGOProtos.Inventory.InventoryItem.DeletedItem deleted_item = 2;
  if (this->has_deleted_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->deleted_item_, false, target);
  }

  // optional .POGOProtos.Inventory.InventoryItemData inventory_item_data = 3;
  if (this->has_inventory_item_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->inventory_item_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Inventory.InventoryItem)
  return target;
}

int InventoryItem::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Inventory.InventoryItem)
  int total_size = 0;

  // optional int64 modified_timestamp_ms = 1;
  if (this->modified_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modified_timestamp_ms());
  }

  // optional .POGOProtos.Inventory.InventoryItem.DeletedItem deleted_item = 2;
  if (this->has_deleted_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->deleted_item_);
  }

  // optional .POGOProtos.Inventory.InventoryItemData inventory_item_data = 3;
  if (this->has_inventory_item_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inventory_item_data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InventoryItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Inventory.InventoryItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InventoryItem* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InventoryItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Inventory.InventoryItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Inventory.InventoryItem)
    MergeFrom(*source);
  }
}

void InventoryItem::MergeFrom(const InventoryItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Inventory.InventoryItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.modified_timestamp_ms() != 0) {
    set_modified_timestamp_ms(from.modified_timestamp_ms());
  }
  if (from.has_deleted_item()) {
    mutable_deleted_item()->::POGOProtos::Inventory::InventoryItem_DeletedItem::MergeFrom(from.deleted_item());
  }
  if (from.has_inventory_item_data()) {
    mutable_inventory_item_data()->::POGOProtos::Inventory::InventoryItemData::MergeFrom(from.inventory_item_data());
  }
}

void InventoryItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Inventory.InventoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InventoryItem::CopyFrom(const InventoryItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Inventory.InventoryItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InventoryItem::IsInitialized() const {

  return true;
}

void InventoryItem::Swap(InventoryItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InventoryItem::InternalSwap(InventoryItem* other) {
  std::swap(modified_timestamp_ms_, other->modified_timestamp_ms_);
  std::swap(deleted_item_, other->deleted_item_);
  std::swap(inventory_item_data_, other->inventory_item_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InventoryItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InventoryItem_descriptor_;
  metadata.reflection = InventoryItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InventoryItem_DeletedItem

// optional fixed64 pokemon_id = 1;
void InventoryItem_DeletedItem::clear_pokemon_id() {
  pokemon_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 InventoryItem_DeletedItem::pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.InventoryItem.DeletedItem.pokemon_id)
  return pokemon_id_;
}
 void InventoryItem_DeletedItem::set_pokemon_id(::google::protobuf::uint64 value) {
  
  pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.InventoryItem.DeletedItem.pokemon_id)
}

// -------------------------------------------------------------------

// InventoryItem

// optional int64 modified_timestamp_ms = 1;
void InventoryItem::clear_modified_timestamp_ms() {
  modified_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 InventoryItem::modified_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.InventoryItem.modified_timestamp_ms)
  return modified_timestamp_ms_;
}
 void InventoryItem::set_modified_timestamp_ms(::google::protobuf::int64 value) {
  
  modified_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Inventory.InventoryItem.modified_timestamp_ms)
}

// optional .POGOProtos.Inventory.InventoryItem.DeletedItem deleted_item = 2;
bool InventoryItem::has_deleted_item() const {
  return !_is_default_instance_ && deleted_item_ != NULL;
}
void InventoryItem::clear_deleted_item() {
  if (GetArenaNoVirtual() == NULL && deleted_item_ != NULL) delete deleted_item_;
  deleted_item_ = NULL;
}
const ::POGOProtos::Inventory::InventoryItem_DeletedItem& InventoryItem::deleted_item() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.InventoryItem.deleted_item)
  return deleted_item_ != NULL ? *deleted_item_ : *default_instance_->deleted_item_;
}
::POGOProtos::Inventory::InventoryItem_DeletedItem* InventoryItem::mutable_deleted_item() {
  
  if (deleted_item_ == NULL) {
    deleted_item_ = new ::POGOProtos::Inventory::InventoryItem_DeletedItem;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Inventory.InventoryItem.deleted_item)
  return deleted_item_;
}
::POGOProtos::Inventory::InventoryItem_DeletedItem* InventoryItem::release_deleted_item() {
  // @@protoc_insertion_point(field_release:POGOProtos.Inventory.InventoryItem.deleted_item)
  
  ::POGOProtos::Inventory::InventoryItem_DeletedItem* temp = deleted_item_;
  deleted_item_ = NULL;
  return temp;
}
void InventoryItem::set_allocated_deleted_item(::POGOProtos::Inventory::InventoryItem_DeletedItem* deleted_item) {
  delete deleted_item_;
  deleted_item_ = deleted_item;
  if (deleted_item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Inventory.InventoryItem.deleted_item)
}

// optional .POGOProtos.Inventory.InventoryItemData inventory_item_data = 3;
bool InventoryItem::has_inventory_item_data() const {
  return !_is_default_instance_ && inventory_item_data_ != NULL;
}
void InventoryItem::clear_inventory_item_data() {
  if (GetArenaNoVirtual() == NULL && inventory_item_data_ != NULL) delete inventory_item_data_;
  inventory_item_data_ = NULL;
}
const ::POGOProtos::Inventory::InventoryItemData& InventoryItem::inventory_item_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Inventory.InventoryItem.inventory_item_data)
  return inventory_item_data_ != NULL ? *inventory_item_data_ : *default_instance_->inventory_item_data_;
}
::POGOProtos::Inventory::InventoryItemData* InventoryItem::mutable_inventory_item_data() {
  
  if (inventory_item_data_ == NULL) {
    inventory_item_data_ = new ::POGOProtos::Inventory::InventoryItemData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Inventory.InventoryItem.inventory_item_data)
  return inventory_item_data_;
}
::POGOProtos::Inventory::InventoryItemData* InventoryItem::release_inventory_item_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Inventory.InventoryItem.inventory_item_data)
  
  ::POGOProtos::Inventory::InventoryItemData* temp = inventory_item_data_;
  inventory_item_data_ = NULL;
  return temp;
}
void InventoryItem::set_allocated_inventory_item_data(::POGOProtos::Inventory::InventoryItemData* inventory_item_data) {
  delete inventory_item_data_;
  inventory_item_data_ = inventory_item_data;
  if (inventory_item_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Inventory.InventoryItem.inventory_item_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Inventory
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
