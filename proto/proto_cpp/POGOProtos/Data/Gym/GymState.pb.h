// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Gym/GymState.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fGym_2fGymState_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fGym_2fGymState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Map/Fort/FortData.pb.h"
#include "POGOProtos/Data/Gym/GymMembership.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Gym {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fGym_2fGymState_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fGym_2fGymState_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fGym_2fGymState_2eproto();

class GymState;

// ===================================================================

class GymState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Gym.GymState) */ {
 public:
  GymState();
  virtual ~GymState();

  GymState(const GymState& from);

  inline GymState& operator=(const GymState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GymState& default_instance();

  void Swap(GymState* other);

  // implements Message ----------------------------------------------

  inline GymState* New() const { return New(NULL); }

  GymState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GymState& from);
  void MergeFrom(const GymState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GymState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Map.Fort.FortData fort_data = 1;
  bool has_fort_data() const;
  void clear_fort_data();
  static const int kFortDataFieldNumber = 1;
  const ::POGOProtos::Map::Fort::FortData& fort_data() const;
  ::POGOProtos::Map::Fort::FortData* mutable_fort_data();
  ::POGOProtos::Map::Fort::FortData* release_fort_data();
  void set_allocated_fort_data(::POGOProtos::Map::Fort::FortData* fort_data);

  // repeated .POGOProtos.Data.Gym.GymMembership memberships = 2;
  int memberships_size() const;
  void clear_memberships();
  static const int kMembershipsFieldNumber = 2;
  const ::POGOProtos::Data::Gym::GymMembership& memberships(int index) const;
  ::POGOProtos::Data::Gym::GymMembership* mutable_memberships(int index);
  ::POGOProtos::Data::Gym::GymMembership* add_memberships();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Gym::GymMembership >*
      mutable_memberships();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Gym::GymMembership >&
      memberships() const;

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Gym.GymState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::POGOProtos::Map::Fort::FortData* fort_data_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Gym::GymMembership > memberships_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fGym_2fGymState_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fGym_2fGymState_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fGym_2fGymState_2eproto();

  void InitAsDefaultInstance();
  static GymState* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GymState

// optional .POGOProtos.Map.Fort.FortData fort_data = 1;
inline bool GymState::has_fort_data() const {
  return !_is_default_instance_ && fort_data_ != NULL;
}
inline void GymState::clear_fort_data() {
  if (GetArenaNoVirtual() == NULL && fort_data_ != NULL) delete fort_data_;
  fort_data_ = NULL;
}
inline const ::POGOProtos::Map::Fort::FortData& GymState::fort_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Gym.GymState.fort_data)
  return fort_data_ != NULL ? *fort_data_ : *default_instance_->fort_data_;
}
inline ::POGOProtos::Map::Fort::FortData* GymState::mutable_fort_data() {
  
  if (fort_data_ == NULL) {
    fort_data_ = new ::POGOProtos::Map::Fort::FortData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Gym.GymState.fort_data)
  return fort_data_;
}
inline ::POGOProtos::Map::Fort::FortData* GymState::release_fort_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Gym.GymState.fort_data)
  
  ::POGOProtos::Map::Fort::FortData* temp = fort_data_;
  fort_data_ = NULL;
  return temp;
}
inline void GymState::set_allocated_fort_data(::POGOProtos::Map::Fort::FortData* fort_data) {
  delete fort_data_;
  fort_data_ = fort_data;
  if (fort_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Gym.GymState.fort_data)
}

// repeated .POGOProtos.Data.Gym.GymMembership memberships = 2;
inline int GymState::memberships_size() const {
  return memberships_.size();
}
inline void GymState::clear_memberships() {
  memberships_.Clear();
}
inline const ::POGOProtos::Data::Gym::GymMembership& GymState::memberships(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Gym.GymState.memberships)
  return memberships_.Get(index);
}
inline ::POGOProtos::Data::Gym::GymMembership* GymState::mutable_memberships(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Gym.GymState.memberships)
  return memberships_.Mutable(index);
}
inline ::POGOProtos::Data::Gym::GymMembership* GymState::add_memberships() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Gym.GymState.memberships)
  return memberships_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Gym::GymMembership >*
GymState::mutable_memberships() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Gym.GymState.memberships)
  return &memberships_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Gym::GymMembership >&
GymState::memberships() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Gym.GymState.memberships)
  return memberships_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Gym
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fGym_2fGymState_2eproto__INCLUDED
