// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Player/PlayerPublicProfile.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Data/Player/PlayerAvatar.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Player {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();

class PlayerPublicProfile;

// ===================================================================

class PlayerPublicProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Player.PlayerPublicProfile) */ {
 public:
  PlayerPublicProfile();
  virtual ~PlayerPublicProfile();

  PlayerPublicProfile(const PlayerPublicProfile& from);

  inline PlayerPublicProfile& operator=(const PlayerPublicProfile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPublicProfile& default_instance();

  void Swap(PlayerPublicProfile* other);

  // implements Message ----------------------------------------------

  inline PlayerPublicProfile* New() const { return New(NULL); }

  PlayerPublicProfile* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerPublicProfile& from);
  void MergeFrom(const PlayerPublicProfile& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerPublicProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional .POGOProtos.Data.Player.PlayerAvatar avatar = 3;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 3;
  const ::POGOProtos::Data::Player::PlayerAvatar& avatar() const;
  ::POGOProtos::Data::Player::PlayerAvatar* mutable_avatar();
  ::POGOProtos::Data::Player::PlayerAvatar* release_avatar();
  void set_allocated_avatar(::POGOProtos::Data::Player::PlayerAvatar* avatar);

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Player.PlayerPublicProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::POGOProtos::Data::Player::PlayerAvatar* avatar_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();

  void InitAsDefaultInstance();
  static PlayerPublicProfile* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPublicProfile

// optional string name = 1;
inline void PlayerPublicProfile::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerPublicProfile::name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerPublicProfile.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerPublicProfile::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerPublicProfile.name)
}
inline void PlayerPublicProfile::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.Player.PlayerPublicProfile.name)
}
inline void PlayerPublicProfile::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.Player.PlayerPublicProfile.name)
}
inline ::std::string* PlayerPublicProfile::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Player.PlayerPublicProfile.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerPublicProfile::release_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Player.PlayerPublicProfile.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerPublicProfile::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Player.PlayerPublicProfile.name)
}

// optional int32 level = 2;
inline void PlayerPublicProfile::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 PlayerPublicProfile::level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerPublicProfile.level)
  return level_;
}
inline void PlayerPublicProfile::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerPublicProfile.level)
}

// optional .POGOProtos.Data.Player.PlayerAvatar avatar = 3;
inline bool PlayerPublicProfile::has_avatar() const {
  return !_is_default_instance_ && avatar_ != NULL;
}
inline void PlayerPublicProfile::clear_avatar() {
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) delete avatar_;
  avatar_ = NULL;
}
inline const ::POGOProtos::Data::Player::PlayerAvatar& PlayerPublicProfile::avatar() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerPublicProfile.avatar)
  return avatar_ != NULL ? *avatar_ : *default_instance_->avatar_;
}
inline ::POGOProtos::Data::Player::PlayerAvatar* PlayerPublicProfile::mutable_avatar() {
  
  if (avatar_ == NULL) {
    avatar_ = new ::POGOProtos::Data::Player::PlayerAvatar;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Player.PlayerPublicProfile.avatar)
  return avatar_;
}
inline ::POGOProtos::Data::Player::PlayerAvatar* PlayerPublicProfile::release_avatar() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Player.PlayerPublicProfile.avatar)
  
  ::POGOProtos::Data::Player::PlayerAvatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
inline void PlayerPublicProfile::set_allocated_avatar(::POGOProtos::Data::Player::PlayerAvatar* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Player.PlayerPublicProfile.avatar)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Player
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto__INCLUDED
