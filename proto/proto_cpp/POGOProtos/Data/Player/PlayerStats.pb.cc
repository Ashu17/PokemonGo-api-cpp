// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Player/PlayerStats.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Data/Player/PlayerStats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Player {

namespace {

const ::google::protobuf::Descriptor* PlayerStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerStats_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() {
  protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Data/Player/PlayerStats.proto");
  GOOGLE_CHECK(file != NULL);
  PlayerStats_descriptor_ = file->message_type(0);
  static const int PlayerStats_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, prev_level_xp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, next_level_xp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, km_walked_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, pokemons_encountered_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, unique_pokedex_entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, pokemons_captured_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, evolutions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, poke_stop_visits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, pokeballs_thrown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, eggs_hatched_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, big_magikarp_caught_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, battle_attack_won_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, battle_attack_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, battle_defended_won_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, battle_training_won_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, battle_training_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, prestige_raised_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, prestige_dropped_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, pokemon_deployed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, pokemon_caught_by_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, small_rattata_caught_),
  };
  PlayerStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerStats_descriptor_,
      PlayerStats::default_instance_,
      PlayerStats_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerStats, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerStats_descriptor_, &PlayerStats::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() {
  delete PlayerStats::default_instance_;
  delete PlayerStats_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(POGOProtos/Data/Player/PlayerStats.pro"
    "to\022\026POGOProtos.Data.Player\"\355\004\n\013PlayerSta"
    "ts\022\r\n\005level\030\001 \001(\005\022\022\n\nexperience\030\002 \001(\003\022\025\n"
    "\rprev_level_xp\030\003 \001(\003\022\025\n\rnext_level_xp\030\004 "
    "\001(\003\022\021\n\tkm_walked\030\005 \001(\002\022\034\n\024pokemons_encou"
    "ntered\030\006 \001(\005\022\036\n\026unique_pokedex_entries\030\007"
    " \001(\005\022\031\n\021pokemons_captured\030\010 \001(\005\022\022\n\nevolu"
    "tions\030\t \001(\005\022\030\n\020poke_stop_visits\030\n \001(\005\022\030\n"
    "\020pokeballs_thrown\030\013 \001(\005\022\024\n\014eggs_hatched\030"
    "\014 \001(\005\022\033\n\023big_magikarp_caught\030\r \001(\005\022\031\n\021ba"
    "ttle_attack_won\030\016 \001(\005\022\033\n\023battle_attack_t"
    "otal\030\017 \001(\005\022\033\n\023battle_defended_won\030\020 \001(\005\022"
    "\033\n\023battle_training_won\030\021 \001(\005\022\035\n\025battle_t"
    "raining_total\030\022 \001(\005\022\035\n\025prestige_raised_t"
    "otal\030\023 \001(\005\022\036\n\026prestige_dropped_total\030\024 \001"
    "(\005\022\030\n\020pokemon_deployed\030\025 \001(\005\022\036\n\026pokemon_"
    "caught_by_type\030\026 \001(\014\022\034\n\024small_rattata_ca"
    "ught\030\027 \001(\005b\006proto3", 698);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Data/Player/PlayerStats.proto", &protobuf_RegisterTypes);
  PlayerStats::default_instance_ = new PlayerStats();
  PlayerStats::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto() {
    protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerStats::kLevelFieldNumber;
const int PlayerStats::kExperienceFieldNumber;
const int PlayerStats::kPrevLevelXpFieldNumber;
const int PlayerStats::kNextLevelXpFieldNumber;
const int PlayerStats::kKmWalkedFieldNumber;
const int PlayerStats::kPokemonsEncounteredFieldNumber;
const int PlayerStats::kUniquePokedexEntriesFieldNumber;
const int PlayerStats::kPokemonsCapturedFieldNumber;
const int PlayerStats::kEvolutionsFieldNumber;
const int PlayerStats::kPokeStopVisitsFieldNumber;
const int PlayerStats::kPokeballsThrownFieldNumber;
const int PlayerStats::kEggsHatchedFieldNumber;
const int PlayerStats::kBigMagikarpCaughtFieldNumber;
const int PlayerStats::kBattleAttackWonFieldNumber;
const int PlayerStats::kBattleAttackTotalFieldNumber;
const int PlayerStats::kBattleDefendedWonFieldNumber;
const int PlayerStats::kBattleTrainingWonFieldNumber;
const int PlayerStats::kBattleTrainingTotalFieldNumber;
const int PlayerStats::kPrestigeRaisedTotalFieldNumber;
const int PlayerStats::kPrestigeDroppedTotalFieldNumber;
const int PlayerStats::kPokemonDeployedFieldNumber;
const int PlayerStats::kPokemonCaughtByTypeFieldNumber;
const int PlayerStats::kSmallRattataCaughtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerStats::PlayerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Data.Player.PlayerStats)
}

void PlayerStats::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerStats::PlayerStats(const PlayerStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Data.Player.PlayerStats)
}

void PlayerStats::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  level_ = 0;
  experience_ = GOOGLE_LONGLONG(0);
  prev_level_xp_ = GOOGLE_LONGLONG(0);
  next_level_xp_ = GOOGLE_LONGLONG(0);
  km_walked_ = 0;
  pokemons_encountered_ = 0;
  unique_pokedex_entries_ = 0;
  pokemons_captured_ = 0;
  evolutions_ = 0;
  poke_stop_visits_ = 0;
  pokeballs_thrown_ = 0;
  eggs_hatched_ = 0;
  big_magikarp_caught_ = 0;
  battle_attack_won_ = 0;
  battle_attack_total_ = 0;
  battle_defended_won_ = 0;
  battle_training_won_ = 0;
  battle_training_total_ = 0;
  prestige_raised_total_ = 0;
  prestige_dropped_total_ = 0;
  pokemon_deployed_ = 0;
  pokemon_caught_by_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  small_rattata_caught_ = 0;
}

PlayerStats::~PlayerStats() {
  // @@protoc_insertion_point(destructor:POGOProtos.Data.Player.PlayerStats)
  SharedDtor();
}

void PlayerStats::SharedDtor() {
  pokemon_caught_by_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PlayerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerStats_descriptor_;
}

const PlayerStats& PlayerStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
  return *default_instance_;
}

PlayerStats* PlayerStats::default_instance_ = NULL;

PlayerStats* PlayerStats::New(::google::protobuf::Arena* arena) const {
  PlayerStats* n = new PlayerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerStats::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Data.Player.PlayerStats)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerStats, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerStats*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(experience_, pokemons_captured_);
  ZR_(evolutions_, battle_defended_won_);
  ZR_(battle_training_won_, pokemon_deployed_);
  pokemon_caught_by_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  small_rattata_caught_ = 0;

#undef ZR_HELPER_
#undef ZR_

}

bool PlayerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Data.Player.PlayerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_experience;
        break;
      }

      // optional int64 experience = 2;
      case 2: {
        if (tag == 16) {
         parse_experience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experience_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_prev_level_xp;
        break;
      }

      // optional int64 prev_level_xp = 3;
      case 3: {
        if (tag == 24) {
         parse_prev_level_xp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &prev_level_xp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_next_level_xp;
        break;
      }

      // optional int64 next_level_xp = 4;
      case 4: {
        if (tag == 32) {
         parse_next_level_xp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &next_level_xp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_km_walked;
        break;
      }

      // optional float km_walked = 5;
      case 5: {
        if (tag == 45) {
         parse_km_walked:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &km_walked_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_pokemons_encountered;
        break;
      }

      // optional int32 pokemons_encountered = 6;
      case 6: {
        if (tag == 48) {
         parse_pokemons_encountered:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pokemons_encountered_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_unique_pokedex_entries;
        break;
      }

      // optional int32 unique_pokedex_entries = 7;
      case 7: {
        if (tag == 56) {
         parse_unique_pokedex_entries:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unique_pokedex_entries_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_pokemons_captured;
        break;
      }

      // optional int32 pokemons_captured = 8;
      case 8: {
        if (tag == 64) {
         parse_pokemons_captured:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pokemons_captured_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_evolutions;
        break;
      }

      // optional int32 evolutions = 9;
      case 9: {
        if (tag == 72) {
         parse_evolutions:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evolutions_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_poke_stop_visits;
        break;
      }

      // optional int32 poke_stop_visits = 10;
      case 10: {
        if (tag == 80) {
         parse_poke_stop_visits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &poke_stop_visits_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_pokeballs_thrown;
        break;
      }

      // optional int32 pokeballs_thrown = 11;
      case 11: {
        if (tag == 88) {
         parse_pokeballs_thrown:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pokeballs_thrown_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_eggs_hatched;
        break;
      }

      // optional int32 eggs_hatched = 12;
      case 12: {
        if (tag == 96) {
         parse_eggs_hatched:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eggs_hatched_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_big_magikarp_caught;
        break;
      }

      // optional int32 big_magikarp_caught = 13;
      case 13: {
        if (tag == 104) {
         parse_big_magikarp_caught:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &big_magikarp_caught_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_battle_attack_won;
        break;
      }

      // optional int32 battle_attack_won = 14;
      case 14: {
        if (tag == 112) {
         parse_battle_attack_won:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_attack_won_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_battle_attack_total;
        break;
      }

      // optional int32 battle_attack_total = 15;
      case 15: {
        if (tag == 120) {
         parse_battle_attack_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_attack_total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(128)) goto parse_battle_defended_won;
        break;
      }

      // optional int32 battle_defended_won = 16;
      case 16: {
        if (tag == 128) {
         parse_battle_defended_won:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_defended_won_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(136)) goto parse_battle_training_won;
        break;
      }

      // optional int32 battle_training_won = 17;
      case 17: {
        if (tag == 136) {
         parse_battle_training_won:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_training_won_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_battle_training_total;
        break;
      }

      // optional int32 battle_training_total = 18;
      case 18: {
        if (tag == 144) {
         parse_battle_training_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &battle_training_total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_prestige_raised_total;
        break;
      }

      // optional int32 prestige_raised_total = 19;
      case 19: {
        if (tag == 152) {
         parse_prestige_raised_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prestige_raised_total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_prestige_dropped_total;
        break;
      }

      // optional int32 prestige_dropped_total = 20;
      case 20: {
        if (tag == 160) {
         parse_prestige_dropped_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prestige_dropped_total_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(168)) goto parse_pokemon_deployed;
        break;
      }

      // optional int32 pokemon_deployed = 21;
      case 21: {
        if (tag == 168) {
         parse_pokemon_deployed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pokemon_deployed_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_pokemon_caught_by_type;
        break;
      }

      // optional bytes pokemon_caught_by_type = 22;
      case 22: {
        if (tag == 178) {
         parse_pokemon_caught_by_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pokemon_caught_by_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_small_rattata_caught;
        break;
      }

      // optional int32 small_rattata_caught = 23;
      case 23: {
        if (tag == 184) {
         parse_small_rattata_caught:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &small_rattata_caught_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Data.Player.PlayerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Data.Player.PlayerStats)
  return false;
#undef DO_
}

void PlayerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Data.Player.PlayerStats)
  // optional int32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // optional int64 experience = 2;
  if (this->experience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->experience(), output);
  }

  // optional int64 prev_level_xp = 3;
  if (this->prev_level_xp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->prev_level_xp(), output);
  }

  // optional int64 next_level_xp = 4;
  if (this->next_level_xp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->next_level_xp(), output);
  }

  // optional float km_walked = 5;
  if (this->km_walked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->km_walked(), output);
  }

  // optional int32 pokemons_encountered = 6;
  if (this->pokemons_encountered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->pokemons_encountered(), output);
  }

  // optional int32 unique_pokedex_entries = 7;
  if (this->unique_pokedex_entries() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->unique_pokedex_entries(), output);
  }

  // optional int32 pokemons_captured = 8;
  if (this->pokemons_captured() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->pokemons_captured(), output);
  }

  // optional int32 evolutions = 9;
  if (this->evolutions() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->evolutions(), output);
  }

  // optional int32 poke_stop_visits = 10;
  if (this->poke_stop_visits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->poke_stop_visits(), output);
  }

  // optional int32 pokeballs_thrown = 11;
  if (this->pokeballs_thrown() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->pokeballs_thrown(), output);
  }

  // optional int32 eggs_hatched = 12;
  if (this->eggs_hatched() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->eggs_hatched(), output);
  }

  // optional int32 big_magikarp_caught = 13;
  if (this->big_magikarp_caught() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->big_magikarp_caught(), output);
  }

  // optional int32 battle_attack_won = 14;
  if (this->battle_attack_won() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->battle_attack_won(), output);
  }

  // optional int32 battle_attack_total = 15;
  if (this->battle_attack_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->battle_attack_total(), output);
  }

  // optional int32 battle_defended_won = 16;
  if (this->battle_defended_won() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->battle_defended_won(), output);
  }

  // optional int32 battle_training_won = 17;
  if (this->battle_training_won() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->battle_training_won(), output);
  }

  // optional int32 battle_training_total = 18;
  if (this->battle_training_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->battle_training_total(), output);
  }

  // optional int32 prestige_raised_total = 19;
  if (this->prestige_raised_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->prestige_raised_total(), output);
  }

  // optional int32 prestige_dropped_total = 20;
  if (this->prestige_dropped_total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->prestige_dropped_total(), output);
  }

  // optional int32 pokemon_deployed = 21;
  if (this->pokemon_deployed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->pokemon_deployed(), output);
  }

  // optional bytes pokemon_caught_by_type = 22;
  if (this->pokemon_caught_by_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->pokemon_caught_by_type(), output);
  }

  // optional int32 small_rattata_caught = 23;
  if (this->small_rattata_caught() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->small_rattata_caught(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Data.Player.PlayerStats)
}

::google::protobuf::uint8* PlayerStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Data.Player.PlayerStats)
  // optional int32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // optional int64 experience = 2;
  if (this->experience() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->experience(), target);
  }

  // optional int64 prev_level_xp = 3;
  if (this->prev_level_xp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->prev_level_xp(), target);
  }

  // optional int64 next_level_xp = 4;
  if (this->next_level_xp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->next_level_xp(), target);
  }

  // optional float km_walked = 5;
  if (this->km_walked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->km_walked(), target);
  }

  // optional int32 pokemons_encountered = 6;
  if (this->pokemons_encountered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->pokemons_encountered(), target);
  }

  // optional int32 unique_pokedex_entries = 7;
  if (this->unique_pokedex_entries() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->unique_pokedex_entries(), target);
  }

  // optional int32 pokemons_captured = 8;
  if (this->pokemons_captured() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->pokemons_captured(), target);
  }

  // optional int32 evolutions = 9;
  if (this->evolutions() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->evolutions(), target);
  }

  // optional int32 poke_stop_visits = 10;
  if (this->poke_stop_visits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->poke_stop_visits(), target);
  }

  // optional int32 pokeballs_thrown = 11;
  if (this->pokeballs_thrown() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->pokeballs_thrown(), target);
  }

  // optional int32 eggs_hatched = 12;
  if (this->eggs_hatched() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->eggs_hatched(), target);
  }

  // optional int32 big_magikarp_caught = 13;
  if (this->big_magikarp_caught() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->big_magikarp_caught(), target);
  }

  // optional int32 battle_attack_won = 14;
  if (this->battle_attack_won() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->battle_attack_won(), target);
  }

  // optional int32 battle_attack_total = 15;
  if (this->battle_attack_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->battle_attack_total(), target);
  }

  // optional int32 battle_defended_won = 16;
  if (this->battle_defended_won() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->battle_defended_won(), target);
  }

  // optional int32 battle_training_won = 17;
  if (this->battle_training_won() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->battle_training_won(), target);
  }

  // optional int32 battle_training_total = 18;
  if (this->battle_training_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->battle_training_total(), target);
  }

  // optional int32 prestige_raised_total = 19;
  if (this->prestige_raised_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->prestige_raised_total(), target);
  }

  // optional int32 prestige_dropped_total = 20;
  if (this->prestige_dropped_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->prestige_dropped_total(), target);
  }

  // optional int32 pokemon_deployed = 21;
  if (this->pokemon_deployed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->pokemon_deployed(), target);
  }

  // optional bytes pokemon_caught_by_type = 22;
  if (this->pokemon_caught_by_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->pokemon_caught_by_type(), target);
  }

  // optional int32 small_rattata_caught = 23;
  if (this->small_rattata_caught() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->small_rattata_caught(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Data.Player.PlayerStats)
  return target;
}

int PlayerStats::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Data.Player.PlayerStats)
  int total_size = 0;

  // optional int32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  // optional int64 experience = 2;
  if (this->experience() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->experience());
  }

  // optional int64 prev_level_xp = 3;
  if (this->prev_level_xp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->prev_level_xp());
  }

  // optional int64 next_level_xp = 4;
  if (this->next_level_xp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->next_level_xp());
  }

  // optional float km_walked = 5;
  if (this->km_walked() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 pokemons_encountered = 6;
  if (this->pokemons_encountered() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pokemons_encountered());
  }

  // optional int32 unique_pokedex_entries = 7;
  if (this->unique_pokedex_entries() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unique_pokedex_entries());
  }

  // optional int32 pokemons_captured = 8;
  if (this->pokemons_captured() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pokemons_captured());
  }

  // optional int32 evolutions = 9;
  if (this->evolutions() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->evolutions());
  }

  // optional int32 poke_stop_visits = 10;
  if (this->poke_stop_visits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->poke_stop_visits());
  }

  // optional int32 pokeballs_thrown = 11;
  if (this->pokeballs_thrown() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pokeballs_thrown());
  }

  // optional int32 eggs_hatched = 12;
  if (this->eggs_hatched() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eggs_hatched());
  }

  // optional int32 big_magikarp_caught = 13;
  if (this->big_magikarp_caught() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->big_magikarp_caught());
  }

  // optional int32 battle_attack_won = 14;
  if (this->battle_attack_won() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_attack_won());
  }

  // optional int32 battle_attack_total = 15;
  if (this->battle_attack_total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_attack_total());
  }

  // optional int32 battle_defended_won = 16;
  if (this->battle_defended_won() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_defended_won());
  }

  // optional int32 battle_training_won = 17;
  if (this->battle_training_won() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_training_won());
  }

  // optional int32 battle_training_total = 18;
  if (this->battle_training_total() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->battle_training_total());
  }

  // optional int32 prestige_raised_total = 19;
  if (this->prestige_raised_total() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prestige_raised_total());
  }

  // optional int32 prestige_dropped_total = 20;
  if (this->prestige_dropped_total() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->prestige_dropped_total());
  }

  // optional int32 pokemon_deployed = 21;
  if (this->pokemon_deployed() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pokemon_deployed());
  }

  // optional bytes pokemon_caught_by_type = 22;
  if (this->pokemon_caught_by_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pokemon_caught_by_type());
  }

  // optional int32 small_rattata_caught = 23;
  if (this->small_rattata_caught() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->small_rattata_caught());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Data.Player.PlayerStats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayerStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Data.Player.PlayerStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Data.Player.PlayerStats)
    MergeFrom(*source);
  }
}

void PlayerStats::MergeFrom(const PlayerStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Data.Player.PlayerStats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.experience() != 0) {
    set_experience(from.experience());
  }
  if (from.prev_level_xp() != 0) {
    set_prev_level_xp(from.prev_level_xp());
  }
  if (from.next_level_xp() != 0) {
    set_next_level_xp(from.next_level_xp());
  }
  if (from.km_walked() != 0) {
    set_km_walked(from.km_walked());
  }
  if (from.pokemons_encountered() != 0) {
    set_pokemons_encountered(from.pokemons_encountered());
  }
  if (from.unique_pokedex_entries() != 0) {
    set_unique_pokedex_entries(from.unique_pokedex_entries());
  }
  if (from.pokemons_captured() != 0) {
    set_pokemons_captured(from.pokemons_captured());
  }
  if (from.evolutions() != 0) {
    set_evolutions(from.evolutions());
  }
  if (from.poke_stop_visits() != 0) {
    set_poke_stop_visits(from.poke_stop_visits());
  }
  if (from.pokeballs_thrown() != 0) {
    set_pokeballs_thrown(from.pokeballs_thrown());
  }
  if (from.eggs_hatched() != 0) {
    set_eggs_hatched(from.eggs_hatched());
  }
  if (from.big_magikarp_caught() != 0) {
    set_big_magikarp_caught(from.big_magikarp_caught());
  }
  if (from.battle_attack_won() != 0) {
    set_battle_attack_won(from.battle_attack_won());
  }
  if (from.battle_attack_total() != 0) {
    set_battle_attack_total(from.battle_attack_total());
  }
  if (from.battle_defended_won() != 0) {
    set_battle_defended_won(from.battle_defended_won());
  }
  if (from.battle_training_won() != 0) {
    set_battle_training_won(from.battle_training_won());
  }
  if (from.battle_training_total() != 0) {
    set_battle_training_total(from.battle_training_total());
  }
  if (from.prestige_raised_total() != 0) {
    set_prestige_raised_total(from.prestige_raised_total());
  }
  if (from.prestige_dropped_total() != 0) {
    set_prestige_dropped_total(from.prestige_dropped_total());
  }
  if (from.pokemon_deployed() != 0) {
    set_pokemon_deployed(from.pokemon_deployed());
  }
  if (from.pokemon_caught_by_type().size() > 0) {

    pokemon_caught_by_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pokemon_caught_by_type_);
  }
  if (from.small_rattata_caught() != 0) {
    set_small_rattata_caught(from.small_rattata_caught());
  }
}

void PlayerStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Data.Player.PlayerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerStats::CopyFrom(const PlayerStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Data.Player.PlayerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerStats::IsInitialized() const {

  return true;
}

void PlayerStats::Swap(PlayerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerStats::InternalSwap(PlayerStats* other) {
  std::swap(level_, other->level_);
  std::swap(experience_, other->experience_);
  std::swap(prev_level_xp_, other->prev_level_xp_);
  std::swap(next_level_xp_, other->next_level_xp_);
  std::swap(km_walked_, other->km_walked_);
  std::swap(pokemons_encountered_, other->pokemons_encountered_);
  std::swap(unique_pokedex_entries_, other->unique_pokedex_entries_);
  std::swap(pokemons_captured_, other->pokemons_captured_);
  std::swap(evolutions_, other->evolutions_);
  std::swap(poke_stop_visits_, other->poke_stop_visits_);
  std::swap(pokeballs_thrown_, other->pokeballs_thrown_);
  std::swap(eggs_hatched_, other->eggs_hatched_);
  std::swap(big_magikarp_caught_, other->big_magikarp_caught_);
  std::swap(battle_attack_won_, other->battle_attack_won_);
  std::swap(battle_attack_total_, other->battle_attack_total_);
  std::swap(battle_defended_won_, other->battle_defended_won_);
  std::swap(battle_training_won_, other->battle_training_won_);
  std::swap(battle_training_total_, other->battle_training_total_);
  std::swap(prestige_raised_total_, other->prestige_raised_total_);
  std::swap(prestige_dropped_total_, other->prestige_dropped_total_);
  std::swap(pokemon_deployed_, other->pokemon_deployed_);
  pokemon_caught_by_type_.Swap(&other->pokemon_caught_by_type_);
  std::swap(small_rattata_caught_, other->small_rattata_caught_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerStats_descriptor_;
  metadata.reflection = PlayerStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerStats

// optional int32 level = 1;
void PlayerStats::clear_level() {
  level_ = 0;
}
 ::google::protobuf::int32 PlayerStats::level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.level)
  return level_;
}
 void PlayerStats::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.level)
}

// optional int64 experience = 2;
void PlayerStats::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerStats::experience() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.experience)
  return experience_;
}
 void PlayerStats::set_experience(::google::protobuf::int64 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.experience)
}

// optional int64 prev_level_xp = 3;
void PlayerStats::clear_prev_level_xp() {
  prev_level_xp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerStats::prev_level_xp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prev_level_xp)
  return prev_level_xp_;
}
 void PlayerStats::set_prev_level_xp(::google::protobuf::int64 value) {
  
  prev_level_xp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prev_level_xp)
}

// optional int64 next_level_xp = 4;
void PlayerStats::clear_next_level_xp() {
  next_level_xp_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 PlayerStats::next_level_xp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.next_level_xp)
  return next_level_xp_;
}
 void PlayerStats::set_next_level_xp(::google::protobuf::int64 value) {
  
  next_level_xp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.next_level_xp)
}

// optional float km_walked = 5;
void PlayerStats::clear_km_walked() {
  km_walked_ = 0;
}
 float PlayerStats::km_walked() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.km_walked)
  return km_walked_;
}
 void PlayerStats::set_km_walked(float value) {
  
  km_walked_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.km_walked)
}

// optional int32 pokemons_encountered = 6;
void PlayerStats::clear_pokemons_encountered() {
  pokemons_encountered_ = 0;
}
 ::google::protobuf::int32 PlayerStats::pokemons_encountered() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemons_encountered)
  return pokemons_encountered_;
}
 void PlayerStats::set_pokemons_encountered(::google::protobuf::int32 value) {
  
  pokemons_encountered_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemons_encountered)
}

// optional int32 unique_pokedex_entries = 7;
void PlayerStats::clear_unique_pokedex_entries() {
  unique_pokedex_entries_ = 0;
}
 ::google::protobuf::int32 PlayerStats::unique_pokedex_entries() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.unique_pokedex_entries)
  return unique_pokedex_entries_;
}
 void PlayerStats::set_unique_pokedex_entries(::google::protobuf::int32 value) {
  
  unique_pokedex_entries_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.unique_pokedex_entries)
}

// optional int32 pokemons_captured = 8;
void PlayerStats::clear_pokemons_captured() {
  pokemons_captured_ = 0;
}
 ::google::protobuf::int32 PlayerStats::pokemons_captured() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemons_captured)
  return pokemons_captured_;
}
 void PlayerStats::set_pokemons_captured(::google::protobuf::int32 value) {
  
  pokemons_captured_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemons_captured)
}

// optional int32 evolutions = 9;
void PlayerStats::clear_evolutions() {
  evolutions_ = 0;
}
 ::google::protobuf::int32 PlayerStats::evolutions() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.evolutions)
  return evolutions_;
}
 void PlayerStats::set_evolutions(::google::protobuf::int32 value) {
  
  evolutions_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.evolutions)
}

// optional int32 poke_stop_visits = 10;
void PlayerStats::clear_poke_stop_visits() {
  poke_stop_visits_ = 0;
}
 ::google::protobuf::int32 PlayerStats::poke_stop_visits() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.poke_stop_visits)
  return poke_stop_visits_;
}
 void PlayerStats::set_poke_stop_visits(::google::protobuf::int32 value) {
  
  poke_stop_visits_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.poke_stop_visits)
}

// optional int32 pokeballs_thrown = 11;
void PlayerStats::clear_pokeballs_thrown() {
  pokeballs_thrown_ = 0;
}
 ::google::protobuf::int32 PlayerStats::pokeballs_thrown() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokeballs_thrown)
  return pokeballs_thrown_;
}
 void PlayerStats::set_pokeballs_thrown(::google::protobuf::int32 value) {
  
  pokeballs_thrown_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokeballs_thrown)
}

// optional int32 eggs_hatched = 12;
void PlayerStats::clear_eggs_hatched() {
  eggs_hatched_ = 0;
}
 ::google::protobuf::int32 PlayerStats::eggs_hatched() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.eggs_hatched)
  return eggs_hatched_;
}
 void PlayerStats::set_eggs_hatched(::google::protobuf::int32 value) {
  
  eggs_hatched_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.eggs_hatched)
}

// optional int32 big_magikarp_caught = 13;
void PlayerStats::clear_big_magikarp_caught() {
  big_magikarp_caught_ = 0;
}
 ::google::protobuf::int32 PlayerStats::big_magikarp_caught() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.big_magikarp_caught)
  return big_magikarp_caught_;
}
 void PlayerStats::set_big_magikarp_caught(::google::protobuf::int32 value) {
  
  big_magikarp_caught_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.big_magikarp_caught)
}

// optional int32 battle_attack_won = 14;
void PlayerStats::clear_battle_attack_won() {
  battle_attack_won_ = 0;
}
 ::google::protobuf::int32 PlayerStats::battle_attack_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_attack_won)
  return battle_attack_won_;
}
 void PlayerStats::set_battle_attack_won(::google::protobuf::int32 value) {
  
  battle_attack_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_attack_won)
}

// optional int32 battle_attack_total = 15;
void PlayerStats::clear_battle_attack_total() {
  battle_attack_total_ = 0;
}
 ::google::protobuf::int32 PlayerStats::battle_attack_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_attack_total)
  return battle_attack_total_;
}
 void PlayerStats::set_battle_attack_total(::google::protobuf::int32 value) {
  
  battle_attack_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_attack_total)
}

// optional int32 battle_defended_won = 16;
void PlayerStats::clear_battle_defended_won() {
  battle_defended_won_ = 0;
}
 ::google::protobuf::int32 PlayerStats::battle_defended_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_defended_won)
  return battle_defended_won_;
}
 void PlayerStats::set_battle_defended_won(::google::protobuf::int32 value) {
  
  battle_defended_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_defended_won)
}

// optional int32 battle_training_won = 17;
void PlayerStats::clear_battle_training_won() {
  battle_training_won_ = 0;
}
 ::google::protobuf::int32 PlayerStats::battle_training_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_training_won)
  return battle_training_won_;
}
 void PlayerStats::set_battle_training_won(::google::protobuf::int32 value) {
  
  battle_training_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_training_won)
}

// optional int32 battle_training_total = 18;
void PlayerStats::clear_battle_training_total() {
  battle_training_total_ = 0;
}
 ::google::protobuf::int32 PlayerStats::battle_training_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_training_total)
  return battle_training_total_;
}
 void PlayerStats::set_battle_training_total(::google::protobuf::int32 value) {
  
  battle_training_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_training_total)
}

// optional int32 prestige_raised_total = 19;
void PlayerStats::clear_prestige_raised_total() {
  prestige_raised_total_ = 0;
}
 ::google::protobuf::int32 PlayerStats::prestige_raised_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prestige_raised_total)
  return prestige_raised_total_;
}
 void PlayerStats::set_prestige_raised_total(::google::protobuf::int32 value) {
  
  prestige_raised_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prestige_raised_total)
}

// optional int32 prestige_dropped_total = 20;
void PlayerStats::clear_prestige_dropped_total() {
  prestige_dropped_total_ = 0;
}
 ::google::protobuf::int32 PlayerStats::prestige_dropped_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prestige_dropped_total)
  return prestige_dropped_total_;
}
 void PlayerStats::set_prestige_dropped_total(::google::protobuf::int32 value) {
  
  prestige_dropped_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prestige_dropped_total)
}

// optional int32 pokemon_deployed = 21;
void PlayerStats::clear_pokemon_deployed() {
  pokemon_deployed_ = 0;
}
 ::google::protobuf::int32 PlayerStats::pokemon_deployed() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemon_deployed)
  return pokemon_deployed_;
}
 void PlayerStats::set_pokemon_deployed(::google::protobuf::int32 value) {
  
  pokemon_deployed_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemon_deployed)
}

// optional bytes pokemon_caught_by_type = 22;
void PlayerStats::clear_pokemon_caught_by_type() {
  pokemon_caught_by_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& PlayerStats::pokemon_caught_by_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  return pokemon_caught_by_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerStats::set_pokemon_caught_by_type(const ::std::string& value) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
 void PlayerStats::set_pokemon_caught_by_type(const char* value) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
 void PlayerStats::set_pokemon_caught_by_type(const void* value, size_t size) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
 ::std::string* PlayerStats::mutable_pokemon_caught_by_type() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  return pokemon_caught_by_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PlayerStats::release_pokemon_caught_by_type() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  
  return pokemon_caught_by_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PlayerStats::set_allocated_pokemon_caught_by_type(::std::string* pokemon_caught_by_type) {
  if (pokemon_caught_by_type != NULL) {
    
  } else {
    
  }
  pokemon_caught_by_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pokemon_caught_by_type);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}

// optional int32 small_rattata_caught = 23;
void PlayerStats::clear_small_rattata_caught() {
  small_rattata_caught_ = 0;
}
 ::google::protobuf::int32 PlayerStats::small_rattata_caught() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.small_rattata_caught)
  return small_rattata_caught_;
}
 void PlayerStats::set_small_rattata_caught(::google::protobuf::int32 value) {
  
  small_rattata_caught_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.small_rattata_caught)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Player
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
