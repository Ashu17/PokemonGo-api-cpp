// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Player/PlayerStats.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Player {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();

class PlayerStats;

// ===================================================================

class PlayerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Player.PlayerStats) */ {
 public:
  PlayerStats();
  virtual ~PlayerStats();

  PlayerStats(const PlayerStats& from);

  inline PlayerStats& operator=(const PlayerStats& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerStats& default_instance();

  void Swap(PlayerStats* other);

  // implements Message ----------------------------------------------

  inline PlayerStats* New() const { return New(NULL); }

  PlayerStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerStats& from);
  void MergeFrom(const PlayerStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int64 experience = 2;
  void clear_experience();
  static const int kExperienceFieldNumber = 2;
  ::google::protobuf::int64 experience() const;
  void set_experience(::google::protobuf::int64 value);

  // optional int64 prev_level_xp = 3;
  void clear_prev_level_xp();
  static const int kPrevLevelXpFieldNumber = 3;
  ::google::protobuf::int64 prev_level_xp() const;
  void set_prev_level_xp(::google::protobuf::int64 value);

  // optional int64 next_level_xp = 4;
  void clear_next_level_xp();
  static const int kNextLevelXpFieldNumber = 4;
  ::google::protobuf::int64 next_level_xp() const;
  void set_next_level_xp(::google::protobuf::int64 value);

  // optional float km_walked = 5;
  void clear_km_walked();
  static const int kKmWalkedFieldNumber = 5;
  float km_walked() const;
  void set_km_walked(float value);

  // optional int32 pokemons_encountered = 6;
  void clear_pokemons_encountered();
  static const int kPokemonsEncounteredFieldNumber = 6;
  ::google::protobuf::int32 pokemons_encountered() const;
  void set_pokemons_encountered(::google::protobuf::int32 value);

  // optional int32 unique_pokedex_entries = 7;
  void clear_unique_pokedex_entries();
  static const int kUniquePokedexEntriesFieldNumber = 7;
  ::google::protobuf::int32 unique_pokedex_entries() const;
  void set_unique_pokedex_entries(::google::protobuf::int32 value);

  // optional int32 pokemons_captured = 8;
  void clear_pokemons_captured();
  static const int kPokemonsCapturedFieldNumber = 8;
  ::google::protobuf::int32 pokemons_captured() const;
  void set_pokemons_captured(::google::protobuf::int32 value);

  // optional int32 evolutions = 9;
  void clear_evolutions();
  static const int kEvolutionsFieldNumber = 9;
  ::google::protobuf::int32 evolutions() const;
  void set_evolutions(::google::protobuf::int32 value);

  // optional int32 poke_stop_visits = 10;
  void clear_poke_stop_visits();
  static const int kPokeStopVisitsFieldNumber = 10;
  ::google::protobuf::int32 poke_stop_visits() const;
  void set_poke_stop_visits(::google::protobuf::int32 value);

  // optional int32 pokeballs_thrown = 11;
  void clear_pokeballs_thrown();
  static const int kPokeballsThrownFieldNumber = 11;
  ::google::protobuf::int32 pokeballs_thrown() const;
  void set_pokeballs_thrown(::google::protobuf::int32 value);

  // optional int32 eggs_hatched = 12;
  void clear_eggs_hatched();
  static const int kEggsHatchedFieldNumber = 12;
  ::google::protobuf::int32 eggs_hatched() const;
  void set_eggs_hatched(::google::protobuf::int32 value);

  // optional int32 big_magikarp_caught = 13;
  void clear_big_magikarp_caught();
  static const int kBigMagikarpCaughtFieldNumber = 13;
  ::google::protobuf::int32 big_magikarp_caught() const;
  void set_big_magikarp_caught(::google::protobuf::int32 value);

  // optional int32 battle_attack_won = 14;
  void clear_battle_attack_won();
  static const int kBattleAttackWonFieldNumber = 14;
  ::google::protobuf::int32 battle_attack_won() const;
  void set_battle_attack_won(::google::protobuf::int32 value);

  // optional int32 battle_attack_total = 15;
  void clear_battle_attack_total();
  static const int kBattleAttackTotalFieldNumber = 15;
  ::google::protobuf::int32 battle_attack_total() const;
  void set_battle_attack_total(::google::protobuf::int32 value);

  // optional int32 battle_defended_won = 16;
  void clear_battle_defended_won();
  static const int kBattleDefendedWonFieldNumber = 16;
  ::google::protobuf::int32 battle_defended_won() const;
  void set_battle_defended_won(::google::protobuf::int32 value);

  // optional int32 battle_training_won = 17;
  void clear_battle_training_won();
  static const int kBattleTrainingWonFieldNumber = 17;
  ::google::protobuf::int32 battle_training_won() const;
  void set_battle_training_won(::google::protobuf::int32 value);

  // optional int32 battle_training_total = 18;
  void clear_battle_training_total();
  static const int kBattleTrainingTotalFieldNumber = 18;
  ::google::protobuf::int32 battle_training_total() const;
  void set_battle_training_total(::google::protobuf::int32 value);

  // optional int32 prestige_raised_total = 19;
  void clear_prestige_raised_total();
  static const int kPrestigeRaisedTotalFieldNumber = 19;
  ::google::protobuf::int32 prestige_raised_total() const;
  void set_prestige_raised_total(::google::protobuf::int32 value);

  // optional int32 prestige_dropped_total = 20;
  void clear_prestige_dropped_total();
  static const int kPrestigeDroppedTotalFieldNumber = 20;
  ::google::protobuf::int32 prestige_dropped_total() const;
  void set_prestige_dropped_total(::google::protobuf::int32 value);

  // optional int32 pokemon_deployed = 21;
  void clear_pokemon_deployed();
  static const int kPokemonDeployedFieldNumber = 21;
  ::google::protobuf::int32 pokemon_deployed() const;
  void set_pokemon_deployed(::google::protobuf::int32 value);

  // optional bytes pokemon_caught_by_type = 22;
  void clear_pokemon_caught_by_type();
  static const int kPokemonCaughtByTypeFieldNumber = 22;
  const ::std::string& pokemon_caught_by_type() const;
  void set_pokemon_caught_by_type(const ::std::string& value);
  void set_pokemon_caught_by_type(const char* value);
  void set_pokemon_caught_by_type(const void* value, size_t size);
  ::std::string* mutable_pokemon_caught_by_type();
  ::std::string* release_pokemon_caught_by_type();
  void set_allocated_pokemon_caught_by_type(::std::string* pokemon_caught_by_type);

  // optional int32 small_rattata_caught = 23;
  void clear_small_rattata_caught();
  static const int kSmallRattataCaughtFieldNumber = 23;
  ::google::protobuf::int32 small_rattata_caught() const;
  void set_small_rattata_caught(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Player.PlayerStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 experience_;
  ::google::protobuf::int64 prev_level_xp_;
  ::google::protobuf::int32 level_;
  float km_walked_;
  ::google::protobuf::int64 next_level_xp_;
  ::google::protobuf::int32 pokemons_encountered_;
  ::google::protobuf::int32 unique_pokedex_entries_;
  ::google::protobuf::int32 pokemons_captured_;
  ::google::protobuf::int32 evolutions_;
  ::google::protobuf::int32 poke_stop_visits_;
  ::google::protobuf::int32 pokeballs_thrown_;
  ::google::protobuf::int32 eggs_hatched_;
  ::google::protobuf::int32 big_magikarp_caught_;
  ::google::protobuf::int32 battle_attack_won_;
  ::google::protobuf::int32 battle_attack_total_;
  ::google::protobuf::int32 battle_defended_won_;
  ::google::protobuf::int32 battle_training_won_;
  ::google::protobuf::int32 battle_training_total_;
  ::google::protobuf::int32 prestige_raised_total_;
  ::google::protobuf::int32 prestige_dropped_total_;
  ::google::protobuf::int32 pokemon_deployed_;
  ::google::protobuf::internal::ArenaStringPtr pokemon_caught_by_type_;
  ::google::protobuf::int32 small_rattata_caught_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto();

  void InitAsDefaultInstance();
  static PlayerStats* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerStats

// optional int32 level = 1;
inline void PlayerStats::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.level)
  return level_;
}
inline void PlayerStats::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.level)
}

// optional int64 experience = 2;
inline void PlayerStats::clear_experience() {
  experience_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerStats::experience() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.experience)
  return experience_;
}
inline void PlayerStats::set_experience(::google::protobuf::int64 value) {
  
  experience_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.experience)
}

// optional int64 prev_level_xp = 3;
inline void PlayerStats::clear_prev_level_xp() {
  prev_level_xp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerStats::prev_level_xp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prev_level_xp)
  return prev_level_xp_;
}
inline void PlayerStats::set_prev_level_xp(::google::protobuf::int64 value) {
  
  prev_level_xp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prev_level_xp)
}

// optional int64 next_level_xp = 4;
inline void PlayerStats::clear_next_level_xp() {
  next_level_xp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PlayerStats::next_level_xp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.next_level_xp)
  return next_level_xp_;
}
inline void PlayerStats::set_next_level_xp(::google::protobuf::int64 value) {
  
  next_level_xp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.next_level_xp)
}

// optional float km_walked = 5;
inline void PlayerStats::clear_km_walked() {
  km_walked_ = 0;
}
inline float PlayerStats::km_walked() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.km_walked)
  return km_walked_;
}
inline void PlayerStats::set_km_walked(float value) {
  
  km_walked_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.km_walked)
}

// optional int32 pokemons_encountered = 6;
inline void PlayerStats::clear_pokemons_encountered() {
  pokemons_encountered_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::pokemons_encountered() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemons_encountered)
  return pokemons_encountered_;
}
inline void PlayerStats::set_pokemons_encountered(::google::protobuf::int32 value) {
  
  pokemons_encountered_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemons_encountered)
}

// optional int32 unique_pokedex_entries = 7;
inline void PlayerStats::clear_unique_pokedex_entries() {
  unique_pokedex_entries_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::unique_pokedex_entries() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.unique_pokedex_entries)
  return unique_pokedex_entries_;
}
inline void PlayerStats::set_unique_pokedex_entries(::google::protobuf::int32 value) {
  
  unique_pokedex_entries_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.unique_pokedex_entries)
}

// optional int32 pokemons_captured = 8;
inline void PlayerStats::clear_pokemons_captured() {
  pokemons_captured_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::pokemons_captured() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemons_captured)
  return pokemons_captured_;
}
inline void PlayerStats::set_pokemons_captured(::google::protobuf::int32 value) {
  
  pokemons_captured_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemons_captured)
}

// optional int32 evolutions = 9;
inline void PlayerStats::clear_evolutions() {
  evolutions_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::evolutions() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.evolutions)
  return evolutions_;
}
inline void PlayerStats::set_evolutions(::google::protobuf::int32 value) {
  
  evolutions_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.evolutions)
}

// optional int32 poke_stop_visits = 10;
inline void PlayerStats::clear_poke_stop_visits() {
  poke_stop_visits_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::poke_stop_visits() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.poke_stop_visits)
  return poke_stop_visits_;
}
inline void PlayerStats::set_poke_stop_visits(::google::protobuf::int32 value) {
  
  poke_stop_visits_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.poke_stop_visits)
}

// optional int32 pokeballs_thrown = 11;
inline void PlayerStats::clear_pokeballs_thrown() {
  pokeballs_thrown_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::pokeballs_thrown() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokeballs_thrown)
  return pokeballs_thrown_;
}
inline void PlayerStats::set_pokeballs_thrown(::google::protobuf::int32 value) {
  
  pokeballs_thrown_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokeballs_thrown)
}

// optional int32 eggs_hatched = 12;
inline void PlayerStats::clear_eggs_hatched() {
  eggs_hatched_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::eggs_hatched() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.eggs_hatched)
  return eggs_hatched_;
}
inline void PlayerStats::set_eggs_hatched(::google::protobuf::int32 value) {
  
  eggs_hatched_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.eggs_hatched)
}

// optional int32 big_magikarp_caught = 13;
inline void PlayerStats::clear_big_magikarp_caught() {
  big_magikarp_caught_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::big_magikarp_caught() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.big_magikarp_caught)
  return big_magikarp_caught_;
}
inline void PlayerStats::set_big_magikarp_caught(::google::protobuf::int32 value) {
  
  big_magikarp_caught_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.big_magikarp_caught)
}

// optional int32 battle_attack_won = 14;
inline void PlayerStats::clear_battle_attack_won() {
  battle_attack_won_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::battle_attack_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_attack_won)
  return battle_attack_won_;
}
inline void PlayerStats::set_battle_attack_won(::google::protobuf::int32 value) {
  
  battle_attack_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_attack_won)
}

// optional int32 battle_attack_total = 15;
inline void PlayerStats::clear_battle_attack_total() {
  battle_attack_total_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::battle_attack_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_attack_total)
  return battle_attack_total_;
}
inline void PlayerStats::set_battle_attack_total(::google::protobuf::int32 value) {
  
  battle_attack_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_attack_total)
}

// optional int32 battle_defended_won = 16;
inline void PlayerStats::clear_battle_defended_won() {
  battle_defended_won_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::battle_defended_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_defended_won)
  return battle_defended_won_;
}
inline void PlayerStats::set_battle_defended_won(::google::protobuf::int32 value) {
  
  battle_defended_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_defended_won)
}

// optional int32 battle_training_won = 17;
inline void PlayerStats::clear_battle_training_won() {
  battle_training_won_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::battle_training_won() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_training_won)
  return battle_training_won_;
}
inline void PlayerStats::set_battle_training_won(::google::protobuf::int32 value) {
  
  battle_training_won_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_training_won)
}

// optional int32 battle_training_total = 18;
inline void PlayerStats::clear_battle_training_total() {
  battle_training_total_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::battle_training_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.battle_training_total)
  return battle_training_total_;
}
inline void PlayerStats::set_battle_training_total(::google::protobuf::int32 value) {
  
  battle_training_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.battle_training_total)
}

// optional int32 prestige_raised_total = 19;
inline void PlayerStats::clear_prestige_raised_total() {
  prestige_raised_total_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::prestige_raised_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prestige_raised_total)
  return prestige_raised_total_;
}
inline void PlayerStats::set_prestige_raised_total(::google::protobuf::int32 value) {
  
  prestige_raised_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prestige_raised_total)
}

// optional int32 prestige_dropped_total = 20;
inline void PlayerStats::clear_prestige_dropped_total() {
  prestige_dropped_total_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::prestige_dropped_total() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.prestige_dropped_total)
  return prestige_dropped_total_;
}
inline void PlayerStats::set_prestige_dropped_total(::google::protobuf::int32 value) {
  
  prestige_dropped_total_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.prestige_dropped_total)
}

// optional int32 pokemon_deployed = 21;
inline void PlayerStats::clear_pokemon_deployed() {
  pokemon_deployed_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::pokemon_deployed() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemon_deployed)
  return pokemon_deployed_;
}
inline void PlayerStats::set_pokemon_deployed(::google::protobuf::int32 value) {
  
  pokemon_deployed_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemon_deployed)
}

// optional bytes pokemon_caught_by_type = 22;
inline void PlayerStats::clear_pokemon_caught_by_type() {
  pokemon_caught_by_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerStats::pokemon_caught_by_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  return pokemon_caught_by_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerStats::set_pokemon_caught_by_type(const ::std::string& value) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
inline void PlayerStats::set_pokemon_caught_by_type(const char* value) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
inline void PlayerStats::set_pokemon_caught_by_type(const void* value, size_t size) {
  
  pokemon_caught_by_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}
inline ::std::string* PlayerStats::mutable_pokemon_caught_by_type() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  return pokemon_caught_by_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerStats::release_pokemon_caught_by_type() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
  
  return pokemon_caught_by_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerStats::set_allocated_pokemon_caught_by_type(::std::string* pokemon_caught_by_type) {
  if (pokemon_caught_by_type != NULL) {
    
  } else {
    
  }
  pokemon_caught_by_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pokemon_caught_by_type);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Player.PlayerStats.pokemon_caught_by_type)
}

// optional int32 small_rattata_caught = 23;
inline void PlayerStats::clear_small_rattata_caught() {
  small_rattata_caught_ = 0;
}
inline ::google::protobuf::int32 PlayerStats::small_rattata_caught() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Player.PlayerStats.small_rattata_caught)
  return small_rattata_caught_;
}
inline void PlayerStats::set_small_rattata_caught(::google::protobuf::int32 value) {
  
  small_rattata_caught_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Player.PlayerStats.small_rattata_caught)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Player
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fPlayer_2fPlayerStats_2eproto__INCLUDED
