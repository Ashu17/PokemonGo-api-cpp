// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Battle/BattleParticipant.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Data/Battle/BattlePokemonInfo.pb.h"
#include "POGOProtos/Data/Player/PlayerPublicProfile.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Battle {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();

class BattleParticipant;

// ===================================================================

class BattleParticipant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Battle.BattleParticipant) */ {
 public:
  BattleParticipant();
  virtual ~BattleParticipant();

  BattleParticipant(const BattleParticipant& from);

  inline BattleParticipant& operator=(const BattleParticipant& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BattleParticipant& default_instance();

  void Swap(BattleParticipant* other);

  // implements Message ----------------------------------------------

  inline BattleParticipant* New() const { return New(NULL); }

  BattleParticipant* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BattleParticipant& from);
  void MergeFrom(const BattleParticipant& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BattleParticipant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
  bool has_active_pokemon() const;
  void clear_active_pokemon();
  static const int kActivePokemonFieldNumber = 1;
  const ::POGOProtos::Data::Battle::BattlePokemonInfo& active_pokemon() const;
  ::POGOProtos::Data::Battle::BattlePokemonInfo* mutable_active_pokemon();
  ::POGOProtos::Data::Battle::BattlePokemonInfo* release_active_pokemon();
  void set_allocated_active_pokemon(::POGOProtos::Data::Battle::BattlePokemonInfo* active_pokemon);

  // optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
  bool has_trainer_public_profile() const;
  void clear_trainer_public_profile();
  static const int kTrainerPublicProfileFieldNumber = 2;
  const ::POGOProtos::Data::Player::PlayerPublicProfile& trainer_public_profile() const;
  ::POGOProtos::Data::Player::PlayerPublicProfile* mutable_trainer_public_profile();
  ::POGOProtos::Data::Player::PlayerPublicProfile* release_trainer_public_profile();
  void set_allocated_trainer_public_profile(::POGOProtos::Data::Player::PlayerPublicProfile* trainer_public_profile);

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
  int reverse_pokemon_size() const;
  void clear_reverse_pokemon();
  static const int kReversePokemonFieldNumber = 3;
  const ::POGOProtos::Data::Battle::BattlePokemonInfo& reverse_pokemon(int index) const;
  ::POGOProtos::Data::Battle::BattlePokemonInfo* mutable_reverse_pokemon(int index);
  ::POGOProtos::Data::Battle::BattlePokemonInfo* add_reverse_pokemon();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
      mutable_reverse_pokemon();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
      reverse_pokemon() const;

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
  int defeated_pokemon_size() const;
  void clear_defeated_pokemon();
  static const int kDefeatedPokemonFieldNumber = 4;
  const ::POGOProtos::Data::Battle::BattlePokemonInfo& defeated_pokemon(int index) const;
  ::POGOProtos::Data::Battle::BattlePokemonInfo* mutable_defeated_pokemon(int index);
  ::POGOProtos::Data::Battle::BattlePokemonInfo* add_defeated_pokemon();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
      mutable_defeated_pokemon();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
      defeated_pokemon() const;

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Battle.BattleParticipant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::POGOProtos::Data::Battle::BattlePokemonInfo* active_pokemon_;
  ::POGOProtos::Data::Player::PlayerPublicProfile* trainer_public_profile_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo > reverse_pokemon_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo > defeated_pokemon_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();

  void InitAsDefaultInstance();
  static BattleParticipant* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleParticipant

// optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
inline bool BattleParticipant::has_active_pokemon() const {
  return !_is_default_instance_ && active_pokemon_ != NULL;
}
inline void BattleParticipant::clear_active_pokemon() {
  if (GetArenaNoVirtual() == NULL && active_pokemon_ != NULL) delete active_pokemon_;
  active_pokemon_ = NULL;
}
inline const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::active_pokemon() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  return active_pokemon_ != NULL ? *active_pokemon_ : *default_instance_->active_pokemon_;
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_active_pokemon() {
  
  if (active_pokemon_ == NULL) {
    active_pokemon_ = new ::POGOProtos::Data::Battle::BattlePokemonInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  return active_pokemon_;
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::release_active_pokemon() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  
  ::POGOProtos::Data::Battle::BattlePokemonInfo* temp = active_pokemon_;
  active_pokemon_ = NULL;
  return temp;
}
inline void BattleParticipant::set_allocated_active_pokemon(::POGOProtos::Data::Battle::BattlePokemonInfo* active_pokemon) {
  delete active_pokemon_;
  active_pokemon_ = active_pokemon;
  if (active_pokemon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
}

// optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
inline bool BattleParticipant::has_trainer_public_profile() const {
  return !_is_default_instance_ && trainer_public_profile_ != NULL;
}
inline void BattleParticipant::clear_trainer_public_profile() {
  if (GetArenaNoVirtual() == NULL && trainer_public_profile_ != NULL) delete trainer_public_profile_;
  trainer_public_profile_ = NULL;
}
inline const ::POGOProtos::Data::Player::PlayerPublicProfile& BattleParticipant::trainer_public_profile() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  return trainer_public_profile_ != NULL ? *trainer_public_profile_ : *default_instance_->trainer_public_profile_;
}
inline ::POGOProtos::Data::Player::PlayerPublicProfile* BattleParticipant::mutable_trainer_public_profile() {
  
  if (trainer_public_profile_ == NULL) {
    trainer_public_profile_ = new ::POGOProtos::Data::Player::PlayerPublicProfile;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  return trainer_public_profile_;
}
inline ::POGOProtos::Data::Player::PlayerPublicProfile* BattleParticipant::release_trainer_public_profile() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  
  ::POGOProtos::Data::Player::PlayerPublicProfile* temp = trainer_public_profile_;
  trainer_public_profile_ = NULL;
  return temp;
}
inline void BattleParticipant::set_allocated_trainer_public_profile(::POGOProtos::Data::Player::PlayerPublicProfile* trainer_public_profile) {
  delete trainer_public_profile_;
  trainer_public_profile_ = trainer_public_profile;
  if (trainer_public_profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
}

// repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
inline int BattleParticipant::reverse_pokemon_size() const {
  return reverse_pokemon_.size();
}
inline void BattleParticipant::clear_reverse_pokemon() {
  reverse_pokemon_.Clear();
}
inline const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::reverse_pokemon(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Get(index);
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_reverse_pokemon(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Mutable(index);
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::add_reverse_pokemon() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
BattleParticipant::mutable_reverse_pokemon() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return &reverse_pokemon_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
BattleParticipant::reverse_pokemon() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_;
}

// repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
inline int BattleParticipant::defeated_pokemon_size() const {
  return defeated_pokemon_.size();
}
inline void BattleParticipant::clear_defeated_pokemon() {
  defeated_pokemon_.Clear();
}
inline const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::defeated_pokemon(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Get(index);
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_defeated_pokemon(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Mutable(index);
}
inline ::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::add_defeated_pokemon() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
BattleParticipant::mutable_defeated_pokemon() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return &defeated_pokemon_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
BattleParticipant::defeated_pokemon() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Battle
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto__INCLUDED
