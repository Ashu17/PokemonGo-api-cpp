// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Battle/BattleAction.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Data/Battle/BattleAction.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Battle {

namespace {

const ::google::protobuf::Descriptor* BattleAction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleAction_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() {
  protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Data/Battle/BattleAction.proto");
  GOOGLE_CHECK(file != NULL);
  BattleAction_descriptor_ = file->message_type(0);
  static const int BattleAction_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, action_start_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, duration_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, energy_delta_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, attacker_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, target_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, active_pokemon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, player_joined_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, battle_results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, damage_windows_start_timestamp_mss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, damage_windows_end_timestamp_mss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, player_left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, target_pokemon_id_),
  };
  BattleAction_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleAction_descriptor_,
      BattleAction::default_instance_,
      BattleAction_offsets_,
      -1,
      -1,
      -1,
      sizeof(BattleAction),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleAction, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleAction_descriptor_, &BattleAction::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() {
  delete BattleAction::default_instance_;
  delete BattleAction_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleResults_2eproto();
  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleActionType_2eproto();
  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n)POGOProtos/Data/Battle/BattleAction.pr"
    "oto\022\026POGOProtos.Data.Battle\032*POGOProtos/"
    "Data/Battle/BattleResults.proto\032-POGOPro"
    "tos/Data/Battle/BattleActionType.proto\032."
    "POGOProtos/Data/Battle/BattleParticipant"
    ".proto\"\205\004\n\014BattleAction\0226\n\004Type\030\001 \001(\0162(."
    "POGOProtos.Data.Battle.BattleActionType\022"
    "\027\n\017action_start_ms\030\002 \001(\003\022\023\n\013duration_ms\030"
    "\003 \001(\005\022\024\n\014energy_delta\030\005 \001(\005\022\026\n\016attacker_"
    "index\030\006 \001(\005\022\024\n\014target_index\030\007 \001(\005\022\031\n\021act"
    "ive_pokemon_id\030\010 \001(\006\022@\n\rplayer_joined\030\t "
    "\001(\0132).POGOProtos.Data.Battle.BattleParti"
    "cipant\022=\n\016battle_results\030\n \001(\0132%.POGOPro"
    "tos.Data.Battle.BattleResults\022*\n\"damage_"
    "windows_start_timestamp_mss\030\013 \001(\003\022(\n dam"
    "age_windows_end_timestamp_mss\030\014 \001(\003\022>\n\013p"
    "layer_left\030\r \001(\0132).POGOProtos.Data.Battl"
    "e.BattleParticipant\022\031\n\021target_pokemon_id"
    "\030\016 \001(\006b\006proto3", 734);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Data/Battle/BattleAction.proto", &protobuf_RegisterTypes);
  BattleAction::default_instance_ = new BattleAction();
  BattleAction::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto() {
    protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleAction::kTypeFieldNumber;
const int BattleAction::kActionStartMsFieldNumber;
const int BattleAction::kDurationMsFieldNumber;
const int BattleAction::kEnergyDeltaFieldNumber;
const int BattleAction::kAttackerIndexFieldNumber;
const int BattleAction::kTargetIndexFieldNumber;
const int BattleAction::kActivePokemonIdFieldNumber;
const int BattleAction::kPlayerJoinedFieldNumber;
const int BattleAction::kBattleResultsFieldNumber;
const int BattleAction::kDamageWindowsStartTimestampMssFieldNumber;
const int BattleAction::kDamageWindowsEndTimestampMssFieldNumber;
const int BattleAction::kPlayerLeftFieldNumber;
const int BattleAction::kTargetPokemonIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleAction::BattleAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Data.Battle.BattleAction)
}

void BattleAction::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  player_joined_ = const_cast< ::POGOProtos::Data::Battle::BattleParticipant*>(&::POGOProtos::Data::Battle::BattleParticipant::default_instance());
  battle_results_ = const_cast< ::POGOProtos::Data::Battle::BattleResults*>(&::POGOProtos::Data::Battle::BattleResults::default_instance());
  player_left_ = const_cast< ::POGOProtos::Data::Battle::BattleParticipant*>(&::POGOProtos::Data::Battle::BattleParticipant::default_instance());
}

BattleAction::BattleAction(const BattleAction& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Data.Battle.BattleAction)
}

void BattleAction::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  action_start_ms_ = GOOGLE_LONGLONG(0);
  duration_ms_ = 0;
  energy_delta_ = 0;
  attacker_index_ = 0;
  target_index_ = 0;
  active_pokemon_id_ = GOOGLE_ULONGLONG(0);
  player_joined_ = NULL;
  battle_results_ = NULL;
  damage_windows_start_timestamp_mss_ = GOOGLE_LONGLONG(0);
  damage_windows_end_timestamp_mss_ = GOOGLE_LONGLONG(0);
  player_left_ = NULL;
  target_pokemon_id_ = GOOGLE_ULONGLONG(0);
}

BattleAction::~BattleAction() {
  // @@protoc_insertion_point(destructor:POGOProtos.Data.Battle.BattleAction)
  SharedDtor();
}

void BattleAction::SharedDtor() {
  if (this != default_instance_) {
    delete player_joined_;
    delete battle_results_;
    delete player_left_;
  }
}

void BattleAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleAction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleAction_descriptor_;
}

const BattleAction& BattleAction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleAction_2eproto();
  return *default_instance_;
}

BattleAction* BattleAction::default_instance_ = NULL;

BattleAction* BattleAction::New(::google::protobuf::Arena* arena) const {
  BattleAction* n = new BattleAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleAction::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Data.Battle.BattleAction)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BattleAction, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BattleAction*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(action_start_ms_, active_pokemon_id_);
  target_index_ = 0;
  if (GetArenaNoVirtual() == NULL && player_joined_ != NULL) delete player_joined_;
  player_joined_ = NULL;
  ZR_(damage_windows_start_timestamp_mss_, damage_windows_end_timestamp_mss_);
  if (GetArenaNoVirtual() == NULL && battle_results_ != NULL) delete battle_results_;
  battle_results_ = NULL;
  if (GetArenaNoVirtual() == NULL && player_left_ != NULL) delete player_left_;
  player_left_ = NULL;
  target_pokemon_id_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool BattleAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Data.Battle.BattleAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Data.Battle.BattleActionType Type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::POGOProtos::Data::Battle::BattleActionType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_action_start_ms;
        break;
      }

      // optional int64 action_start_ms = 2;
      case 2: {
        if (tag == 16) {
         parse_action_start_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &action_start_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_duration_ms;
        break;
      }

      // optional int32 duration_ms = 3;
      case 3: {
        if (tag == 24) {
         parse_duration_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_energy_delta;
        break;
      }

      // optional int32 energy_delta = 5;
      case 5: {
        if (tag == 40) {
         parse_energy_delta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &energy_delta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_attacker_index;
        break;
      }

      // optional int32 attacker_index = 6;
      case 6: {
        if (tag == 48) {
         parse_attacker_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attacker_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_target_index;
        break;
      }

      // optional int32 target_index = 7;
      case 7: {
        if (tag == 56) {
         parse_target_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_index_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_active_pokemon_id;
        break;
      }

      // optional fixed64 active_pokemon_id = 8;
      case 8: {
        if (tag == 65) {
         parse_active_pokemon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &active_pokemon_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_player_joined;
        break;
      }

      // optional .POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
      case 9: {
        if (tag == 74) {
         parse_player_joined:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_joined()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_battle_results;
        break;
      }

      // optional .POGOProtos.Data.Battle.BattleResults battle_results = 10;
      case 10: {
        if (tag == 82) {
         parse_battle_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battle_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_damage_windows_start_timestamp_mss;
        break;
      }

      // optional int64 damage_windows_start_timestamp_mss = 11;
      case 11: {
        if (tag == 88) {
         parse_damage_windows_start_timestamp_mss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &damage_windows_start_timestamp_mss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_damage_windows_end_timestamp_mss;
        break;
      }

      // optional int64 damage_windows_end_timestamp_mss = 12;
      case 12: {
        if (tag == 96) {
         parse_damage_windows_end_timestamp_mss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &damage_windows_end_timestamp_mss_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_player_left;
        break;
      }

      // optional .POGOProtos.Data.Battle.BattleParticipant player_left = 13;
      case 13: {
        if (tag == 106) {
         parse_player_left:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_left()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_target_pokemon_id;
        break;
      }

      // optional fixed64 target_pokemon_id = 14;
      case 14: {
        if (tag == 113) {
         parse_target_pokemon_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_pokemon_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Data.Battle.BattleAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Data.Battle.BattleAction)
  return false;
#undef DO_
}

void BattleAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Data.Battle.BattleAction)
  // optional .POGOProtos.Data.Battle.BattleActionType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int64 action_start_ms = 2;
  if (this->action_start_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->action_start_ms(), output);
  }

  // optional int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->duration_ms(), output);
  }

  // optional int32 energy_delta = 5;
  if (this->energy_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->energy_delta(), output);
  }

  // optional int32 attacker_index = 6;
  if (this->attacker_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->attacker_index(), output);
  }

  // optional int32 target_index = 7;
  if (this->target_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->target_index(), output);
  }

  // optional fixed64 active_pokemon_id = 8;
  if (this->active_pokemon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->active_pokemon_id(), output);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
  if (this->has_player_joined()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->player_joined_, output);
  }

  // optional .POGOProtos.Data.Battle.BattleResults battle_results = 10;
  if (this->has_battle_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->battle_results_, output);
  }

  // optional int64 damage_windows_start_timestamp_mss = 11;
  if (this->damage_windows_start_timestamp_mss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->damage_windows_start_timestamp_mss(), output);
  }

  // optional int64 damage_windows_end_timestamp_mss = 12;
  if (this->damage_windows_end_timestamp_mss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->damage_windows_end_timestamp_mss(), output);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_left = 13;
  if (this->has_player_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->player_left_, output);
  }

  // optional fixed64 target_pokemon_id = 14;
  if (this->target_pokemon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(14, this->target_pokemon_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Data.Battle.BattleAction)
}

::google::protobuf::uint8* BattleAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Data.Battle.BattleAction)
  // optional .POGOProtos.Data.Battle.BattleActionType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int64 action_start_ms = 2;
  if (this->action_start_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->action_start_ms(), target);
  }

  // optional int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->duration_ms(), target);
  }

  // optional int32 energy_delta = 5;
  if (this->energy_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->energy_delta(), target);
  }

  // optional int32 attacker_index = 6;
  if (this->attacker_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->attacker_index(), target);
  }

  // optional int32 target_index = 7;
  if (this->target_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->target_index(), target);
  }

  // optional fixed64 active_pokemon_id = 8;
  if (this->active_pokemon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->active_pokemon_id(), target);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
  if (this->has_player_joined()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->player_joined_, false, target);
  }

  // optional .POGOProtos.Data.Battle.BattleResults battle_results = 10;
  if (this->has_battle_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->battle_results_, false, target);
  }

  // optional int64 damage_windows_start_timestamp_mss = 11;
  if (this->damage_windows_start_timestamp_mss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->damage_windows_start_timestamp_mss(), target);
  }

  // optional int64 damage_windows_end_timestamp_mss = 12;
  if (this->damage_windows_end_timestamp_mss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->damage_windows_end_timestamp_mss(), target);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_left = 13;
  if (this->has_player_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->player_left_, false, target);
  }

  // optional fixed64 target_pokemon_id = 14;
  if (this->target_pokemon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(14, this->target_pokemon_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Data.Battle.BattleAction)
  return target;
}

int BattleAction::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Data.Battle.BattleAction)
  int total_size = 0;

  // optional .POGOProtos.Data.Battle.BattleActionType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional int64 action_start_ms = 2;
  if (this->action_start_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->action_start_ms());
  }

  // optional int32 duration_ms = 3;
  if (this->duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration_ms());
  }

  // optional int32 energy_delta = 5;
  if (this->energy_delta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->energy_delta());
  }

  // optional int32 attacker_index = 6;
  if (this->attacker_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attacker_index());
  }

  // optional int32 target_index = 7;
  if (this->target_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->target_index());
  }

  // optional fixed64 active_pokemon_id = 8;
  if (this->active_pokemon_id() != 0) {
    total_size += 1 + 8;
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
  if (this->has_player_joined()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_joined_);
  }

  // optional .POGOProtos.Data.Battle.BattleResults battle_results = 10;
  if (this->has_battle_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->battle_results_);
  }

  // optional int64 damage_windows_start_timestamp_mss = 11;
  if (this->damage_windows_start_timestamp_mss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->damage_windows_start_timestamp_mss());
  }

  // optional int64 damage_windows_end_timestamp_mss = 12;
  if (this->damage_windows_end_timestamp_mss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->damage_windows_end_timestamp_mss());
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant player_left = 13;
  if (this->has_player_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_left_);
  }

  // optional fixed64 target_pokemon_id = 14;
  if (this->target_pokemon_id() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Data.Battle.BattleAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleAction* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Data.Battle.BattleAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Data.Battle.BattleAction)
    MergeFrom(*source);
  }
}

void BattleAction::MergeFrom(const BattleAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Data.Battle.BattleAction)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.action_start_ms() != 0) {
    set_action_start_ms(from.action_start_ms());
  }
  if (from.duration_ms() != 0) {
    set_duration_ms(from.duration_ms());
  }
  if (from.energy_delta() != 0) {
    set_energy_delta(from.energy_delta());
  }
  if (from.attacker_index() != 0) {
    set_attacker_index(from.attacker_index());
  }
  if (from.target_index() != 0) {
    set_target_index(from.target_index());
  }
  if (from.active_pokemon_id() != 0) {
    set_active_pokemon_id(from.active_pokemon_id());
  }
  if (from.has_player_joined()) {
    mutable_player_joined()->::POGOProtos::Data::Battle::BattleParticipant::MergeFrom(from.player_joined());
  }
  if (from.has_battle_results()) {
    mutable_battle_results()->::POGOProtos::Data::Battle::BattleResults::MergeFrom(from.battle_results());
  }
  if (from.damage_windows_start_timestamp_mss() != 0) {
    set_damage_windows_start_timestamp_mss(from.damage_windows_start_timestamp_mss());
  }
  if (from.damage_windows_end_timestamp_mss() != 0) {
    set_damage_windows_end_timestamp_mss(from.damage_windows_end_timestamp_mss());
  }
  if (from.has_player_left()) {
    mutable_player_left()->::POGOProtos::Data::Battle::BattleParticipant::MergeFrom(from.player_left());
  }
  if (from.target_pokemon_id() != 0) {
    set_target_pokemon_id(from.target_pokemon_id());
  }
}

void BattleAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Data.Battle.BattleAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleAction::CopyFrom(const BattleAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Data.Battle.BattleAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleAction::IsInitialized() const {

  return true;
}

void BattleAction::Swap(BattleAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleAction::InternalSwap(BattleAction* other) {
  std::swap(type_, other->type_);
  std::swap(action_start_ms_, other->action_start_ms_);
  std::swap(duration_ms_, other->duration_ms_);
  std::swap(energy_delta_, other->energy_delta_);
  std::swap(attacker_index_, other->attacker_index_);
  std::swap(target_index_, other->target_index_);
  std::swap(active_pokemon_id_, other->active_pokemon_id_);
  std::swap(player_joined_, other->player_joined_);
  std::swap(battle_results_, other->battle_results_);
  std::swap(damage_windows_start_timestamp_mss_, other->damage_windows_start_timestamp_mss_);
  std::swap(damage_windows_end_timestamp_mss_, other->damage_windows_end_timestamp_mss_);
  std::swap(player_left_, other->player_left_);
  std::swap(target_pokemon_id_, other->target_pokemon_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleAction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleAction_descriptor_;
  metadata.reflection = BattleAction_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleAction

// optional .POGOProtos.Data.Battle.BattleActionType Type = 1;
void BattleAction::clear_type() {
  type_ = 0;
}
 ::POGOProtos::Data::Battle::BattleActionType BattleAction::type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.Type)
  return static_cast< ::POGOProtos::Data::Battle::BattleActionType >(type_);
}
 void BattleAction::set_type(::POGOProtos::Data::Battle::BattleActionType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.Type)
}

// optional int64 action_start_ms = 2;
void BattleAction::clear_action_start_ms() {
  action_start_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 BattleAction::action_start_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.action_start_ms)
  return action_start_ms_;
}
 void BattleAction::set_action_start_ms(::google::protobuf::int64 value) {
  
  action_start_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.action_start_ms)
}

// optional int32 duration_ms = 3;
void BattleAction::clear_duration_ms() {
  duration_ms_ = 0;
}
 ::google::protobuf::int32 BattleAction::duration_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.duration_ms)
  return duration_ms_;
}
 void BattleAction::set_duration_ms(::google::protobuf::int32 value) {
  
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.duration_ms)
}

// optional int32 energy_delta = 5;
void BattleAction::clear_energy_delta() {
  energy_delta_ = 0;
}
 ::google::protobuf::int32 BattleAction::energy_delta() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.energy_delta)
  return energy_delta_;
}
 void BattleAction::set_energy_delta(::google::protobuf::int32 value) {
  
  energy_delta_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.energy_delta)
}

// optional int32 attacker_index = 6;
void BattleAction::clear_attacker_index() {
  attacker_index_ = 0;
}
 ::google::protobuf::int32 BattleAction::attacker_index() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.attacker_index)
  return attacker_index_;
}
 void BattleAction::set_attacker_index(::google::protobuf::int32 value) {
  
  attacker_index_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.attacker_index)
}

// optional int32 target_index = 7;
void BattleAction::clear_target_index() {
  target_index_ = 0;
}
 ::google::protobuf::int32 BattleAction::target_index() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.target_index)
  return target_index_;
}
 void BattleAction::set_target_index(::google::protobuf::int32 value) {
  
  target_index_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.target_index)
}

// optional fixed64 active_pokemon_id = 8;
void BattleAction::clear_active_pokemon_id() {
  active_pokemon_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleAction::active_pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.active_pokemon_id)
  return active_pokemon_id_;
}
 void BattleAction::set_active_pokemon_id(::google::protobuf::uint64 value) {
  
  active_pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.active_pokemon_id)
}

// optional .POGOProtos.Data.Battle.BattleParticipant player_joined = 9;
bool BattleAction::has_player_joined() const {
  return !_is_default_instance_ && player_joined_ != NULL;
}
void BattleAction::clear_player_joined() {
  if (GetArenaNoVirtual() == NULL && player_joined_ != NULL) delete player_joined_;
  player_joined_ = NULL;
}
const ::POGOProtos::Data::Battle::BattleParticipant& BattleAction::player_joined() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.player_joined)
  return player_joined_ != NULL ? *player_joined_ : *default_instance_->player_joined_;
}
::POGOProtos::Data::Battle::BattleParticipant* BattleAction::mutable_player_joined() {
  
  if (player_joined_ == NULL) {
    player_joined_ = new ::POGOProtos::Data::Battle::BattleParticipant;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleAction.player_joined)
  return player_joined_;
}
::POGOProtos::Data::Battle::BattleParticipant* BattleAction::release_player_joined() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleAction.player_joined)
  
  ::POGOProtos::Data::Battle::BattleParticipant* temp = player_joined_;
  player_joined_ = NULL;
  return temp;
}
void BattleAction::set_allocated_player_joined(::POGOProtos::Data::Battle::BattleParticipant* player_joined) {
  delete player_joined_;
  player_joined_ = player_joined;
  if (player_joined) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleAction.player_joined)
}

// optional .POGOProtos.Data.Battle.BattleResults battle_results = 10;
bool BattleAction::has_battle_results() const {
  return !_is_default_instance_ && battle_results_ != NULL;
}
void BattleAction::clear_battle_results() {
  if (GetArenaNoVirtual() == NULL && battle_results_ != NULL) delete battle_results_;
  battle_results_ = NULL;
}
const ::POGOProtos::Data::Battle::BattleResults& BattleAction::battle_results() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.battle_results)
  return battle_results_ != NULL ? *battle_results_ : *default_instance_->battle_results_;
}
::POGOProtos::Data::Battle::BattleResults* BattleAction::mutable_battle_results() {
  
  if (battle_results_ == NULL) {
    battle_results_ = new ::POGOProtos::Data::Battle::BattleResults;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleAction.battle_results)
  return battle_results_;
}
::POGOProtos::Data::Battle::BattleResults* BattleAction::release_battle_results() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleAction.battle_results)
  
  ::POGOProtos::Data::Battle::BattleResults* temp = battle_results_;
  battle_results_ = NULL;
  return temp;
}
void BattleAction::set_allocated_battle_results(::POGOProtos::Data::Battle::BattleResults* battle_results) {
  delete battle_results_;
  battle_results_ = battle_results;
  if (battle_results) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleAction.battle_results)
}

// optional int64 damage_windows_start_timestamp_mss = 11;
void BattleAction::clear_damage_windows_start_timestamp_mss() {
  damage_windows_start_timestamp_mss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 BattleAction::damage_windows_start_timestamp_mss() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.damage_windows_start_timestamp_mss)
  return damage_windows_start_timestamp_mss_;
}
 void BattleAction::set_damage_windows_start_timestamp_mss(::google::protobuf::int64 value) {
  
  damage_windows_start_timestamp_mss_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.damage_windows_start_timestamp_mss)
}

// optional int64 damage_windows_end_timestamp_mss = 12;
void BattleAction::clear_damage_windows_end_timestamp_mss() {
  damage_windows_end_timestamp_mss_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 BattleAction::damage_windows_end_timestamp_mss() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.damage_windows_end_timestamp_mss)
  return damage_windows_end_timestamp_mss_;
}
 void BattleAction::set_damage_windows_end_timestamp_mss(::google::protobuf::int64 value) {
  
  damage_windows_end_timestamp_mss_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.damage_windows_end_timestamp_mss)
}

// optional .POGOProtos.Data.Battle.BattleParticipant player_left = 13;
bool BattleAction::has_player_left() const {
  return !_is_default_instance_ && player_left_ != NULL;
}
void BattleAction::clear_player_left() {
  if (GetArenaNoVirtual() == NULL && player_left_ != NULL) delete player_left_;
  player_left_ = NULL;
}
const ::POGOProtos::Data::Battle::BattleParticipant& BattleAction::player_left() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.player_left)
  return player_left_ != NULL ? *player_left_ : *default_instance_->player_left_;
}
::POGOProtos::Data::Battle::BattleParticipant* BattleAction::mutable_player_left() {
  
  if (player_left_ == NULL) {
    player_left_ = new ::POGOProtos::Data::Battle::BattleParticipant;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleAction.player_left)
  return player_left_;
}
::POGOProtos::Data::Battle::BattleParticipant* BattleAction::release_player_left() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleAction.player_left)
  
  ::POGOProtos::Data::Battle::BattleParticipant* temp = player_left_;
  player_left_ = NULL;
  return temp;
}
void BattleAction::set_allocated_player_left(::POGOProtos::Data::Battle::BattleParticipant* player_left) {
  delete player_left_;
  player_left_ = player_left;
  if (player_left) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleAction.player_left)
}

// optional fixed64 target_pokemon_id = 14;
void BattleAction::clear_target_pokemon_id() {
  target_pokemon_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 BattleAction::target_pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleAction.target_pokemon_id)
  return target_pokemon_id_;
}
 void BattleAction::set_target_pokemon_id(::google::protobuf::uint64 value) {
  
  target_pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Battle.BattleAction.target_pokemon_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Battle
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
