// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Battle/BattleParticipant.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Data/Battle/BattleParticipant.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Battle {

namespace {

const ::google::protobuf::Descriptor* BattleParticipant_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BattleParticipant_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() {
  protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Data/Battle/BattleParticipant.proto");
  GOOGLE_CHECK(file != NULL);
  BattleParticipant_descriptor_ = file->message_type(0);
  static const int BattleParticipant_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, active_pokemon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, trainer_public_profile_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, reverse_pokemon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, defeated_pokemon_),
  };
  BattleParticipant_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BattleParticipant_descriptor_,
      BattleParticipant::default_instance_,
      BattleParticipant_offsets_,
      -1,
      -1,
      -1,
      sizeof(BattleParticipant),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BattleParticipant, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BattleParticipant_descriptor_, &BattleParticipant::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() {
  delete BattleParticipant::default_instance_;
  delete BattleParticipant_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattlePokemonInfo_2eproto();
  ::POGOProtos::Data::Player::protobuf_AddDesc_POGOProtos_2fData_2fPlayer_2fPlayerPublicProfile_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n.POGOProtos/Data/Battle/BattleParticipa"
    "nt.proto\022\026POGOProtos.Data.Battle\032.POGOPr"
    "otos/Data/Battle/BattlePokemonInfo.proto"
    "\0320POGOProtos/Data/Player/PlayerPublicPro"
    "file.proto\"\254\002\n\021BattleParticipant\022A\n\016acti"
    "ve_pokemon\030\001 \001(\0132).POGOProtos.Data.Battl"
    "e.BattlePokemonInfo\022K\n\026trainer_public_pr"
    "ofile\030\002 \001(\0132+.POGOProtos.Data.Player.Pla"
    "yerPublicProfile\022B\n\017reverse_pokemon\030\003 \003("
    "\0132).POGOProtos.Data.Battle.BattlePokemon"
    "Info\022C\n\020defeated_pokemon\030\004 \003(\0132).POGOPro"
    "tos.Data.Battle.BattlePokemonInfob\006proto"
    "3", 481);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Data/Battle/BattleParticipant.proto", &protobuf_RegisterTypes);
  BattleParticipant::default_instance_ = new BattleParticipant();
  BattleParticipant::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto() {
    protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BattleParticipant::kActivePokemonFieldNumber;
const int BattleParticipant::kTrainerPublicProfileFieldNumber;
const int BattleParticipant::kReversePokemonFieldNumber;
const int BattleParticipant::kDefeatedPokemonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BattleParticipant::BattleParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Data.Battle.BattleParticipant)
}

void BattleParticipant::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  active_pokemon_ = const_cast< ::POGOProtos::Data::Battle::BattlePokemonInfo*>(&::POGOProtos::Data::Battle::BattlePokemonInfo::default_instance());
  trainer_public_profile_ = const_cast< ::POGOProtos::Data::Player::PlayerPublicProfile*>(&::POGOProtos::Data::Player::PlayerPublicProfile::default_instance());
}

BattleParticipant::BattleParticipant(const BattleParticipant& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Data.Battle.BattleParticipant)
}

void BattleParticipant::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  active_pokemon_ = NULL;
  trainer_public_profile_ = NULL;
}

BattleParticipant::~BattleParticipant() {
  // @@protoc_insertion_point(destructor:POGOProtos.Data.Battle.BattleParticipant)
  SharedDtor();
}

void BattleParticipant::SharedDtor() {
  if (this != default_instance_) {
    delete active_pokemon_;
    delete trainer_public_profile_;
  }
}

void BattleParticipant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BattleParticipant::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BattleParticipant_descriptor_;
}

const BattleParticipant& BattleParticipant::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  return *default_instance_;
}

BattleParticipant* BattleParticipant::default_instance_ = NULL;

BattleParticipant* BattleParticipant::New(::google::protobuf::Arena* arena) const {
  BattleParticipant* n = new BattleParticipant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BattleParticipant::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Data.Battle.BattleParticipant)
  if (GetArenaNoVirtual() == NULL && active_pokemon_ != NULL) delete active_pokemon_;
  active_pokemon_ = NULL;
  if (GetArenaNoVirtual() == NULL && trainer_public_profile_ != NULL) delete trainer_public_profile_;
  trainer_public_profile_ = NULL;
  reverse_pokemon_.Clear();
  defeated_pokemon_.Clear();
}

bool BattleParticipant::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Data.Battle.BattleParticipant)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_active_pokemon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trainer_public_profile;
        break;
      }

      // optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
      case 2: {
        if (tag == 18) {
         parse_trainer_public_profile:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trainer_public_profile()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_reverse_pokemon;
        break;
      }

      // repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
      case 3: {
        if (tag == 26) {
         parse_reverse_pokemon:
          DO_(input->IncrementRecursionDepth());
         parse_loop_reverse_pokemon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_reverse_pokemon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_reverse_pokemon;
        if (input->ExpectTag(34)) goto parse_loop_defeated_pokemon;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_defeated_pokemon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_defeated_pokemon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_defeated_pokemon;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Data.Battle.BattleParticipant)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Data.Battle.BattleParticipant)
  return false;
#undef DO_
}

void BattleParticipant::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Data.Battle.BattleParticipant)
  // optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
  if (this->has_active_pokemon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->active_pokemon_, output);
  }

  // optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
  if (this->has_trainer_public_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->trainer_public_profile_, output);
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
  for (unsigned int i = 0, n = this->reverse_pokemon_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->reverse_pokemon(i), output);
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
  for (unsigned int i = 0, n = this->defeated_pokemon_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->defeated_pokemon(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Data.Battle.BattleParticipant)
}

::google::protobuf::uint8* BattleParticipant::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Data.Battle.BattleParticipant)
  // optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
  if (this->has_active_pokemon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->active_pokemon_, false, target);
  }

  // optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
  if (this->has_trainer_public_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->trainer_public_profile_, false, target);
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
  for (unsigned int i = 0, n = this->reverse_pokemon_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->reverse_pokemon(i), false, target);
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
  for (unsigned int i = 0, n = this->defeated_pokemon_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->defeated_pokemon(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Data.Battle.BattleParticipant)
  return target;
}

int BattleParticipant::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Data.Battle.BattleParticipant)
  int total_size = 0;

  // optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
  if (this->has_active_pokemon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->active_pokemon_);
  }

  // optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
  if (this->has_trainer_public_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trainer_public_profile_);
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
  total_size += 1 * this->reverse_pokemon_size();
  for (int i = 0; i < this->reverse_pokemon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->reverse_pokemon(i));
  }

  // repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
  total_size += 1 * this->defeated_pokemon_size();
  for (int i = 0; i < this->defeated_pokemon_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->defeated_pokemon(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BattleParticipant::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Data.Battle.BattleParticipant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const BattleParticipant* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BattleParticipant>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Data.Battle.BattleParticipant)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Data.Battle.BattleParticipant)
    MergeFrom(*source);
  }
}

void BattleParticipant::MergeFrom(const BattleParticipant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Data.Battle.BattleParticipant)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  reverse_pokemon_.MergeFrom(from.reverse_pokemon_);
  defeated_pokemon_.MergeFrom(from.defeated_pokemon_);
  if (from.has_active_pokemon()) {
    mutable_active_pokemon()->::POGOProtos::Data::Battle::BattlePokemonInfo::MergeFrom(from.active_pokemon());
  }
  if (from.has_trainer_public_profile()) {
    mutable_trainer_public_profile()->::POGOProtos::Data::Player::PlayerPublicProfile::MergeFrom(from.trainer_public_profile());
  }
}

void BattleParticipant::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Data.Battle.BattleParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BattleParticipant::CopyFrom(const BattleParticipant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Data.Battle.BattleParticipant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleParticipant::IsInitialized() const {

  return true;
}

void BattleParticipant::Swap(BattleParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BattleParticipant::InternalSwap(BattleParticipant* other) {
  std::swap(active_pokemon_, other->active_pokemon_);
  std::swap(trainer_public_profile_, other->trainer_public_profile_);
  reverse_pokemon_.UnsafeArenaSwap(&other->reverse_pokemon_);
  defeated_pokemon_.UnsafeArenaSwap(&other->defeated_pokemon_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BattleParticipant::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BattleParticipant_descriptor_;
  metadata.reflection = BattleParticipant_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BattleParticipant

// optional .POGOProtos.Data.Battle.BattlePokemonInfo active_pokemon = 1;
bool BattleParticipant::has_active_pokemon() const {
  return !_is_default_instance_ && active_pokemon_ != NULL;
}
void BattleParticipant::clear_active_pokemon() {
  if (GetArenaNoVirtual() == NULL && active_pokemon_ != NULL) delete active_pokemon_;
  active_pokemon_ = NULL;
}
const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::active_pokemon() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  return active_pokemon_ != NULL ? *active_pokemon_ : *default_instance_->active_pokemon_;
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_active_pokemon() {
  
  if (active_pokemon_ == NULL) {
    active_pokemon_ = new ::POGOProtos::Data::Battle::BattlePokemonInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  return active_pokemon_;
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::release_active_pokemon() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
  
  ::POGOProtos::Data::Battle::BattlePokemonInfo* temp = active_pokemon_;
  active_pokemon_ = NULL;
  return temp;
}
void BattleParticipant::set_allocated_active_pokemon(::POGOProtos::Data::Battle::BattlePokemonInfo* active_pokemon) {
  delete active_pokemon_;
  active_pokemon_ = active_pokemon;
  if (active_pokemon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleParticipant.active_pokemon)
}

// optional .POGOProtos.Data.Player.PlayerPublicProfile trainer_public_profile = 2;
bool BattleParticipant::has_trainer_public_profile() const {
  return !_is_default_instance_ && trainer_public_profile_ != NULL;
}
void BattleParticipant::clear_trainer_public_profile() {
  if (GetArenaNoVirtual() == NULL && trainer_public_profile_ != NULL) delete trainer_public_profile_;
  trainer_public_profile_ = NULL;
}
const ::POGOProtos::Data::Player::PlayerPublicProfile& BattleParticipant::trainer_public_profile() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  return trainer_public_profile_ != NULL ? *trainer_public_profile_ : *default_instance_->trainer_public_profile_;
}
::POGOProtos::Data::Player::PlayerPublicProfile* BattleParticipant::mutable_trainer_public_profile() {
  
  if (trainer_public_profile_ == NULL) {
    trainer_public_profile_ = new ::POGOProtos::Data::Player::PlayerPublicProfile;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  return trainer_public_profile_;
}
::POGOProtos::Data::Player::PlayerPublicProfile* BattleParticipant::release_trainer_public_profile() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
  
  ::POGOProtos::Data::Player::PlayerPublicProfile* temp = trainer_public_profile_;
  trainer_public_profile_ = NULL;
  return temp;
}
void BattleParticipant::set_allocated_trainer_public_profile(::POGOProtos::Data::Player::PlayerPublicProfile* trainer_public_profile) {
  delete trainer_public_profile_;
  trainer_public_profile_ = trainer_public_profile;
  if (trainer_public_profile) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Battle.BattleParticipant.trainer_public_profile)
}

// repeated .POGOProtos.Data.Battle.BattlePokemonInfo reverse_pokemon = 3;
int BattleParticipant::reverse_pokemon_size() const {
  return reverse_pokemon_.size();
}
void BattleParticipant::clear_reverse_pokemon() {
  reverse_pokemon_.Clear();
}
const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::reverse_pokemon(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Get(index);
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_reverse_pokemon(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Mutable(index);
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::add_reverse_pokemon() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
BattleParticipant::mutable_reverse_pokemon() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return &reverse_pokemon_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
BattleParticipant::reverse_pokemon() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Battle.BattleParticipant.reverse_pokemon)
  return reverse_pokemon_;
}

// repeated .POGOProtos.Data.Battle.BattlePokemonInfo defeated_pokemon = 4;
int BattleParticipant::defeated_pokemon_size() const {
  return defeated_pokemon_.size();
}
void BattleParticipant::clear_defeated_pokemon() {
  defeated_pokemon_.Clear();
}
const ::POGOProtos::Data::Battle::BattlePokemonInfo& BattleParticipant::defeated_pokemon(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Get(index);
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::mutable_defeated_pokemon(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Mutable(index);
}
::POGOProtos::Data::Battle::BattlePokemonInfo* BattleParticipant::add_defeated_pokemon() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >*
BattleParticipant::mutable_defeated_pokemon() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return &defeated_pokemon_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Battle::BattlePokemonInfo >&
BattleParticipant::defeated_pokemon() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Battle.BattleParticipant.defeated_pokemon)
  return defeated_pokemon_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Battle
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
