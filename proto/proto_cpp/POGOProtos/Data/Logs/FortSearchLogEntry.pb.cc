// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Logs/FortSearchLogEntry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Data/Logs/FortSearchLogEntry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Logs {

namespace {

const ::google::protobuf::Descriptor* FortSearchLogEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FortSearchLogEntry_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FortSearchLogEntry_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() {
  protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Data/Logs/FortSearchLogEntry.proto");
  GOOGLE_CHECK(file != NULL);
  FortSearchLogEntry_descriptor_ = file->message_type(0);
  static const int FortSearchLogEntry_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, fort_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, eggs_),
  };
  FortSearchLogEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FortSearchLogEntry_descriptor_,
      FortSearchLogEntry::default_instance_,
      FortSearchLogEntry_offsets_,
      -1,
      -1,
      -1,
      sizeof(FortSearchLogEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchLogEntry, _is_default_instance_));
  FortSearchLogEntry_Result_descriptor_ = FortSearchLogEntry_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FortSearchLogEntry_descriptor_, &FortSearchLogEntry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() {
  delete FortSearchLogEntry::default_instance_;
  delete FortSearchLogEntry_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-POGOProtos/Data/Logs/FortSearchLogEntr"
    "y.proto\022\024POGOProtos.Data.Logs\032(POGOProto"
    "s/Inventory/Item/ItemData.proto\"\312\001\n\022Fort"
    "SearchLogEntry\022\?\n\006result\030\001 \001(\0162/.POGOPro"
    "tos.Data.Logs.FortSearchLogEntry.Result\022"
    "\017\n\007fort_id\030\002 \001(\t\0222\n\005items\030\003 \003(\0132#.POGOPr"
    "otos.Inventory.Item.ItemData\022\014\n\004eggs\030\004 \001"
    "(\005\" \n\006Result\022\t\n\005UNSET\020\000\022\013\n\007SUCCESS\020\001b\006pr"
    "oto3", 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Data/Logs/FortSearchLogEntry.proto", &protobuf_RegisterTypes);
  FortSearchLogEntry::default_instance_ = new FortSearchLogEntry();
  FortSearchLogEntry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto() {
    protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* FortSearchLogEntry_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortSearchLogEntry_Result_descriptor_;
}
bool FortSearchLogEntry_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FortSearchLogEntry_Result FortSearchLogEntry::UNSET;
const FortSearchLogEntry_Result FortSearchLogEntry::SUCCESS;
const FortSearchLogEntry_Result FortSearchLogEntry::Result_MIN;
const FortSearchLogEntry_Result FortSearchLogEntry::Result_MAX;
const int FortSearchLogEntry::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FortSearchLogEntry::kResultFieldNumber;
const int FortSearchLogEntry::kFortIdFieldNumber;
const int FortSearchLogEntry::kItemsFieldNumber;
const int FortSearchLogEntry::kEggsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FortSearchLogEntry::FortSearchLogEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Data.Logs.FortSearchLogEntry)
}

void FortSearchLogEntry::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

FortSearchLogEntry::FortSearchLogEntry(const FortSearchLogEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Data.Logs.FortSearchLogEntry)
}

void FortSearchLogEntry::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  fort_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eggs_ = 0;
}

FortSearchLogEntry::~FortSearchLogEntry() {
  // @@protoc_insertion_point(destructor:POGOProtos.Data.Logs.FortSearchLogEntry)
  SharedDtor();
}

void FortSearchLogEntry::SharedDtor() {
  fort_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FortSearchLogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FortSearchLogEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortSearchLogEntry_descriptor_;
}

const FortSearchLogEntry& FortSearchLogEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
  return *default_instance_;
}

FortSearchLogEntry* FortSearchLogEntry::default_instance_ = NULL;

FortSearchLogEntry* FortSearchLogEntry::New(::google::protobuf::Arena* arena) const {
  FortSearchLogEntry* n = new FortSearchLogEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FortSearchLogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Data.Logs.FortSearchLogEntry)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FortSearchLogEntry, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FortSearchLogEntry*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, eggs_);
  fort_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  items_.Clear();
}

bool FortSearchLogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Data::Logs::FortSearchLogEntry_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fort_id;
        break;
      }

      // optional string fort_id = 2;
      case 2: {
        if (tag == 18) {
         parse_fort_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fort_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fort_id().data(), this->fort_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Data.Logs.FortSearchLogEntry.fort_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_items;
        break;
      }

      // repeated .POGOProtos.Inventory.Item.ItemData items = 3;
      case 3: {
        if (tag == 26) {
         parse_items:
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(32)) goto parse_eggs;
        break;
      }

      // optional int32 eggs = 4;
      case 4: {
        if (tag == 32) {
         parse_eggs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eggs_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Data.Logs.FortSearchLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Data.Logs.FortSearchLogEntry)
  return false;
#undef DO_
}

void FortSearchLogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  // optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional string fort_id = 2;
  if (this->fort_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fort_id().data(), this->fort_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.Logs.FortSearchLogEntry.fort_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fort_id(), output);
  }

  // repeated .POGOProtos.Inventory.Item.ItemData items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // optional int32 eggs = 4;
  if (this->eggs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->eggs(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Data.Logs.FortSearchLogEntry)
}

::google::protobuf::uint8* FortSearchLogEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  // optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional string fort_id = 2;
  if (this->fort_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fort_id().data(), this->fort_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.Logs.FortSearchLogEntry.fort_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fort_id(), target);
  }

  // repeated .POGOProtos.Inventory.Item.ItemData items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->items(i), false, target);
  }

  // optional int32 eggs = 4;
  if (this->eggs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->eggs(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Data.Logs.FortSearchLogEntry)
  return target;
}

int FortSearchLogEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  int total_size = 0;

  // optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional string fort_id = 2;
  if (this->fort_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fort_id());
  }

  // optional int32 eggs = 4;
  if (this->eggs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eggs());
  }

  // repeated .POGOProtos.Inventory.Item.ItemData items = 3;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FortSearchLogEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FortSearchLogEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FortSearchLogEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Data.Logs.FortSearchLogEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Data.Logs.FortSearchLogEntry)
    MergeFrom(*source);
  }
}

void FortSearchLogEntry::MergeFrom(const FortSearchLogEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  items_.MergeFrom(from.items_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.fort_id().size() > 0) {

    fort_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fort_id_);
  }
  if (from.eggs() != 0) {
    set_eggs(from.eggs());
  }
}

void FortSearchLogEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FortSearchLogEntry::CopyFrom(const FortSearchLogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Data.Logs.FortSearchLogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FortSearchLogEntry::IsInitialized() const {

  return true;
}

void FortSearchLogEntry::Swap(FortSearchLogEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FortSearchLogEntry::InternalSwap(FortSearchLogEntry* other) {
  std::swap(result_, other->result_);
  fort_id_.Swap(&other->fort_id_);
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(eggs_, other->eggs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FortSearchLogEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FortSearchLogEntry_descriptor_;
  metadata.reflection = FortSearchLogEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FortSearchLogEntry

// optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
void FortSearchLogEntry::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Data::Logs::FortSearchLogEntry_Result FortSearchLogEntry::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.result)
  return static_cast< ::POGOProtos::Data::Logs::FortSearchLogEntry_Result >(result_);
}
 void FortSearchLogEntry::set_result(::POGOProtos::Data::Logs::FortSearchLogEntry_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.result)
}

// optional string fort_id = 2;
void FortSearchLogEntry::clear_fort_id() {
  fort_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FortSearchLogEntry::fort_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  return fort_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortSearchLogEntry::set_fort_id(const ::std::string& value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
 void FortSearchLogEntry::set_fort_id(const char* value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
 void FortSearchLogEntry::set_fort_id(const char* value, size_t size) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
 ::std::string* FortSearchLogEntry::mutable_fort_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  return fort_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FortSearchLogEntry::release_fort_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  
  return fort_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortSearchLogEntry::set_allocated_fort_id(::std::string* fort_id) {
  if (fort_id != NULL) {
    
  } else {
    
  }
  fort_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fort_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}

// repeated .POGOProtos.Inventory.Item.ItemData items = 3;
int FortSearchLogEntry::items_size() const {
  return items_.size();
}
void FortSearchLogEntry::clear_items() {
  items_.Clear();
}
const ::POGOProtos::Inventory::Item::ItemData& FortSearchLogEntry::items(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Get(index);
}
::POGOProtos::Inventory::Item::ItemData* FortSearchLogEntry::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Mutable(index);
}
::POGOProtos::Inventory::Item::ItemData* FortSearchLogEntry::add_items() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >*
FortSearchLogEntry::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >&
FortSearchLogEntry::items() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_;
}

// optional int32 eggs = 4;
void FortSearchLogEntry::clear_eggs() {
  eggs_ = 0;
}
 ::google::protobuf::int32 FortSearchLogEntry::eggs() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.eggs)
  return eggs_;
}
 void FortSearchLogEntry::set_eggs(::google::protobuf::int32 value) {
  
  eggs_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.eggs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Logs
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
