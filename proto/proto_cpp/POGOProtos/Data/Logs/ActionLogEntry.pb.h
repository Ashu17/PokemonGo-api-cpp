// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Logs/ActionLogEntry.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Data/Logs/CatchPokemonLogEntry.pb.h"
#include "POGOProtos/Data/Logs/FortSearchLogEntry.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Logs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();

class ActionLogEntry;

// ===================================================================

class ActionLogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Logs.ActionLogEntry) */ {
 public:
  ActionLogEntry();
  virtual ~ActionLogEntry();

  ActionLogEntry(const ActionLogEntry& from);

  inline ActionLogEntry& operator=(const ActionLogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionLogEntry& default_instance();

  enum ActionCase {
    kCatchPokemon = 3,
    kFortSearch = 4,
    ACTION_NOT_SET = 0,
  };

  void Swap(ActionLogEntry* other);

  // implements Message ----------------------------------------------

  inline ActionLogEntry* New() const { return New(NULL); }

  ActionLogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionLogEntry& from);
  void MergeFrom(const ActionLogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ActionLogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 timestamp_ms = 1;
  void clear_timestamp_ms();
  static const int kTimestampMsFieldNumber = 1;
  ::google::protobuf::int64 timestamp_ms() const;
  void set_timestamp_ms(::google::protobuf::int64 value);

  // optional bool sfida = 2;
  void clear_sfida();
  static const int kSfidaFieldNumber = 2;
  bool sfida() const;
  void set_sfida(bool value);

  // optional .POGOProtos.Data.Logs.CatchPokemonLogEntry catch_pokemon = 3;
  bool has_catch_pokemon() const;
  void clear_catch_pokemon();
  static const int kCatchPokemonFieldNumber = 3;
  const ::POGOProtos::Data::Logs::CatchPokemonLogEntry& catch_pokemon() const;
  ::POGOProtos::Data::Logs::CatchPokemonLogEntry* mutable_catch_pokemon();
  ::POGOProtos::Data::Logs::CatchPokemonLogEntry* release_catch_pokemon();
  void set_allocated_catch_pokemon(::POGOProtos::Data::Logs::CatchPokemonLogEntry* catch_pokemon);

  // optional .POGOProtos.Data.Logs.FortSearchLogEntry fort_search = 4;
  bool has_fort_search() const;
  void clear_fort_search();
  static const int kFortSearchFieldNumber = 4;
  const ::POGOProtos::Data::Logs::FortSearchLogEntry& fort_search() const;
  ::POGOProtos::Data::Logs::FortSearchLogEntry* mutable_fort_search();
  ::POGOProtos::Data::Logs::FortSearchLogEntry* release_fort_search();
  void set_allocated_fort_search(::POGOProtos::Data::Logs::FortSearchLogEntry* fort_search);

  ActionCase Action_case() const;
  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Logs.ActionLogEntry)
 private:
  inline void set_has_catch_pokemon();
  inline void set_has_fort_search();

  inline bool has_Action() const;
  void clear_Action();
  inline void clear_has_Action();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 timestamp_ms_;
  bool sfida_;
  union ActionUnion {
    ActionUnion() {}
    ::POGOProtos::Data::Logs::CatchPokemonLogEntry* catch_pokemon_;
    ::POGOProtos::Data::Logs::FortSearchLogEntry* fort_search_;
  } Action_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();

  void InitAsDefaultInstance();
  static ActionLogEntry* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionLogEntry

// optional int64 timestamp_ms = 1;
inline void ActionLogEntry::clear_timestamp_ms() {
  timestamp_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ActionLogEntry::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.ActionLogEntry.timestamp_ms)
  return timestamp_ms_;
}
inline void ActionLogEntry::set_timestamp_ms(::google::protobuf::int64 value) {
  
  timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.ActionLogEntry.timestamp_ms)
}

// optional bool sfida = 2;
inline void ActionLogEntry::clear_sfida() {
  sfida_ = false;
}
inline bool ActionLogEntry::sfida() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.ActionLogEntry.sfida)
  return sfida_;
}
inline void ActionLogEntry::set_sfida(bool value) {
  
  sfida_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.ActionLogEntry.sfida)
}

// optional .POGOProtos.Data.Logs.CatchPokemonLogEntry catch_pokemon = 3;
inline bool ActionLogEntry::has_catch_pokemon() const {
  return Action_case() == kCatchPokemon;
}
inline void ActionLogEntry::set_has_catch_pokemon() {
  _oneof_case_[0] = kCatchPokemon;
}
inline void ActionLogEntry::clear_catch_pokemon() {
  if (has_catch_pokemon()) {
    delete Action_.catch_pokemon_;
    clear_has_Action();
  }
}
inline  const ::POGOProtos::Data::Logs::CatchPokemonLogEntry& ActionLogEntry::catch_pokemon() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.ActionLogEntry.catch_pokemon)
  return has_catch_pokemon()
      ? *Action_.catch_pokemon_
      : ::POGOProtos::Data::Logs::CatchPokemonLogEntry::default_instance();
}
inline ::POGOProtos::Data::Logs::CatchPokemonLogEntry* ActionLogEntry::mutable_catch_pokemon() {
  if (!has_catch_pokemon()) {
    clear_Action();
    set_has_catch_pokemon();
    Action_.catch_pokemon_ = new ::POGOProtos::Data::Logs::CatchPokemonLogEntry;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.ActionLogEntry.catch_pokemon)
  return Action_.catch_pokemon_;
}
inline ::POGOProtos::Data::Logs::CatchPokemonLogEntry* ActionLogEntry::release_catch_pokemon() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Logs.ActionLogEntry.catch_pokemon)
  if (has_catch_pokemon()) {
    clear_has_Action();
    ::POGOProtos::Data::Logs::CatchPokemonLogEntry* temp = Action_.catch_pokemon_;
    Action_.catch_pokemon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ActionLogEntry::set_allocated_catch_pokemon(::POGOProtos::Data::Logs::CatchPokemonLogEntry* catch_pokemon) {
  clear_Action();
  if (catch_pokemon) {
    set_has_catch_pokemon();
    Action_.catch_pokemon_ = catch_pokemon;
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Logs.ActionLogEntry.catch_pokemon)
}

// optional .POGOProtos.Data.Logs.FortSearchLogEntry fort_search = 4;
inline bool ActionLogEntry::has_fort_search() const {
  return Action_case() == kFortSearch;
}
inline void ActionLogEntry::set_has_fort_search() {
  _oneof_case_[0] = kFortSearch;
}
inline void ActionLogEntry::clear_fort_search() {
  if (has_fort_search()) {
    delete Action_.fort_search_;
    clear_has_Action();
  }
}
inline  const ::POGOProtos::Data::Logs::FortSearchLogEntry& ActionLogEntry::fort_search() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.ActionLogEntry.fort_search)
  return has_fort_search()
      ? *Action_.fort_search_
      : ::POGOProtos::Data::Logs::FortSearchLogEntry::default_instance();
}
inline ::POGOProtos::Data::Logs::FortSearchLogEntry* ActionLogEntry::mutable_fort_search() {
  if (!has_fort_search()) {
    clear_Action();
    set_has_fort_search();
    Action_.fort_search_ = new ::POGOProtos::Data::Logs::FortSearchLogEntry;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.ActionLogEntry.fort_search)
  return Action_.fort_search_;
}
inline ::POGOProtos::Data::Logs::FortSearchLogEntry* ActionLogEntry::release_fort_search() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Logs.ActionLogEntry.fort_search)
  if (has_fort_search()) {
    clear_has_Action();
    ::POGOProtos::Data::Logs::FortSearchLogEntry* temp = Action_.fort_search_;
    Action_.fort_search_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ActionLogEntry::set_allocated_fort_search(::POGOProtos::Data::Logs::FortSearchLogEntry* fort_search) {
  clear_Action();
  if (fort_search) {
    set_has_fort_search();
    Action_.fort_search_ = fort_search;
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Logs.ActionLogEntry.fort_search)
}

inline bool ActionLogEntry::has_Action() const {
  return Action_case() != ACTION_NOT_SET;
}
inline void ActionLogEntry::clear_has_Action() {
  _oneof_case_[0] = ACTION_NOT_SET;
}
inline ActionLogEntry::ActionCase ActionLogEntry::Action_case() const {
  return ActionLogEntry::ActionCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Logs
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto__INCLUDED
