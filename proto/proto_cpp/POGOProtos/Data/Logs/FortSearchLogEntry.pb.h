// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Logs/FortSearchLogEntry.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Inventory/Item/ItemData.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Logs {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();

class FortSearchLogEntry;

enum FortSearchLogEntry_Result {
  FortSearchLogEntry_Result_UNSET = 0,
  FortSearchLogEntry_Result_SUCCESS = 1,
  FortSearchLogEntry_Result_FortSearchLogEntry_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FortSearchLogEntry_Result_FortSearchLogEntry_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FortSearchLogEntry_Result_IsValid(int value);
const FortSearchLogEntry_Result FortSearchLogEntry_Result_Result_MIN = FortSearchLogEntry_Result_UNSET;
const FortSearchLogEntry_Result FortSearchLogEntry_Result_Result_MAX = FortSearchLogEntry_Result_SUCCESS;
const int FortSearchLogEntry_Result_Result_ARRAYSIZE = FortSearchLogEntry_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* FortSearchLogEntry_Result_descriptor();
inline const ::std::string& FortSearchLogEntry_Result_Name(FortSearchLogEntry_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    FortSearchLogEntry_Result_descriptor(), value);
}
inline bool FortSearchLogEntry_Result_Parse(
    const ::std::string& name, FortSearchLogEntry_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FortSearchLogEntry_Result>(
    FortSearchLogEntry_Result_descriptor(), name, value);
}
// ===================================================================

class FortSearchLogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Logs.FortSearchLogEntry) */ {
 public:
  FortSearchLogEntry();
  virtual ~FortSearchLogEntry();

  FortSearchLogEntry(const FortSearchLogEntry& from);

  inline FortSearchLogEntry& operator=(const FortSearchLogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FortSearchLogEntry& default_instance();

  void Swap(FortSearchLogEntry* other);

  // implements Message ----------------------------------------------

  inline FortSearchLogEntry* New() const { return New(NULL); }

  FortSearchLogEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FortSearchLogEntry& from);
  void MergeFrom(const FortSearchLogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FortSearchLogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef FortSearchLogEntry_Result Result;
  static const Result UNSET =
    FortSearchLogEntry_Result_UNSET;
  static const Result SUCCESS =
    FortSearchLogEntry_Result_SUCCESS;
  static inline bool Result_IsValid(int value) {
    return FortSearchLogEntry_Result_IsValid(value);
  }
  static const Result Result_MIN =
    FortSearchLogEntry_Result_Result_MIN;
  static const Result Result_MAX =
    FortSearchLogEntry_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    FortSearchLogEntry_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return FortSearchLogEntry_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return FortSearchLogEntry_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return FortSearchLogEntry_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::POGOProtos::Data::Logs::FortSearchLogEntry_Result result() const;
  void set_result(::POGOProtos::Data::Logs::FortSearchLogEntry_Result value);

  // optional string fort_id = 2;
  void clear_fort_id();
  static const int kFortIdFieldNumber = 2;
  const ::std::string& fort_id() const;
  void set_fort_id(const ::std::string& value);
  void set_fort_id(const char* value);
  void set_fort_id(const char* value, size_t size);
  ::std::string* mutable_fort_id();
  ::std::string* release_fort_id();
  void set_allocated_fort_id(::std::string* fort_id);

  // repeated .POGOProtos.Inventory.Item.ItemData items = 3;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 3;
  const ::POGOProtos::Inventory::Item::ItemData& items(int index) const;
  ::POGOProtos::Inventory::Item::ItemData* mutable_items(int index);
  ::POGOProtos::Inventory::Item::ItemData* add_items();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >&
      items() const;

  // optional int32 eggs = 4;
  void clear_eggs();
  static const int kEggsFieldNumber = 4;
  ::google::protobuf::int32 eggs() const;
  void set_eggs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Logs.FortSearchLogEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr fort_id_;
  int result_;
  ::google::protobuf::int32 eggs_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData > items_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto();

  void InitAsDefaultInstance();
  static FortSearchLogEntry* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FortSearchLogEntry

// optional .POGOProtos.Data.Logs.FortSearchLogEntry.Result result = 1;
inline void FortSearchLogEntry::clear_result() {
  result_ = 0;
}
inline ::POGOProtos::Data::Logs::FortSearchLogEntry_Result FortSearchLogEntry::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.result)
  return static_cast< ::POGOProtos::Data::Logs::FortSearchLogEntry_Result >(result_);
}
inline void FortSearchLogEntry::set_result(::POGOProtos::Data::Logs::FortSearchLogEntry_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.result)
}

// optional string fort_id = 2;
inline void FortSearchLogEntry::clear_fort_id() {
  fort_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FortSearchLogEntry::fort_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  return fort_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FortSearchLogEntry::set_fort_id(const ::std::string& value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
inline void FortSearchLogEntry::set_fort_id(const char* value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
inline void FortSearchLogEntry::set_fort_id(const char* value, size_t size) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}
inline ::std::string* FortSearchLogEntry::mutable_fort_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  return fort_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FortSearchLogEntry::release_fort_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
  
  return fort_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FortSearchLogEntry::set_allocated_fort_id(::std::string* fort_id) {
  if (fort_id != NULL) {
    
  } else {
    
  }
  fort_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fort_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.Logs.FortSearchLogEntry.fort_id)
}

// repeated .POGOProtos.Inventory.Item.ItemData items = 3;
inline int FortSearchLogEntry::items_size() const {
  return items_.size();
}
inline void FortSearchLogEntry::clear_items() {
  items_.Clear();
}
inline const ::POGOProtos::Inventory::Item::ItemData& FortSearchLogEntry::items(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Get(index);
}
inline ::POGOProtos::Inventory::Item::ItemData* FortSearchLogEntry::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Mutable(index);
}
inline ::POGOProtos::Inventory::Item::ItemData* FortSearchLogEntry::add_items() {
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >*
FortSearchLogEntry::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemData >&
FortSearchLogEntry::items() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Logs.FortSearchLogEntry.items)
  return items_;
}

// optional int32 eggs = 4;
inline void FortSearchLogEntry::clear_eggs() {
  eggs_ = 0;
}
inline ::google::protobuf::int32 FortSearchLogEntry::eggs() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Logs.FortSearchLogEntry.eggs)
  return eggs_;
}
inline void FortSearchLogEntry::set_eggs(::google::protobuf::int32 value) {
  
  eggs_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Logs.FortSearchLogEntry.eggs)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Logs
}  // namespace Data
}  // namespace POGOProtos

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::POGOProtos::Data::Logs::FortSearchLogEntry_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::POGOProtos::Data::Logs::FortSearchLogEntry_Result>() {
  return ::POGOProtos::Data::Logs::FortSearchLogEntry_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fLogs_2fFortSearchLogEntry_2eproto__INCLUDED
