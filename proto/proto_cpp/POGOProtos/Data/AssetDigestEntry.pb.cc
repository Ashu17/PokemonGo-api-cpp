// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/AssetDigestEntry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Data/AssetDigestEntry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {

namespace {

const ::google::protobuf::Descriptor* AssetDigestEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AssetDigestEntry_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto() {
  protobuf_AddDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Data/AssetDigestEntry.proto");
  GOOGLE_CHECK(file != NULL);
  AssetDigestEntry_descriptor_ = file->message_type(0);
  static const int AssetDigestEntry_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, asset_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, bundle_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, checksum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, key_),
  };
  AssetDigestEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AssetDigestEntry_descriptor_,
      AssetDigestEntry::default_instance_,
      AssetDigestEntry_offsets_,
      -1,
      -1,
      -1,
      sizeof(AssetDigestEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AssetDigestEntry, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AssetDigestEntry_descriptor_, &AssetDigestEntry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fData_2fAssetDigestEntry_2eproto() {
  delete AssetDigestEntry::default_instance_;
  delete AssetDigestEntry_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&POGOProtos/Data/AssetDigestEntry.proto"
    "\022\017POGOProtos.Data\"w\n\020AssetDigestEntry\022\020\n"
    "\010asset_id\030\001 \001(\t\022\023\n\013bundle_name\030\002 \001(\t\022\017\n\007"
    "version\030\003 \001(\003\022\020\n\010checksum\030\004 \001(\007\022\014\n\004size\030"
    "\005 \001(\005\022\013\n\003key\030\006 \001(\014b\006proto3", 186);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Data/AssetDigestEntry.proto", &protobuf_RegisterTypes);
  AssetDigestEntry::default_instance_ = new AssetDigestEntry();
  AssetDigestEntry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fData_2fAssetDigestEntry_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fData_2fAssetDigestEntry_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fData_2fAssetDigestEntry_2eproto() {
    protobuf_AddDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fData_2fAssetDigestEntry_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AssetDigestEntry::kAssetIdFieldNumber;
const int AssetDigestEntry::kBundleNameFieldNumber;
const int AssetDigestEntry::kVersionFieldNumber;
const int AssetDigestEntry::kChecksumFieldNumber;
const int AssetDigestEntry::kSizeFieldNumber;
const int AssetDigestEntry::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AssetDigestEntry::AssetDigestEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Data.AssetDigestEntry)
}

void AssetDigestEntry::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AssetDigestEntry::AssetDigestEntry(const AssetDigestEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Data.AssetDigestEntry)
}

void AssetDigestEntry::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  asset_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = GOOGLE_LONGLONG(0);
  checksum_ = 0u;
  size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AssetDigestEntry::~AssetDigestEntry() {
  // @@protoc_insertion_point(destructor:POGOProtos.Data.AssetDigestEntry)
  SharedDtor();
}

void AssetDigestEntry::SharedDtor() {
  asset_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AssetDigestEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AssetDigestEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AssetDigestEntry_descriptor_;
}

const AssetDigestEntry& AssetDigestEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fData_2fAssetDigestEntry_2eproto();
  return *default_instance_;
}

AssetDigestEntry* AssetDigestEntry::default_instance_ = NULL;

AssetDigestEntry* AssetDigestEntry::New(::google::protobuf::Arena* arena) const {
  AssetDigestEntry* n = new AssetDigestEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AssetDigestEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Data.AssetDigestEntry)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AssetDigestEntry, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AssetDigestEntry*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_, size_);
  asset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundle_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool AssetDigestEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Data.AssetDigestEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string asset_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_asset_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->asset_id().data(), this->asset_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Data.AssetDigestEntry.asset_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bundle_name;
        break;
      }

      // optional string bundle_name = 2;
      case 2: {
        if (tag == 18) {
         parse_bundle_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bundle_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bundle_name().data(), this->bundle_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Data.AssetDigestEntry.bundle_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_version;
        break;
      }

      // optional int64 version = 3;
      case 3: {
        if (tag == 24) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_checksum;
        break;
      }

      // optional fixed32 checksum = 4;
      case 4: {
        if (tag == 37) {
         parse_checksum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &checksum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_size;
        break;
      }

      // optional int32 size = 5;
      case 5: {
        if (tag == 40) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_key;
        break;
      }

      // optional bytes key = 6;
      case 6: {
        if (tag == 50) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Data.AssetDigestEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Data.AssetDigestEntry)
  return false;
#undef DO_
}

void AssetDigestEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Data.AssetDigestEntry)
  // optional string asset_id = 1;
  if (this->asset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_id().data(), this->asset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.AssetDigestEntry.asset_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->asset_id(), output);
  }

  // optional string bundle_name = 2;
  if (this->bundle_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bundle_name().data(), this->bundle_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.AssetDigestEntry.bundle_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bundle_name(), output);
  }

  // optional int64 version = 3;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->version(), output);
  }

  // optional fixed32 checksum = 4;
  if (this->checksum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->checksum(), output);
  }

  // optional int32 size = 5;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->size(), output);
  }

  // optional bytes key = 6;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Data.AssetDigestEntry)
}

::google::protobuf::uint8* AssetDigestEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Data.AssetDigestEntry)
  // optional string asset_id = 1;
  if (this->asset_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->asset_id().data(), this->asset_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.AssetDigestEntry.asset_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->asset_id(), target);
  }

  // optional string bundle_name = 2;
  if (this->bundle_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bundle_name().data(), this->bundle_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Data.AssetDigestEntry.bundle_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bundle_name(), target);
  }

  // optional int64 version = 3;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->version(), target);
  }

  // optional fixed32 checksum = 4;
  if (this->checksum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->checksum(), target);
  }

  // optional int32 size = 5;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->size(), target);
  }

  // optional bytes key = 6;
  if (this->key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Data.AssetDigestEntry)
  return target;
}

int AssetDigestEntry::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Data.AssetDigestEntry)
  int total_size = 0;

  // optional string asset_id = 1;
  if (this->asset_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->asset_id());
  }

  // optional string bundle_name = 2;
  if (this->bundle_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bundle_name());
  }

  // optional int64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->version());
  }

  // optional fixed32 checksum = 4;
  if (this->checksum() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 size = 5;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  // optional bytes key = 6;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AssetDigestEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Data.AssetDigestEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AssetDigestEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AssetDigestEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Data.AssetDigestEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Data.AssetDigestEntry)
    MergeFrom(*source);
  }
}

void AssetDigestEntry::MergeFrom(const AssetDigestEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Data.AssetDigestEntry)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.asset_id().size() > 0) {

    asset_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.asset_id_);
  }
  if (from.bundle_name().size() > 0) {

    bundle_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundle_name_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.checksum() != 0) {
    set_checksum(from.checksum());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void AssetDigestEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Data.AssetDigestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssetDigestEntry::CopyFrom(const AssetDigestEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Data.AssetDigestEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssetDigestEntry::IsInitialized() const {

  return true;
}

void AssetDigestEntry::Swap(AssetDigestEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AssetDigestEntry::InternalSwap(AssetDigestEntry* other) {
  asset_id_.Swap(&other->asset_id_);
  bundle_name_.Swap(&other->bundle_name_);
  std::swap(version_, other->version_);
  std::swap(checksum_, other->checksum_);
  std::swap(size_, other->size_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AssetDigestEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AssetDigestEntry_descriptor_;
  metadata.reflection = AssetDigestEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AssetDigestEntry

// optional string asset_id = 1;
void AssetDigestEntry::clear_asset_id() {
  asset_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AssetDigestEntry::asset_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.asset_id)
  return asset_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_asset_id(const ::std::string& value) {
  
  asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.asset_id)
}
 void AssetDigestEntry::set_asset_id(const char* value) {
  
  asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.AssetDigestEntry.asset_id)
}
 void AssetDigestEntry::set_asset_id(const char* value, size_t size) {
  
  asset_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.AssetDigestEntry.asset_id)
}
 ::std::string* AssetDigestEntry::mutable_asset_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.AssetDigestEntry.asset_id)
  return asset_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetDigestEntry::release_asset_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.AssetDigestEntry.asset_id)
  
  return asset_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_allocated_asset_id(::std::string* asset_id) {
  if (asset_id != NULL) {
    
  } else {
    
  }
  asset_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), asset_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.AssetDigestEntry.asset_id)
}

// optional string bundle_name = 2;
void AssetDigestEntry::clear_bundle_name() {
  bundle_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AssetDigestEntry::bundle_name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.bundle_name)
  return bundle_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_bundle_name(const ::std::string& value) {
  
  bundle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.bundle_name)
}
 void AssetDigestEntry::set_bundle_name(const char* value) {
  
  bundle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.AssetDigestEntry.bundle_name)
}
 void AssetDigestEntry::set_bundle_name(const char* value, size_t size) {
  
  bundle_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.AssetDigestEntry.bundle_name)
}
 ::std::string* AssetDigestEntry::mutable_bundle_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.AssetDigestEntry.bundle_name)
  return bundle_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetDigestEntry::release_bundle_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.AssetDigestEntry.bundle_name)
  
  return bundle_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_allocated_bundle_name(::std::string* bundle_name) {
  if (bundle_name != NULL) {
    
  } else {
    
  }
  bundle_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundle_name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.AssetDigestEntry.bundle_name)
}

// optional int64 version = 3;
void AssetDigestEntry::clear_version() {
  version_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 AssetDigestEntry::version() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.version)
  return version_;
}
 void AssetDigestEntry::set_version(::google::protobuf::int64 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.version)
}

// optional fixed32 checksum = 4;
void AssetDigestEntry::clear_checksum() {
  checksum_ = 0u;
}
 ::google::protobuf::uint32 AssetDigestEntry::checksum() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.checksum)
  return checksum_;
}
 void AssetDigestEntry::set_checksum(::google::protobuf::uint32 value) {
  
  checksum_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.checksum)
}

// optional int32 size = 5;
void AssetDigestEntry::clear_size() {
  size_ = 0;
}
 ::google::protobuf::int32 AssetDigestEntry::size() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.size)
  return size_;
}
 void AssetDigestEntry::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.size)
}

// optional bytes key = 6;
void AssetDigestEntry::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AssetDigestEntry::key() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.AssetDigestEntry.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.AssetDigestEntry.key)
}
 void AssetDigestEntry::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Data.AssetDigestEntry.key)
}
 void AssetDigestEntry::set_key(const void* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Data.AssetDigestEntry.key)
}
 ::std::string* AssetDigestEntry::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Data.AssetDigestEntry.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AssetDigestEntry::release_key() {
  // @@protoc_insertion_point(field_release:POGOProtos.Data.AssetDigestEntry.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AssetDigestEntry::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Data.AssetDigestEntry.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
