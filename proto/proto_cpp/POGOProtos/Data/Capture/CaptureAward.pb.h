// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Capture/CaptureAward.proto

#ifndef PROTOBUF_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/ActivityType.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Data {
namespace Capture {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();
void protobuf_AssignDesc_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();

class CaptureAward;

// ===================================================================

class CaptureAward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Data.Capture.CaptureAward) */ {
 public:
  CaptureAward();
  virtual ~CaptureAward();

  CaptureAward(const CaptureAward& from);

  inline CaptureAward& operator=(const CaptureAward& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CaptureAward& default_instance();

  void Swap(CaptureAward* other);

  // implements Message ----------------------------------------------

  inline CaptureAward* New() const { return New(NULL); }

  CaptureAward* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CaptureAward& from);
  void MergeFrom(const CaptureAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CaptureAward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];
  int activity_type_size() const;
  void clear_activity_type();
  static const int kActivityTypeFieldNumber = 1;
  ::POGOProtos::Enums::ActivityType activity_type(int index) const;
  void set_activity_type(int index, ::POGOProtos::Enums::ActivityType value);
  void add_activity_type(::POGOProtos::Enums::ActivityType value);
  const ::google::protobuf::RepeatedField<int>& activity_type() const;
  ::google::protobuf::RepeatedField<int>* mutable_activity_type();

  // repeated int32 xp = 2 [packed = true];
  int xp_size() const;
  void clear_xp();
  static const int kXpFieldNumber = 2;
  ::google::protobuf::int32 xp(int index) const;
  void set_xp(int index, ::google::protobuf::int32 value);
  void add_xp(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      xp() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_xp();

  // repeated int32 candy = 3 [packed = true];
  int candy_size() const;
  void clear_candy();
  static const int kCandyFieldNumber = 3;
  ::google::protobuf::int32 candy(int index) const;
  void set_candy(int index, ::google::protobuf::int32 value);
  void add_candy(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      candy() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_candy();

  // repeated int32 stardust = 4 [packed = true];
  int stardust_size() const;
  void clear_stardust();
  static const int kStardustFieldNumber = 4;
  ::google::protobuf::int32 stardust(int index) const;
  void set_stardust(int index, ::google::protobuf::int32 value);
  void add_stardust(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stardust() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stardust();

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Capture.CaptureAward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField<int> activity_type_;
  mutable int _activity_type_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > xp_;
  mutable int _xp_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > candy_;
  mutable int _candy_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stardust_;
  mutable int _stardust_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();

  void InitAsDefaultInstance();
  static CaptureAward* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CaptureAward

// repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];
inline int CaptureAward::activity_type_size() const {
  return activity_type_.size();
}
inline void CaptureAward::clear_activity_type() {
  activity_type_.Clear();
}
inline ::POGOProtos::Enums::ActivityType CaptureAward::activity_type(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Capture.CaptureAward.activity_type)
  return static_cast< ::POGOProtos::Enums::ActivityType >(activity_type_.Get(index));
}
inline void CaptureAward::set_activity_type(int index, ::POGOProtos::Enums::ActivityType value) {
  activity_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Capture.CaptureAward.activity_type)
}
inline void CaptureAward::add_activity_type(::POGOProtos::Enums::ActivityType value) {
  activity_type_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Capture.CaptureAward.activity_type)
}
inline const ::google::protobuf::RepeatedField<int>&
CaptureAward::activity_type() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Capture.CaptureAward.activity_type)
  return activity_type_;
}
inline ::google::protobuf::RepeatedField<int>*
CaptureAward::mutable_activity_type() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Capture.CaptureAward.activity_type)
  return &activity_type_;
}

// repeated int32 xp = 2 [packed = true];
inline int CaptureAward::xp_size() const {
  return xp_.size();
}
inline void CaptureAward::clear_xp() {
  xp_.Clear();
}
inline ::google::protobuf::int32 CaptureAward::xp(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Capture.CaptureAward.xp)
  return xp_.Get(index);
}
inline void CaptureAward::set_xp(int index, ::google::protobuf::int32 value) {
  xp_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Capture.CaptureAward.xp)
}
inline void CaptureAward::add_xp(::google::protobuf::int32 value) {
  xp_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Capture.CaptureAward.xp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CaptureAward::xp() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Capture.CaptureAward.xp)
  return xp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CaptureAward::mutable_xp() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Capture.CaptureAward.xp)
  return &xp_;
}

// repeated int32 candy = 3 [packed = true];
inline int CaptureAward::candy_size() const {
  return candy_.size();
}
inline void CaptureAward::clear_candy() {
  candy_.Clear();
}
inline ::google::protobuf::int32 CaptureAward::candy(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Capture.CaptureAward.candy)
  return candy_.Get(index);
}
inline void CaptureAward::set_candy(int index, ::google::protobuf::int32 value) {
  candy_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Capture.CaptureAward.candy)
}
inline void CaptureAward::add_candy(::google::protobuf::int32 value) {
  candy_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Capture.CaptureAward.candy)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CaptureAward::candy() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Capture.CaptureAward.candy)
  return candy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CaptureAward::mutable_candy() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Capture.CaptureAward.candy)
  return &candy_;
}

// repeated int32 stardust = 4 [packed = true];
inline int CaptureAward::stardust_size() const {
  return stardust_.size();
}
inline void CaptureAward::clear_stardust() {
  stardust_.Clear();
}
inline ::google::protobuf::int32 CaptureAward::stardust(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Data.Capture.CaptureAward.stardust)
  return stardust_.Get(index);
}
inline void CaptureAward::set_stardust(int index, ::google::protobuf::int32 value) {
  stardust_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Data.Capture.CaptureAward.stardust)
}
inline void CaptureAward::add_stardust(::google::protobuf::int32 value) {
  stardust_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Data.Capture.CaptureAward.stardust)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CaptureAward::stardust() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Data.Capture.CaptureAward.stardust)
  return stardust_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CaptureAward::mutable_stardust() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Data.Capture.CaptureAward.stardust)
  return &stardust_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Capture
}  // namespace Data
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto__INCLUDED
