// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/MoveSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/PokemonType.pb.h"
#include "POGOProtos/Enums/PokemonMove.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();

class MoveSettings;

// ===================================================================

class MoveSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.Master.MoveSettings) */ {
 public:
  MoveSettings();
  virtual ~MoveSettings();

  MoveSettings(const MoveSettings& from);

  inline MoveSettings& operator=(const MoveSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveSettings& default_instance();

  void Swap(MoveSettings* other);

  // implements Message ----------------------------------------------

  inline MoveSettings* New() const { return New(NULL); }

  MoveSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoveSettings& from);
  void MergeFrom(const MoveSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MoveSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Enums.PokemonMove movement_id = 1;
  void clear_movement_id();
  static const int kMovementIdFieldNumber = 1;
  ::POGOProtos::Enums::PokemonMove movement_id() const;
  void set_movement_id(::POGOProtos::Enums::PokemonMove value);

  // optional int32 animation_id = 2;
  void clear_animation_id();
  static const int kAnimationIdFieldNumber = 2;
  ::google::protobuf::int32 animation_id() const;
  void set_animation_id(::google::protobuf::int32 value);

  // optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
  void clear_pokemon_type();
  static const int kPokemonTypeFieldNumber = 3;
  ::POGOProtos::Enums::PokemonType pokemon_type() const;
  void set_pokemon_type(::POGOProtos::Enums::PokemonType value);

  // optional float power = 4;
  void clear_power();
  static const int kPowerFieldNumber = 4;
  float power() const;
  void set_power(float value);

  // optional float accuracy_chance = 5;
  void clear_accuracy_chance();
  static const int kAccuracyChanceFieldNumber = 5;
  float accuracy_chance() const;
  void set_accuracy_chance(float value);

  // optional float critical_chance = 6;
  void clear_critical_chance();
  static const int kCriticalChanceFieldNumber = 6;
  float critical_chance() const;
  void set_critical_chance(float value);

  // optional float heal_scalar = 7;
  void clear_heal_scalar();
  static const int kHealScalarFieldNumber = 7;
  float heal_scalar() const;
  void set_heal_scalar(float value);

  // optional float stamina_loss_scalar = 8;
  void clear_stamina_loss_scalar();
  static const int kStaminaLossScalarFieldNumber = 8;
  float stamina_loss_scalar() const;
  void set_stamina_loss_scalar(float value);

  // optional int32 trainer_level_min = 9;
  void clear_trainer_level_min();
  static const int kTrainerLevelMinFieldNumber = 9;
  ::google::protobuf::int32 trainer_level_min() const;
  void set_trainer_level_min(::google::protobuf::int32 value);

  // optional int32 trainer_level_max = 10;
  void clear_trainer_level_max();
  static const int kTrainerLevelMaxFieldNumber = 10;
  ::google::protobuf::int32 trainer_level_max() const;
  void set_trainer_level_max(::google::protobuf::int32 value);

  // optional string vfx_name = 11;
  void clear_vfx_name();
  static const int kVfxNameFieldNumber = 11;
  const ::std::string& vfx_name() const;
  void set_vfx_name(const ::std::string& value);
  void set_vfx_name(const char* value);
  void set_vfx_name(const char* value, size_t size);
  ::std::string* mutable_vfx_name();
  ::std::string* release_vfx_name();
  void set_allocated_vfx_name(::std::string* vfx_name);

  // optional int32 duration_ms = 12;
  void clear_duration_ms();
  static const int kDurationMsFieldNumber = 12;
  ::google::protobuf::int32 duration_ms() const;
  void set_duration_ms(::google::protobuf::int32 value);

  // optional int32 damage_window_start_ms = 13;
  void clear_damage_window_start_ms();
  static const int kDamageWindowStartMsFieldNumber = 13;
  ::google::protobuf::int32 damage_window_start_ms() const;
  void set_damage_window_start_ms(::google::protobuf::int32 value);

  // optional int32 damage_window_end_ms = 14;
  void clear_damage_window_end_ms();
  static const int kDamageWindowEndMsFieldNumber = 14;
  ::google::protobuf::int32 damage_window_end_ms() const;
  void set_damage_window_end_ms(::google::protobuf::int32 value);

  // optional int32 energy_delta = 15;
  void clear_energy_delta();
  static const int kEnergyDeltaFieldNumber = 15;
  ::google::protobuf::int32 energy_delta() const;
  void set_energy_delta(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.MoveSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int movement_id_;
  ::google::protobuf::int32 animation_id_;
  int pokemon_type_;
  float power_;
  float accuracy_chance_;
  float critical_chance_;
  float heal_scalar_;
  float stamina_loss_scalar_;
  ::google::protobuf::int32 trainer_level_min_;
  ::google::protobuf::int32 trainer_level_max_;
  ::google::protobuf::internal::ArenaStringPtr vfx_name_;
  ::google::protobuf::int32 duration_ms_;
  ::google::protobuf::int32 damage_window_start_ms_;
  ::google::protobuf::int32 damage_window_end_ms_;
  ::google::protobuf::int32 energy_delta_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();

  void InitAsDefaultInstance();
  static MoveSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveSettings

// optional .POGOProtos.Enums.PokemonMove movement_id = 1;
inline void MoveSettings::clear_movement_id() {
  movement_id_ = 0;
}
inline ::POGOProtos::Enums::PokemonMove MoveSettings::movement_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.movement_id)
  return static_cast< ::POGOProtos::Enums::PokemonMove >(movement_id_);
}
inline void MoveSettings::set_movement_id(::POGOProtos::Enums::PokemonMove value) {
  
  movement_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.movement_id)
}

// optional int32 animation_id = 2;
inline void MoveSettings::clear_animation_id() {
  animation_id_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::animation_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.animation_id)
  return animation_id_;
}
inline void MoveSettings::set_animation_id(::google::protobuf::int32 value) {
  
  animation_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.animation_id)
}

// optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
inline void MoveSettings::clear_pokemon_type() {
  pokemon_type_ = 0;
}
inline ::POGOProtos::Enums::PokemonType MoveSettings::pokemon_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.pokemon_type)
  return static_cast< ::POGOProtos::Enums::PokemonType >(pokemon_type_);
}
inline void MoveSettings::set_pokemon_type(::POGOProtos::Enums::PokemonType value) {
  
  pokemon_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.pokemon_type)
}

// optional float power = 4;
inline void MoveSettings::clear_power() {
  power_ = 0;
}
inline float MoveSettings::power() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.power)
  return power_;
}
inline void MoveSettings::set_power(float value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.power)
}

// optional float accuracy_chance = 5;
inline void MoveSettings::clear_accuracy_chance() {
  accuracy_chance_ = 0;
}
inline float MoveSettings::accuracy_chance() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.accuracy_chance)
  return accuracy_chance_;
}
inline void MoveSettings::set_accuracy_chance(float value) {
  
  accuracy_chance_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.accuracy_chance)
}

// optional float critical_chance = 6;
inline void MoveSettings::clear_critical_chance() {
  critical_chance_ = 0;
}
inline float MoveSettings::critical_chance() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.critical_chance)
  return critical_chance_;
}
inline void MoveSettings::set_critical_chance(float value) {
  
  critical_chance_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.critical_chance)
}

// optional float heal_scalar = 7;
inline void MoveSettings::clear_heal_scalar() {
  heal_scalar_ = 0;
}
inline float MoveSettings::heal_scalar() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.heal_scalar)
  return heal_scalar_;
}
inline void MoveSettings::set_heal_scalar(float value) {
  
  heal_scalar_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.heal_scalar)
}

// optional float stamina_loss_scalar = 8;
inline void MoveSettings::clear_stamina_loss_scalar() {
  stamina_loss_scalar_ = 0;
}
inline float MoveSettings::stamina_loss_scalar() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.stamina_loss_scalar)
  return stamina_loss_scalar_;
}
inline void MoveSettings::set_stamina_loss_scalar(float value) {
  
  stamina_loss_scalar_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.stamina_loss_scalar)
}

// optional int32 trainer_level_min = 9;
inline void MoveSettings::clear_trainer_level_min() {
  trainer_level_min_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::trainer_level_min() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.trainer_level_min)
  return trainer_level_min_;
}
inline void MoveSettings::set_trainer_level_min(::google::protobuf::int32 value) {
  
  trainer_level_min_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.trainer_level_min)
}

// optional int32 trainer_level_max = 10;
inline void MoveSettings::clear_trainer_level_max() {
  trainer_level_max_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::trainer_level_max() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.trainer_level_max)
  return trainer_level_max_;
}
inline void MoveSettings::set_trainer_level_max(::google::protobuf::int32 value) {
  
  trainer_level_max_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.trainer_level_max)
}

// optional string vfx_name = 11;
inline void MoveSettings::clear_vfx_name() {
  vfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MoveSettings::vfx_name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  return vfx_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveSettings::set_vfx_name(const ::std::string& value) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
inline void MoveSettings::set_vfx_name(const char* value) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
inline void MoveSettings::set_vfx_name(const char* value, size_t size) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
inline ::std::string* MoveSettings::mutable_vfx_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  return vfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MoveSettings::release_vfx_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  
  return vfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MoveSettings::set_allocated_vfx_name(::std::string* vfx_name) {
  if (vfx_name != NULL) {
    
  } else {
    
  }
  vfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vfx_name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}

// optional int32 duration_ms = 12;
inline void MoveSettings::clear_duration_ms() {
  duration_ms_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::duration_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.duration_ms)
  return duration_ms_;
}
inline void MoveSettings::set_duration_ms(::google::protobuf::int32 value) {
  
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.duration_ms)
}

// optional int32 damage_window_start_ms = 13;
inline void MoveSettings::clear_damage_window_start_ms() {
  damage_window_start_ms_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::damage_window_start_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.damage_window_start_ms)
  return damage_window_start_ms_;
}
inline void MoveSettings::set_damage_window_start_ms(::google::protobuf::int32 value) {
  
  damage_window_start_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.damage_window_start_ms)
}

// optional int32 damage_window_end_ms = 14;
inline void MoveSettings::clear_damage_window_end_ms() {
  damage_window_end_ms_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::damage_window_end_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.damage_window_end_ms)
  return damage_window_end_ms_;
}
inline void MoveSettings::set_damage_window_end_ms(::google::protobuf::int32 value) {
  
  damage_window_end_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.damage_window_end_ms)
}

// optional int32 energy_delta = 15;
inline void MoveSettings::clear_energy_delta() {
  energy_delta_ = 0;
}
inline ::google::protobuf::int32 MoveSettings::energy_delta() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.energy_delta)
  return energy_delta_;
}
inline void MoveSettings::set_energy_delta(::google::protobuf::int32 value) {
  
  energy_delta_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.energy_delta)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto__INCLUDED
