// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/MoveSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/MoveSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* MoveSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoveSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/MoveSettings.proto");
  GOOGLE_CHECK(file != NULL);
  MoveSettings_descriptor_ = file->message_type(0);
  static const int MoveSettings_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, movement_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, animation_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, pokemon_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, accuracy_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, critical_chance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, heal_scalar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, stamina_loss_scalar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, trainer_level_min_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, trainer_level_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, vfx_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, duration_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, damage_window_start_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, damage_window_end_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, energy_delta_),
  };
  MoveSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MoveSettings_descriptor_,
      MoveSettings::default_instance_,
      MoveSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(MoveSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoveSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MoveSettings_descriptor_, &MoveSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() {
  delete MoveSettings::default_instance_;
  delete MoveSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fPokemonType_2eproto();
  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fPokemonMove_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-POGOProtos/Settings/Master/MoveSetting"
    "s.proto\022\032POGOProtos.Settings.Master\032\"POG"
    "OProtos/Enums/PokemonType.proto\032\"POGOPro"
    "tos/Enums/PokemonMove.proto\"\261\003\n\014MoveSett"
    "ings\0222\n\013movement_id\030\001 \001(\0162\035.POGOProtos.E"
    "nums.PokemonMove\022\024\n\014animation_id\030\002 \001(\005\0223"
    "\n\014pokemon_type\030\003 \001(\0162\035.POGOProtos.Enums."
    "PokemonType\022\r\n\005power\030\004 \001(\002\022\027\n\017accuracy_c"
    "hance\030\005 \001(\002\022\027\n\017critical_chance\030\006 \001(\002\022\023\n\013"
    "heal_scalar\030\007 \001(\002\022\033\n\023stamina_loss_scalar"
    "\030\010 \001(\002\022\031\n\021trainer_level_min\030\t \001(\005\022\031\n\021tra"
    "iner_level_max\030\n \001(\005\022\020\n\010vfx_name\030\013 \001(\t\022\023"
    "\n\013duration_ms\030\014 \001(\005\022\036\n\026damage_window_sta"
    "rt_ms\030\r \001(\005\022\034\n\024damage_window_end_ms\030\016 \001("
    "\005\022\024\n\014energy_delta\030\017 \001(\005b\006proto3", 591);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/MoveSettings.proto", &protobuf_RegisterTypes);
  MoveSettings::default_instance_ = new MoveSettings();
  MoveSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoveSettings::kMovementIdFieldNumber;
const int MoveSettings::kAnimationIdFieldNumber;
const int MoveSettings::kPokemonTypeFieldNumber;
const int MoveSettings::kPowerFieldNumber;
const int MoveSettings::kAccuracyChanceFieldNumber;
const int MoveSettings::kCriticalChanceFieldNumber;
const int MoveSettings::kHealScalarFieldNumber;
const int MoveSettings::kStaminaLossScalarFieldNumber;
const int MoveSettings::kTrainerLevelMinFieldNumber;
const int MoveSettings::kTrainerLevelMaxFieldNumber;
const int MoveSettings::kVfxNameFieldNumber;
const int MoveSettings::kDurationMsFieldNumber;
const int MoveSettings::kDamageWindowStartMsFieldNumber;
const int MoveSettings::kDamageWindowEndMsFieldNumber;
const int MoveSettings::kEnergyDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoveSettings::MoveSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.MoveSettings)
}

void MoveSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MoveSettings::MoveSettings(const MoveSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.MoveSettings)
}

void MoveSettings::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  movement_id_ = 0;
  animation_id_ = 0;
  pokemon_type_ = 0;
  power_ = 0;
  accuracy_chance_ = 0;
  critical_chance_ = 0;
  heal_scalar_ = 0;
  stamina_loss_scalar_ = 0;
  trainer_level_min_ = 0;
  trainer_level_max_ = 0;
  vfx_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_ms_ = 0;
  damage_window_start_ms_ = 0;
  damage_window_end_ms_ = 0;
  energy_delta_ = 0;
}

MoveSettings::~MoveSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.MoveSettings)
  SharedDtor();
}

void MoveSettings::SharedDtor() {
  vfx_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MoveSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoveSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoveSettings_descriptor_;
}

const MoveSettings& MoveSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fMoveSettings_2eproto();
  return *default_instance_;
}

MoveSettings* MoveSettings::default_instance_ = NULL;

MoveSettings* MoveSettings::New(::google::protobuf::Arena* arena) const {
  MoveSettings* n = new MoveSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MoveSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.MoveSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MoveSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MoveSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(movement_id_, stamina_loss_scalar_);
  ZR_(trainer_level_min_, trainer_level_max_);
  ZR_(duration_ms_, energy_delta_);
  vfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MoveSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.MoveSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Enums.PokemonMove movement_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_movement_id(static_cast< ::POGOProtos::Enums::PokemonMove >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_animation_id;
        break;
      }

      // optional int32 animation_id = 2;
      case 2: {
        if (tag == 16) {
         parse_animation_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animation_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_pokemon_type;
        break;
      }

      // optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
      case 3: {
        if (tag == 24) {
         parse_pokemon_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_pokemon_type(static_cast< ::POGOProtos::Enums::PokemonType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_power;
        break;
      }

      // optional float power = 4;
      case 4: {
        if (tag == 37) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &power_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_accuracy_chance;
        break;
      }

      // optional float accuracy_chance = 5;
      case 5: {
        if (tag == 45) {
         parse_accuracy_chance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accuracy_chance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_critical_chance;
        break;
      }

      // optional float critical_chance = 6;
      case 6: {
        if (tag == 53) {
         parse_critical_chance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &critical_chance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_heal_scalar;
        break;
      }

      // optional float heal_scalar = 7;
      case 7: {
        if (tag == 61) {
         parse_heal_scalar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heal_scalar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(69)) goto parse_stamina_loss_scalar;
        break;
      }

      // optional float stamina_loss_scalar = 8;
      case 8: {
        if (tag == 69) {
         parse_stamina_loss_scalar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &stamina_loss_scalar_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_trainer_level_min;
        break;
      }

      // optional int32 trainer_level_min = 9;
      case 9: {
        if (tag == 72) {
         parse_trainer_level_min:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trainer_level_min_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_trainer_level_max;
        break;
      }

      // optional int32 trainer_level_max = 10;
      case 10: {
        if (tag == 80) {
         parse_trainer_level_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &trainer_level_max_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_vfx_name;
        break;
      }

      // optional string vfx_name = 11;
      case 11: {
        if (tag == 90) {
         parse_vfx_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vfx_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vfx_name().data(), this->vfx_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Settings.Master.MoveSettings.vfx_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_duration_ms;
        break;
      }

      // optional int32 duration_ms = 12;
      case 12: {
        if (tag == 96) {
         parse_duration_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(104)) goto parse_damage_window_start_ms;
        break;
      }

      // optional int32 damage_window_start_ms = 13;
      case 13: {
        if (tag == 104) {
         parse_damage_window_start_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_window_start_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_damage_window_end_ms;
        break;
      }

      // optional int32 damage_window_end_ms = 14;
      case 14: {
        if (tag == 112) {
         parse_damage_window_end_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_window_end_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_energy_delta;
        break;
      }

      // optional int32 energy_delta = 15;
      case 15: {
        if (tag == 120) {
         parse_energy_delta:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &energy_delta_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.MoveSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.MoveSettings)
  return false;
#undef DO_
}

void MoveSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.MoveSettings)
  // optional .POGOProtos.Enums.PokemonMove movement_id = 1;
  if (this->movement_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->movement_id(), output);
  }

  // optional int32 animation_id = 2;
  if (this->animation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->animation_id(), output);
  }

  // optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
  if (this->pokemon_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->pokemon_type(), output);
  }

  // optional float power = 4;
  if (this->power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->power(), output);
  }

  // optional float accuracy_chance = 5;
  if (this->accuracy_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->accuracy_chance(), output);
  }

  // optional float critical_chance = 6;
  if (this->critical_chance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->critical_chance(), output);
  }

  // optional float heal_scalar = 7;
  if (this->heal_scalar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->heal_scalar(), output);
  }

  // optional float stamina_loss_scalar = 8;
  if (this->stamina_loss_scalar() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->stamina_loss_scalar(), output);
  }

  // optional int32 trainer_level_min = 9;
  if (this->trainer_level_min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->trainer_level_min(), output);
  }

  // optional int32 trainer_level_max = 10;
  if (this->trainer_level_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->trainer_level_max(), output);
  }

  // optional string vfx_name = 11;
  if (this->vfx_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vfx_name().data(), this->vfx_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.Master.MoveSettings.vfx_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->vfx_name(), output);
  }

  // optional int32 duration_ms = 12;
  if (this->duration_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->duration_ms(), output);
  }

  // optional int32 damage_window_start_ms = 13;
  if (this->damage_window_start_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->damage_window_start_ms(), output);
  }

  // optional int32 damage_window_end_ms = 14;
  if (this->damage_window_end_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->damage_window_end_ms(), output);
  }

  // optional int32 energy_delta = 15;
  if (this->energy_delta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->energy_delta(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.MoveSettings)
}

::google::protobuf::uint8* MoveSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.MoveSettings)
  // optional .POGOProtos.Enums.PokemonMove movement_id = 1;
  if (this->movement_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->movement_id(), target);
  }

  // optional int32 animation_id = 2;
  if (this->animation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->animation_id(), target);
  }

  // optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
  if (this->pokemon_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->pokemon_type(), target);
  }

  // optional float power = 4;
  if (this->power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->power(), target);
  }

  // optional float accuracy_chance = 5;
  if (this->accuracy_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->accuracy_chance(), target);
  }

  // optional float critical_chance = 6;
  if (this->critical_chance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->critical_chance(), target);
  }

  // optional float heal_scalar = 7;
  if (this->heal_scalar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->heal_scalar(), target);
  }

  // optional float stamina_loss_scalar = 8;
  if (this->stamina_loss_scalar() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->stamina_loss_scalar(), target);
  }

  // optional int32 trainer_level_min = 9;
  if (this->trainer_level_min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->trainer_level_min(), target);
  }

  // optional int32 trainer_level_max = 10;
  if (this->trainer_level_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->trainer_level_max(), target);
  }

  // optional string vfx_name = 11;
  if (this->vfx_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vfx_name().data(), this->vfx_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.Master.MoveSettings.vfx_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->vfx_name(), target);
  }

  // optional int32 duration_ms = 12;
  if (this->duration_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->duration_ms(), target);
  }

  // optional int32 damage_window_start_ms = 13;
  if (this->damage_window_start_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->damage_window_start_ms(), target);
  }

  // optional int32 damage_window_end_ms = 14;
  if (this->damage_window_end_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->damage_window_end_ms(), target);
  }

  // optional int32 energy_delta = 15;
  if (this->energy_delta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->energy_delta(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.MoveSettings)
  return target;
}

int MoveSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.MoveSettings)
  int total_size = 0;

  // optional .POGOProtos.Enums.PokemonMove movement_id = 1;
  if (this->movement_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->movement_id());
  }

  // optional int32 animation_id = 2;
  if (this->animation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animation_id());
  }

  // optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
  if (this->pokemon_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->pokemon_type());
  }

  // optional float power = 4;
  if (this->power() != 0) {
    total_size += 1 + 4;
  }

  // optional float accuracy_chance = 5;
  if (this->accuracy_chance() != 0) {
    total_size += 1 + 4;
  }

  // optional float critical_chance = 6;
  if (this->critical_chance() != 0) {
    total_size += 1 + 4;
  }

  // optional float heal_scalar = 7;
  if (this->heal_scalar() != 0) {
    total_size += 1 + 4;
  }

  // optional float stamina_loss_scalar = 8;
  if (this->stamina_loss_scalar() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 trainer_level_min = 9;
  if (this->trainer_level_min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trainer_level_min());
  }

  // optional int32 trainer_level_max = 10;
  if (this->trainer_level_max() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->trainer_level_max());
  }

  // optional string vfx_name = 11;
  if (this->vfx_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vfx_name());
  }

  // optional int32 duration_ms = 12;
  if (this->duration_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->duration_ms());
  }

  // optional int32 damage_window_start_ms = 13;
  if (this->damage_window_start_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage_window_start_ms());
  }

  // optional int32 damage_window_end_ms = 14;
  if (this->damage_window_end_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage_window_end_ms());
  }

  // optional int32 energy_delta = 15;
  if (this->energy_delta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->energy_delta());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoveSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.MoveSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MoveSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MoveSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.MoveSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.MoveSettings)
    MergeFrom(*source);
  }
}

void MoveSettings::MergeFrom(const MoveSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.MoveSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.movement_id() != 0) {
    set_movement_id(from.movement_id());
  }
  if (from.animation_id() != 0) {
    set_animation_id(from.animation_id());
  }
  if (from.pokemon_type() != 0) {
    set_pokemon_type(from.pokemon_type());
  }
  if (from.power() != 0) {
    set_power(from.power());
  }
  if (from.accuracy_chance() != 0) {
    set_accuracy_chance(from.accuracy_chance());
  }
  if (from.critical_chance() != 0) {
    set_critical_chance(from.critical_chance());
  }
  if (from.heal_scalar() != 0) {
    set_heal_scalar(from.heal_scalar());
  }
  if (from.stamina_loss_scalar() != 0) {
    set_stamina_loss_scalar(from.stamina_loss_scalar());
  }
  if (from.trainer_level_min() != 0) {
    set_trainer_level_min(from.trainer_level_min());
  }
  if (from.trainer_level_max() != 0) {
    set_trainer_level_max(from.trainer_level_max());
  }
  if (from.vfx_name().size() > 0) {

    vfx_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vfx_name_);
  }
  if (from.duration_ms() != 0) {
    set_duration_ms(from.duration_ms());
  }
  if (from.damage_window_start_ms() != 0) {
    set_damage_window_start_ms(from.damage_window_start_ms());
  }
  if (from.damage_window_end_ms() != 0) {
    set_damage_window_end_ms(from.damage_window_end_ms());
  }
  if (from.energy_delta() != 0) {
    set_energy_delta(from.energy_delta());
  }
}

void MoveSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.MoveSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoveSettings::CopyFrom(const MoveSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.MoveSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoveSettings::IsInitialized() const {

  return true;
}

void MoveSettings::Swap(MoveSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoveSettings::InternalSwap(MoveSettings* other) {
  std::swap(movement_id_, other->movement_id_);
  std::swap(animation_id_, other->animation_id_);
  std::swap(pokemon_type_, other->pokemon_type_);
  std::swap(power_, other->power_);
  std::swap(accuracy_chance_, other->accuracy_chance_);
  std::swap(critical_chance_, other->critical_chance_);
  std::swap(heal_scalar_, other->heal_scalar_);
  std::swap(stamina_loss_scalar_, other->stamina_loss_scalar_);
  std::swap(trainer_level_min_, other->trainer_level_min_);
  std::swap(trainer_level_max_, other->trainer_level_max_);
  vfx_name_.Swap(&other->vfx_name_);
  std::swap(duration_ms_, other->duration_ms_);
  std::swap(damage_window_start_ms_, other->damage_window_start_ms_);
  std::swap(damage_window_end_ms_, other->damage_window_end_ms_);
  std::swap(energy_delta_, other->energy_delta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MoveSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoveSettings_descriptor_;
  metadata.reflection = MoveSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveSettings

// optional .POGOProtos.Enums.PokemonMove movement_id = 1;
void MoveSettings::clear_movement_id() {
  movement_id_ = 0;
}
 ::POGOProtos::Enums::PokemonMove MoveSettings::movement_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.movement_id)
  return static_cast< ::POGOProtos::Enums::PokemonMove >(movement_id_);
}
 void MoveSettings::set_movement_id(::POGOProtos::Enums::PokemonMove value) {
  
  movement_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.movement_id)
}

// optional int32 animation_id = 2;
void MoveSettings::clear_animation_id() {
  animation_id_ = 0;
}
 ::google::protobuf::int32 MoveSettings::animation_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.animation_id)
  return animation_id_;
}
 void MoveSettings::set_animation_id(::google::protobuf::int32 value) {
  
  animation_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.animation_id)
}

// optional .POGOProtos.Enums.PokemonType pokemon_type = 3;
void MoveSettings::clear_pokemon_type() {
  pokemon_type_ = 0;
}
 ::POGOProtos::Enums::PokemonType MoveSettings::pokemon_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.pokemon_type)
  return static_cast< ::POGOProtos::Enums::PokemonType >(pokemon_type_);
}
 void MoveSettings::set_pokemon_type(::POGOProtos::Enums::PokemonType value) {
  
  pokemon_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.pokemon_type)
}

// optional float power = 4;
void MoveSettings::clear_power() {
  power_ = 0;
}
 float MoveSettings::power() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.power)
  return power_;
}
 void MoveSettings::set_power(float value) {
  
  power_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.power)
}

// optional float accuracy_chance = 5;
void MoveSettings::clear_accuracy_chance() {
  accuracy_chance_ = 0;
}
 float MoveSettings::accuracy_chance() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.accuracy_chance)
  return accuracy_chance_;
}
 void MoveSettings::set_accuracy_chance(float value) {
  
  accuracy_chance_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.accuracy_chance)
}

// optional float critical_chance = 6;
void MoveSettings::clear_critical_chance() {
  critical_chance_ = 0;
}
 float MoveSettings::critical_chance() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.critical_chance)
  return critical_chance_;
}
 void MoveSettings::set_critical_chance(float value) {
  
  critical_chance_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.critical_chance)
}

// optional float heal_scalar = 7;
void MoveSettings::clear_heal_scalar() {
  heal_scalar_ = 0;
}
 float MoveSettings::heal_scalar() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.heal_scalar)
  return heal_scalar_;
}
 void MoveSettings::set_heal_scalar(float value) {
  
  heal_scalar_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.heal_scalar)
}

// optional float stamina_loss_scalar = 8;
void MoveSettings::clear_stamina_loss_scalar() {
  stamina_loss_scalar_ = 0;
}
 float MoveSettings::stamina_loss_scalar() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.stamina_loss_scalar)
  return stamina_loss_scalar_;
}
 void MoveSettings::set_stamina_loss_scalar(float value) {
  
  stamina_loss_scalar_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.stamina_loss_scalar)
}

// optional int32 trainer_level_min = 9;
void MoveSettings::clear_trainer_level_min() {
  trainer_level_min_ = 0;
}
 ::google::protobuf::int32 MoveSettings::trainer_level_min() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.trainer_level_min)
  return trainer_level_min_;
}
 void MoveSettings::set_trainer_level_min(::google::protobuf::int32 value) {
  
  trainer_level_min_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.trainer_level_min)
}

// optional int32 trainer_level_max = 10;
void MoveSettings::clear_trainer_level_max() {
  trainer_level_max_ = 0;
}
 ::google::protobuf::int32 MoveSettings::trainer_level_max() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.trainer_level_max)
  return trainer_level_max_;
}
 void MoveSettings::set_trainer_level_max(::google::protobuf::int32 value) {
  
  trainer_level_max_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.trainer_level_max)
}

// optional string vfx_name = 11;
void MoveSettings::clear_vfx_name() {
  vfx_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MoveSettings::vfx_name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  return vfx_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MoveSettings::set_vfx_name(const ::std::string& value) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
 void MoveSettings::set_vfx_name(const char* value) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
 void MoveSettings::set_vfx_name(const char* value, size_t size) {
  
  vfx_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}
 ::std::string* MoveSettings::mutable_vfx_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  return vfx_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MoveSettings::release_vfx_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.MoveSettings.vfx_name)
  
  return vfx_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MoveSettings::set_allocated_vfx_name(::std::string* vfx_name) {
  if (vfx_name != NULL) {
    
  } else {
    
  }
  vfx_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vfx_name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.MoveSettings.vfx_name)
}

// optional int32 duration_ms = 12;
void MoveSettings::clear_duration_ms() {
  duration_ms_ = 0;
}
 ::google::protobuf::int32 MoveSettings::duration_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.duration_ms)
  return duration_ms_;
}
 void MoveSettings::set_duration_ms(::google::protobuf::int32 value) {
  
  duration_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.duration_ms)
}

// optional int32 damage_window_start_ms = 13;
void MoveSettings::clear_damage_window_start_ms() {
  damage_window_start_ms_ = 0;
}
 ::google::protobuf::int32 MoveSettings::damage_window_start_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.damage_window_start_ms)
  return damage_window_start_ms_;
}
 void MoveSettings::set_damage_window_start_ms(::google::protobuf::int32 value) {
  
  damage_window_start_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.damage_window_start_ms)
}

// optional int32 damage_window_end_ms = 14;
void MoveSettings::clear_damage_window_end_ms() {
  damage_window_end_ms_ = 0;
}
 ::google::protobuf::int32 MoveSettings::damage_window_end_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.damage_window_end_ms)
  return damage_window_end_ms_;
}
 void MoveSettings::set_damage_window_end_ms(::google::protobuf::int32 value) {
  
  damage_window_end_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.damage_window_end_ms)
}

// optional int32 energy_delta = 15;
void MoveSettings::clear_energy_delta() {
  energy_delta_ = 0;
}
 ::google::protobuf::int32 MoveSettings::energy_delta() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.MoveSettings.energy_delta)
  return energy_delta_;
}
 void MoveSettings::set_energy_delta(::google::protobuf::int32 value) {
  
  energy_delta_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.MoveSettings.energy_delta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
