// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/TypeEffectiveSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/PokemonType.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();

class TypeEffectiveSettings;

// ===================================================================

class TypeEffectiveSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.Master.TypeEffectiveSettings) */ {
 public:
  TypeEffectiveSettings();
  virtual ~TypeEffectiveSettings();

  TypeEffectiveSettings(const TypeEffectiveSettings& from);

  inline TypeEffectiveSettings& operator=(const TypeEffectiveSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeEffectiveSettings& default_instance();

  void Swap(TypeEffectiveSettings* other);

  // implements Message ----------------------------------------------

  inline TypeEffectiveSettings* New() const { return New(NULL); }

  TypeEffectiveSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeEffectiveSettings& from);
  void MergeFrom(const TypeEffectiveSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeEffectiveSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float attack_scalar = 1;
  int attack_scalar_size() const;
  void clear_attack_scalar();
  static const int kAttackScalarFieldNumber = 1;
  float attack_scalar(int index) const;
  void set_attack_scalar(int index, float value);
  void add_attack_scalar(float value);
  const ::google::protobuf::RepeatedField< float >&
      attack_scalar() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_attack_scalar();

  // optional .POGOProtos.Enums.PokemonType attack_type = 2;
  void clear_attack_type();
  static const int kAttackTypeFieldNumber = 2;
  ::POGOProtos::Enums::PokemonType attack_type() const;
  void set_attack_type(::POGOProtos::Enums::PokemonType value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.TypeEffectiveSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< float > attack_scalar_;
  mutable int _attack_scalar_cached_byte_size_;
  int attack_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto();

  void InitAsDefaultInstance();
  static TypeEffectiveSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeEffectiveSettings

// repeated float attack_scalar = 1;
inline int TypeEffectiveSettings::attack_scalar_size() const {
  return attack_scalar_.size();
}
inline void TypeEffectiveSettings::clear_attack_scalar() {
  attack_scalar_.Clear();
}
inline float TypeEffectiveSettings::attack_scalar(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_scalar)
  return attack_scalar_.Get(index);
}
inline void TypeEffectiveSettings::set_attack_scalar(int index, float value) {
  attack_scalar_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_scalar)
}
inline void TypeEffectiveSettings::add_attack_scalar(float value) {
  attack_scalar_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_scalar)
}
inline const ::google::protobuf::RepeatedField< float >&
TypeEffectiveSettings::attack_scalar() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_scalar)
  return attack_scalar_;
}
inline ::google::protobuf::RepeatedField< float >*
TypeEffectiveSettings::mutable_attack_scalar() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_scalar)
  return &attack_scalar_;
}

// optional .POGOProtos.Enums.PokemonType attack_type = 2;
inline void TypeEffectiveSettings::clear_attack_type() {
  attack_type_ = 0;
}
inline ::POGOProtos::Enums::PokemonType TypeEffectiveSettings::attack_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_type)
  return static_cast< ::POGOProtos::Enums::PokemonType >(attack_type_);
}
inline void TypeEffectiveSettings::set_attack_type(::POGOProtos::Enums::PokemonType value) {
  
  attack_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.TypeEffectiveSettings.attack_type)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMaster_2fTypeEffectiveSettings_2eproto__INCLUDED
