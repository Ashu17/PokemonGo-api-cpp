// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PokemonSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/PokemonId.pb.h"
#include "POGOProtos/Enums/PokemonRarity.pb.h"
#include "POGOProtos/Enums/PokemonType.pb.h"
#include "POGOProtos/Enums/PokemonMove.pb.h"
#include "POGOProtos/Enums/PokemonFamilyId.pb.h"
#include "POGOProtos/Settings/Master/Pokemon/StatsAttributes.pb.h"
#include "POGOProtos/Settings/Master/Pokemon/CameraAttributes.pb.h"
#include "POGOProtos/Settings/Master/Pokemon/EncounterAttributes.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();

class PokemonSettings;

// ===================================================================

class PokemonSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.Master.PokemonSettings) */ {
 public:
  PokemonSettings();
  virtual ~PokemonSettings();

  PokemonSettings(const PokemonSettings& from);

  inline PokemonSettings& operator=(const PokemonSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PokemonSettings& default_instance();

  void Swap(PokemonSettings* other);

  // implements Message ----------------------------------------------

  inline PokemonSettings* New() const { return New(NULL); }

  PokemonSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PokemonSettings& from);
  void MergeFrom(const PokemonSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PokemonSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Enums.PokemonId pokemon_id = 1;
  void clear_pokemon_id();
  static const int kPokemonIdFieldNumber = 1;
  ::POGOProtos::Enums::PokemonId pokemon_id() const;
  void set_pokemon_id(::POGOProtos::Enums::PokemonId value);

  // optional float model_scale = 3;
  void clear_model_scale();
  static const int kModelScaleFieldNumber = 3;
  float model_scale() const;
  void set_model_scale(float value);

  // optional .POGOProtos.Enums.PokemonType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::POGOProtos::Enums::PokemonType type() const;
  void set_type(::POGOProtos::Enums::PokemonType value);

  // optional .POGOProtos.Enums.PokemonType type_2 = 5;
  void clear_type_2();
  static const int kType2FieldNumber = 5;
  ::POGOProtos::Enums::PokemonType type_2() const;
  void set_type_2(::POGOProtos::Enums::PokemonType value);

  // optional .POGOProtos.Settings.Master.Pokemon.CameraAttributes camera = 6;
  bool has_camera() const;
  void clear_camera();
  static const int kCameraFieldNumber = 6;
  const ::POGOProtos::Settings::Master::Pokemon::CameraAttributes& camera() const;
  ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* mutable_camera();
  ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* release_camera();
  void set_allocated_camera(::POGOProtos::Settings::Master::Pokemon::CameraAttributes* camera);

  // optional .POGOProtos.Settings.Master.Pokemon.EncounterAttributes encounter = 7;
  bool has_encounter() const;
  void clear_encounter();
  static const int kEncounterFieldNumber = 7;
  const ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes& encounter() const;
  ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* mutable_encounter();
  ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* release_encounter();
  void set_allocated_encounter(::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* encounter);

  // optional .POGOProtos.Settings.Master.Pokemon.StatsAttributes stats = 8;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 8;
  const ::POGOProtos::Settings::Master::Pokemon::StatsAttributes& stats() const;
  ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* mutable_stats();
  ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* release_stats();
  void set_allocated_stats(::POGOProtos::Settings::Master::Pokemon::StatsAttributes* stats);

  // repeated .POGOProtos.Enums.PokemonMove quick_moves = 9;
  int quick_moves_size() const;
  void clear_quick_moves();
  static const int kQuickMovesFieldNumber = 9;
  ::POGOProtos::Enums::PokemonMove quick_moves(int index) const;
  void set_quick_moves(int index, ::POGOProtos::Enums::PokemonMove value);
  void add_quick_moves(::POGOProtos::Enums::PokemonMove value);
  const ::google::protobuf::RepeatedField<int>& quick_moves() const;
  ::google::protobuf::RepeatedField<int>* mutable_quick_moves();

  // repeated .POGOProtos.Enums.PokemonMove cinematic_moves = 10;
  int cinematic_moves_size() const;
  void clear_cinematic_moves();
  static const int kCinematicMovesFieldNumber = 10;
  ::POGOProtos::Enums::PokemonMove cinematic_moves(int index) const;
  void set_cinematic_moves(int index, ::POGOProtos::Enums::PokemonMove value);
  void add_cinematic_moves(::POGOProtos::Enums::PokemonMove value);
  const ::google::protobuf::RepeatedField<int>& cinematic_moves() const;
  ::google::protobuf::RepeatedField<int>* mutable_cinematic_moves();

  // repeated float animation_time = 11;
  int animation_time_size() const;
  void clear_animation_time();
  static const int kAnimationTimeFieldNumber = 11;
  float animation_time(int index) const;
  void set_animation_time(int index, float value);
  void add_animation_time(float value);
  const ::google::protobuf::RepeatedField< float >&
      animation_time() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_animation_time();

  // repeated .POGOProtos.Enums.PokemonId evolution_ids = 12;
  int evolution_ids_size() const;
  void clear_evolution_ids();
  static const int kEvolutionIdsFieldNumber = 12;
  ::POGOProtos::Enums::PokemonId evolution_ids(int index) const;
  void set_evolution_ids(int index, ::POGOProtos::Enums::PokemonId value);
  void add_evolution_ids(::POGOProtos::Enums::PokemonId value);
  const ::google::protobuf::RepeatedField<int>& evolution_ids() const;
  ::google::protobuf::RepeatedField<int>* mutable_evolution_ids();

  // optional int32 evolution_pips = 13;
  void clear_evolution_pips();
  static const int kEvolutionPipsFieldNumber = 13;
  ::google::protobuf::int32 evolution_pips() const;
  void set_evolution_pips(::google::protobuf::int32 value);

  // optional .POGOProtos.Enums.PokemonRarity rarity = 14;
  void clear_rarity();
  static const int kRarityFieldNumber = 14;
  ::POGOProtos::Enums::PokemonRarity rarity() const;
  void set_rarity(::POGOProtos::Enums::PokemonRarity value);

  // optional float pokedex_height_m = 15;
  void clear_pokedex_height_m();
  static const int kPokedexHeightMFieldNumber = 15;
  float pokedex_height_m() const;
  void set_pokedex_height_m(float value);

  // optional float pokedex_weight_kg = 16;
  void clear_pokedex_weight_kg();
  static const int kPokedexWeightKgFieldNumber = 16;
  float pokedex_weight_kg() const;
  void set_pokedex_weight_kg(float value);

  // optional .POGOProtos.Enums.PokemonId parent_pokemon_id = 17;
  void clear_parent_pokemon_id();
  static const int kParentPokemonIdFieldNumber = 17;
  ::POGOProtos::Enums::PokemonId parent_pokemon_id() const;
  void set_parent_pokemon_id(::POGOProtos::Enums::PokemonId value);

  // optional float height_std_dev = 18;
  void clear_height_std_dev();
  static const int kHeightStdDevFieldNumber = 18;
  float height_std_dev() const;
  void set_height_std_dev(float value);

  // optional float weight_std_dev = 19;
  void clear_weight_std_dev();
  static const int kWeightStdDevFieldNumber = 19;
  float weight_std_dev() const;
  void set_weight_std_dev(float value);

  // optional float km_distance_to_hatch = 20;
  void clear_km_distance_to_hatch();
  static const int kKmDistanceToHatchFieldNumber = 20;
  float km_distance_to_hatch() const;
  void set_km_distance_to_hatch(float value);

  // optional .POGOProtos.Enums.PokemonFamilyId family_id = 21;
  void clear_family_id();
  static const int kFamilyIdFieldNumber = 21;
  ::POGOProtos::Enums::PokemonFamilyId family_id() const;
  void set_family_id(::POGOProtos::Enums::PokemonFamilyId value);

  // optional int32 candy_to_evolve = 22;
  void clear_candy_to_evolve();
  static const int kCandyToEvolveFieldNumber = 22;
  ::google::protobuf::int32 candy_to_evolve() const;
  void set_candy_to_evolve(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.PokemonSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int pokemon_id_;
  float model_scale_;
  int type_;
  int type_2_;
  ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* camera_;
  ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* encounter_;
  ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* stats_;
  ::google::protobuf::RepeatedField<int> quick_moves_;
  mutable int _quick_moves_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> cinematic_moves_;
  mutable int _cinematic_moves_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > animation_time_;
  mutable int _animation_time_cached_byte_size_;
  ::google::protobuf::RepeatedField<int> evolution_ids_;
  mutable int _evolution_ids_cached_byte_size_;
  ::google::protobuf::int32 evolution_pips_;
  int rarity_;
  float pokedex_height_m_;
  float pokedex_weight_kg_;
  int parent_pokemon_id_;
  float height_std_dev_;
  float weight_std_dev_;
  float km_distance_to_hatch_;
  int family_id_;
  ::google::protobuf::int32 candy_to_evolve_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto();

  void InitAsDefaultInstance();
  static PokemonSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PokemonSettings

// optional .POGOProtos.Enums.PokemonId pokemon_id = 1;
inline void PokemonSettings::clear_pokemon_id() {
  pokemon_id_ = 0;
}
inline ::POGOProtos::Enums::PokemonId PokemonSettings::pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.pokemon_id)
  return static_cast< ::POGOProtos::Enums::PokemonId >(pokemon_id_);
}
inline void PokemonSettings::set_pokemon_id(::POGOProtos::Enums::PokemonId value) {
  
  pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.pokemon_id)
}

// optional float model_scale = 3;
inline void PokemonSettings::clear_model_scale() {
  model_scale_ = 0;
}
inline float PokemonSettings::model_scale() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.model_scale)
  return model_scale_;
}
inline void PokemonSettings::set_model_scale(float value) {
  
  model_scale_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.model_scale)
}

// optional .POGOProtos.Enums.PokemonType type = 4;
inline void PokemonSettings::clear_type() {
  type_ = 0;
}
inline ::POGOProtos::Enums::PokemonType PokemonSettings::type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.type)
  return static_cast< ::POGOProtos::Enums::PokemonType >(type_);
}
inline void PokemonSettings::set_type(::POGOProtos::Enums::PokemonType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.type)
}

// optional .POGOProtos.Enums.PokemonType type_2 = 5;
inline void PokemonSettings::clear_type_2() {
  type_2_ = 0;
}
inline ::POGOProtos::Enums::PokemonType PokemonSettings::type_2() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.type_2)
  return static_cast< ::POGOProtos::Enums::PokemonType >(type_2_);
}
inline void PokemonSettings::set_type_2(::POGOProtos::Enums::PokemonType value) {
  
  type_2_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.type_2)
}

// optional .POGOProtos.Settings.Master.Pokemon.CameraAttributes camera = 6;
inline bool PokemonSettings::has_camera() const {
  return !_is_default_instance_ && camera_ != NULL;
}
inline void PokemonSettings::clear_camera() {
  if (GetArenaNoVirtual() == NULL && camera_ != NULL) delete camera_;
  camera_ = NULL;
}
inline const ::POGOProtos::Settings::Master::Pokemon::CameraAttributes& PokemonSettings::camera() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.camera)
  return camera_ != NULL ? *camera_ : *default_instance_->camera_;
}
inline ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* PokemonSettings::mutable_camera() {
  
  if (camera_ == NULL) {
    camera_ = new ::POGOProtos::Settings::Master::Pokemon::CameraAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.PokemonSettings.camera)
  return camera_;
}
inline ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* PokemonSettings::release_camera() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.PokemonSettings.camera)
  
  ::POGOProtos::Settings::Master::Pokemon::CameraAttributes* temp = camera_;
  camera_ = NULL;
  return temp;
}
inline void PokemonSettings::set_allocated_camera(::POGOProtos::Settings::Master::Pokemon::CameraAttributes* camera) {
  delete camera_;
  camera_ = camera;
  if (camera) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.PokemonSettings.camera)
}

// optional .POGOProtos.Settings.Master.Pokemon.EncounterAttributes encounter = 7;
inline bool PokemonSettings::has_encounter() const {
  return !_is_default_instance_ && encounter_ != NULL;
}
inline void PokemonSettings::clear_encounter() {
  if (GetArenaNoVirtual() == NULL && encounter_ != NULL) delete encounter_;
  encounter_ = NULL;
}
inline const ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes& PokemonSettings::encounter() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.encounter)
  return encounter_ != NULL ? *encounter_ : *default_instance_->encounter_;
}
inline ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* PokemonSettings::mutable_encounter() {
  
  if (encounter_ == NULL) {
    encounter_ = new ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.PokemonSettings.encounter)
  return encounter_;
}
inline ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* PokemonSettings::release_encounter() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.PokemonSettings.encounter)
  
  ::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* temp = encounter_;
  encounter_ = NULL;
  return temp;
}
inline void PokemonSettings::set_allocated_encounter(::POGOProtos::Settings::Master::Pokemon::EncounterAttributes* encounter) {
  delete encounter_;
  encounter_ = encounter;
  if (encounter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.PokemonSettings.encounter)
}

// optional .POGOProtos.Settings.Master.Pokemon.StatsAttributes stats = 8;
inline bool PokemonSettings::has_stats() const {
  return !_is_default_instance_ && stats_ != NULL;
}
inline void PokemonSettings::clear_stats() {
  if (GetArenaNoVirtual() == NULL && stats_ != NULL) delete stats_;
  stats_ = NULL;
}
inline const ::POGOProtos::Settings::Master::Pokemon::StatsAttributes& PokemonSettings::stats() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.stats)
  return stats_ != NULL ? *stats_ : *default_instance_->stats_;
}
inline ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* PokemonSettings::mutable_stats() {
  
  if (stats_ == NULL) {
    stats_ = new ::POGOProtos::Settings::Master::Pokemon::StatsAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.PokemonSettings.stats)
  return stats_;
}
inline ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* PokemonSettings::release_stats() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.PokemonSettings.stats)
  
  ::POGOProtos::Settings::Master::Pokemon::StatsAttributes* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void PokemonSettings::set_allocated_stats(::POGOProtos::Settings::Master::Pokemon::StatsAttributes* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.PokemonSettings.stats)
}

// repeated .POGOProtos.Enums.PokemonMove quick_moves = 9;
inline int PokemonSettings::quick_moves_size() const {
  return quick_moves_.size();
}
inline void PokemonSettings::clear_quick_moves() {
  quick_moves_.Clear();
}
inline ::POGOProtos::Enums::PokemonMove PokemonSettings::quick_moves(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.quick_moves)
  return static_cast< ::POGOProtos::Enums::PokemonMove >(quick_moves_.Get(index));
}
inline void PokemonSettings::set_quick_moves(int index, ::POGOProtos::Enums::PokemonMove value) {
  quick_moves_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.quick_moves)
}
inline void PokemonSettings::add_quick_moves(::POGOProtos::Enums::PokemonMove value) {
  quick_moves_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonSettings.quick_moves)
}
inline const ::google::protobuf::RepeatedField<int>&
PokemonSettings::quick_moves() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonSettings.quick_moves)
  return quick_moves_;
}
inline ::google::protobuf::RepeatedField<int>*
PokemonSettings::mutable_quick_moves() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonSettings.quick_moves)
  return &quick_moves_;
}

// repeated .POGOProtos.Enums.PokemonMove cinematic_moves = 10;
inline int PokemonSettings::cinematic_moves_size() const {
  return cinematic_moves_.size();
}
inline void PokemonSettings::clear_cinematic_moves() {
  cinematic_moves_.Clear();
}
inline ::POGOProtos::Enums::PokemonMove PokemonSettings::cinematic_moves(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.cinematic_moves)
  return static_cast< ::POGOProtos::Enums::PokemonMove >(cinematic_moves_.Get(index));
}
inline void PokemonSettings::set_cinematic_moves(int index, ::POGOProtos::Enums::PokemonMove value) {
  cinematic_moves_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.cinematic_moves)
}
inline void PokemonSettings::add_cinematic_moves(::POGOProtos::Enums::PokemonMove value) {
  cinematic_moves_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonSettings.cinematic_moves)
}
inline const ::google::protobuf::RepeatedField<int>&
PokemonSettings::cinematic_moves() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonSettings.cinematic_moves)
  return cinematic_moves_;
}
inline ::google::protobuf::RepeatedField<int>*
PokemonSettings::mutable_cinematic_moves() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonSettings.cinematic_moves)
  return &cinematic_moves_;
}

// repeated float animation_time = 11;
inline int PokemonSettings::animation_time_size() const {
  return animation_time_.size();
}
inline void PokemonSettings::clear_animation_time() {
  animation_time_.Clear();
}
inline float PokemonSettings::animation_time(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.animation_time)
  return animation_time_.Get(index);
}
inline void PokemonSettings::set_animation_time(int index, float value) {
  animation_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.animation_time)
}
inline void PokemonSettings::add_animation_time(float value) {
  animation_time_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonSettings.animation_time)
}
inline const ::google::protobuf::RepeatedField< float >&
PokemonSettings::animation_time() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonSettings.animation_time)
  return animation_time_;
}
inline ::google::protobuf::RepeatedField< float >*
PokemonSettings::mutable_animation_time() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonSettings.animation_time)
  return &animation_time_;
}

// repeated .POGOProtos.Enums.PokemonId evolution_ids = 12;
inline int PokemonSettings::evolution_ids_size() const {
  return evolution_ids_.size();
}
inline void PokemonSettings::clear_evolution_ids() {
  evolution_ids_.Clear();
}
inline ::POGOProtos::Enums::PokemonId PokemonSettings::evolution_ids(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.evolution_ids)
  return static_cast< ::POGOProtos::Enums::PokemonId >(evolution_ids_.Get(index));
}
inline void PokemonSettings::set_evolution_ids(int index, ::POGOProtos::Enums::PokemonId value) {
  evolution_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.evolution_ids)
}
inline void PokemonSettings::add_evolution_ids(::POGOProtos::Enums::PokemonId value) {
  evolution_ids_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonSettings.evolution_ids)
}
inline const ::google::protobuf::RepeatedField<int>&
PokemonSettings::evolution_ids() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonSettings.evolution_ids)
  return evolution_ids_;
}
inline ::google::protobuf::RepeatedField<int>*
PokemonSettings::mutable_evolution_ids() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonSettings.evolution_ids)
  return &evolution_ids_;
}

// optional int32 evolution_pips = 13;
inline void PokemonSettings::clear_evolution_pips() {
  evolution_pips_ = 0;
}
inline ::google::protobuf::int32 PokemonSettings::evolution_pips() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.evolution_pips)
  return evolution_pips_;
}
inline void PokemonSettings::set_evolution_pips(::google::protobuf::int32 value) {
  
  evolution_pips_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.evolution_pips)
}

// optional .POGOProtos.Enums.PokemonRarity rarity = 14;
inline void PokemonSettings::clear_rarity() {
  rarity_ = 0;
}
inline ::POGOProtos::Enums::PokemonRarity PokemonSettings::rarity() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.rarity)
  return static_cast< ::POGOProtos::Enums::PokemonRarity >(rarity_);
}
inline void PokemonSettings::set_rarity(::POGOProtos::Enums::PokemonRarity value) {
  
  rarity_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.rarity)
}

// optional float pokedex_height_m = 15;
inline void PokemonSettings::clear_pokedex_height_m() {
  pokedex_height_m_ = 0;
}
inline float PokemonSettings::pokedex_height_m() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.pokedex_height_m)
  return pokedex_height_m_;
}
inline void PokemonSettings::set_pokedex_height_m(float value) {
  
  pokedex_height_m_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.pokedex_height_m)
}

// optional float pokedex_weight_kg = 16;
inline void PokemonSettings::clear_pokedex_weight_kg() {
  pokedex_weight_kg_ = 0;
}
inline float PokemonSettings::pokedex_weight_kg() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.pokedex_weight_kg)
  return pokedex_weight_kg_;
}
inline void PokemonSettings::set_pokedex_weight_kg(float value) {
  
  pokedex_weight_kg_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.pokedex_weight_kg)
}

// optional .POGOProtos.Enums.PokemonId parent_pokemon_id = 17;
inline void PokemonSettings::clear_parent_pokemon_id() {
  parent_pokemon_id_ = 0;
}
inline ::POGOProtos::Enums::PokemonId PokemonSettings::parent_pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.parent_pokemon_id)
  return static_cast< ::POGOProtos::Enums::PokemonId >(parent_pokemon_id_);
}
inline void PokemonSettings::set_parent_pokemon_id(::POGOProtos::Enums::PokemonId value) {
  
  parent_pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.parent_pokemon_id)
}

// optional float height_std_dev = 18;
inline void PokemonSettings::clear_height_std_dev() {
  height_std_dev_ = 0;
}
inline float PokemonSettings::height_std_dev() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.height_std_dev)
  return height_std_dev_;
}
inline void PokemonSettings::set_height_std_dev(float value) {
  
  height_std_dev_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.height_std_dev)
}

// optional float weight_std_dev = 19;
inline void PokemonSettings::clear_weight_std_dev() {
  weight_std_dev_ = 0;
}
inline float PokemonSettings::weight_std_dev() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.weight_std_dev)
  return weight_std_dev_;
}
inline void PokemonSettings::set_weight_std_dev(float value) {
  
  weight_std_dev_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.weight_std_dev)
}

// optional float km_distance_to_hatch = 20;
inline void PokemonSettings::clear_km_distance_to_hatch() {
  km_distance_to_hatch_ = 0;
}
inline float PokemonSettings::km_distance_to_hatch() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.km_distance_to_hatch)
  return km_distance_to_hatch_;
}
inline void PokemonSettings::set_km_distance_to_hatch(float value) {
  
  km_distance_to_hatch_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.km_distance_to_hatch)
}

// optional .POGOProtos.Enums.PokemonFamilyId family_id = 21;
inline void PokemonSettings::clear_family_id() {
  family_id_ = 0;
}
inline ::POGOProtos::Enums::PokemonFamilyId PokemonSettings::family_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.family_id)
  return static_cast< ::POGOProtos::Enums::PokemonFamilyId >(family_id_);
}
inline void PokemonSettings::set_family_id(::POGOProtos::Enums::PokemonFamilyId value) {
  
  family_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.family_id)
}

// optional int32 candy_to_evolve = 22;
inline void PokemonSettings::clear_candy_to_evolve() {
  candy_to_evolve_ = 0;
}
inline ::google::protobuf::int32 PokemonSettings::candy_to_evolve() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonSettings.candy_to_evolve)
  return candy_to_evolve_;
}
inline void PokemonSettings::set_candy_to_evolve(::google::protobuf::int32 value) {
  
  candy_to_evolve_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonSettings.candy_to_evolve)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPokemonSettings_2eproto__INCLUDED
