// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/EncounterSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/EncounterSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* EncounterSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncounterSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/EncounterSettings.proto");
  GOOGLE_CHECK(file != NULL);
  EncounterSettings_descriptor_ = file->message_type(0);
  static const int EncounterSettings_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, spin_bonus_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, excellent_throw_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, great_throw_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, nice_throw_threshold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, milestone_threshold_),
  };
  EncounterSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EncounterSettings_descriptor_,
      EncounterSettings::default_instance_,
      EncounterSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(EncounterSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EncounterSettings_descriptor_, &EncounterSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() {
  delete EncounterSettings::default_instance_;
  delete EncounterSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n2POGOProtos/Settings/Master/EncounterSe"
    "ttings.proto\022\032POGOProtos.Settings.Master"
    "\"\256\001\n\021EncounterSettings\022\034\n\024spin_bonus_thr"
    "eshold\030\001 \001(\002\022!\n\031excellent_throw_threshol"
    "d\030\002 \001(\002\022\035\n\025great_throw_threshold\030\003 \001(\002\022\034"
    "\n\024nice_throw_threshold\030\004 \001(\002\022\033\n\023mileston"
    "e_threshold\030\005 \001(\005b\006proto3", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/EncounterSettings.proto", &protobuf_RegisterTypes);
  EncounterSettings::default_instance_ = new EncounterSettings();
  EncounterSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncounterSettings::kSpinBonusThresholdFieldNumber;
const int EncounterSettings::kExcellentThrowThresholdFieldNumber;
const int EncounterSettings::kGreatThrowThresholdFieldNumber;
const int EncounterSettings::kNiceThrowThresholdFieldNumber;
const int EncounterSettings::kMilestoneThresholdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncounterSettings::EncounterSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.EncounterSettings)
}

void EncounterSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EncounterSettings::EncounterSettings(const EncounterSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.EncounterSettings)
}

void EncounterSettings::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  spin_bonus_threshold_ = 0;
  excellent_throw_threshold_ = 0;
  great_throw_threshold_ = 0;
  nice_throw_threshold_ = 0;
  milestone_threshold_ = 0;
}

EncounterSettings::~EncounterSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.EncounterSettings)
  SharedDtor();
}

void EncounterSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EncounterSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncounterSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncounterSettings_descriptor_;
}

const EncounterSettings& EncounterSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fEncounterSettings_2eproto();
  return *default_instance_;
}

EncounterSettings* EncounterSettings::default_instance_ = NULL;

EncounterSettings* EncounterSettings::New(::google::protobuf::Arena* arena) const {
  EncounterSettings* n = new EncounterSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncounterSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.EncounterSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EncounterSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EncounterSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(spin_bonus_threshold_, milestone_threshold_);

#undef ZR_HELPER_
#undef ZR_

}

bool EncounterSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.EncounterSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional float spin_bonus_threshold = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &spin_bonus_threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_excellent_throw_threshold;
        break;
      }

      // optional float excellent_throw_threshold = 2;
      case 2: {
        if (tag == 21) {
         parse_excellent_throw_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &excellent_throw_threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_great_throw_threshold;
        break;
      }

      // optional float great_throw_threshold = 3;
      case 3: {
        if (tag == 29) {
         parse_great_throw_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &great_throw_threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_nice_throw_threshold;
        break;
      }

      // optional float nice_throw_threshold = 4;
      case 4: {
        if (tag == 37) {
         parse_nice_throw_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &nice_throw_threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_milestone_threshold;
        break;
      }

      // optional int32 milestone_threshold = 5;
      case 5: {
        if (tag == 40) {
         parse_milestone_threshold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &milestone_threshold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.EncounterSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.EncounterSettings)
  return false;
#undef DO_
}

void EncounterSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.EncounterSettings)
  // optional float spin_bonus_threshold = 1;
  if (this->spin_bonus_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->spin_bonus_threshold(), output);
  }

  // optional float excellent_throw_threshold = 2;
  if (this->excellent_throw_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->excellent_throw_threshold(), output);
  }

  // optional float great_throw_threshold = 3;
  if (this->great_throw_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->great_throw_threshold(), output);
  }

  // optional float nice_throw_threshold = 4;
  if (this->nice_throw_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->nice_throw_threshold(), output);
  }

  // optional int32 milestone_threshold = 5;
  if (this->milestone_threshold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->milestone_threshold(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.EncounterSettings)
}

::google::protobuf::uint8* EncounterSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.EncounterSettings)
  // optional float spin_bonus_threshold = 1;
  if (this->spin_bonus_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->spin_bonus_threshold(), target);
  }

  // optional float excellent_throw_threshold = 2;
  if (this->excellent_throw_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->excellent_throw_threshold(), target);
  }

  // optional float great_throw_threshold = 3;
  if (this->great_throw_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->great_throw_threshold(), target);
  }

  // optional float nice_throw_threshold = 4;
  if (this->nice_throw_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->nice_throw_threshold(), target);
  }

  // optional int32 milestone_threshold = 5;
  if (this->milestone_threshold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->milestone_threshold(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.EncounterSettings)
  return target;
}

int EncounterSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.EncounterSettings)
  int total_size = 0;

  // optional float spin_bonus_threshold = 1;
  if (this->spin_bonus_threshold() != 0) {
    total_size += 1 + 4;
  }

  // optional float excellent_throw_threshold = 2;
  if (this->excellent_throw_threshold() != 0) {
    total_size += 1 + 4;
  }

  // optional float great_throw_threshold = 3;
  if (this->great_throw_threshold() != 0) {
    total_size += 1 + 4;
  }

  // optional float nice_throw_threshold = 4;
  if (this->nice_throw_threshold() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 milestone_threshold = 5;
  if (this->milestone_threshold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->milestone_threshold());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncounterSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.EncounterSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EncounterSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EncounterSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.EncounterSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.EncounterSettings)
    MergeFrom(*source);
  }
}

void EncounterSettings::MergeFrom(const EncounterSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.EncounterSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.spin_bonus_threshold() != 0) {
    set_spin_bonus_threshold(from.spin_bonus_threshold());
  }
  if (from.excellent_throw_threshold() != 0) {
    set_excellent_throw_threshold(from.excellent_throw_threshold());
  }
  if (from.great_throw_threshold() != 0) {
    set_great_throw_threshold(from.great_throw_threshold());
  }
  if (from.nice_throw_threshold() != 0) {
    set_nice_throw_threshold(from.nice_throw_threshold());
  }
  if (from.milestone_threshold() != 0) {
    set_milestone_threshold(from.milestone_threshold());
  }
}

void EncounterSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.EncounterSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncounterSettings::CopyFrom(const EncounterSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.EncounterSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncounterSettings::IsInitialized() const {

  return true;
}

void EncounterSettings::Swap(EncounterSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncounterSettings::InternalSwap(EncounterSettings* other) {
  std::swap(spin_bonus_threshold_, other->spin_bonus_threshold_);
  std::swap(excellent_throw_threshold_, other->excellent_throw_threshold_);
  std::swap(great_throw_threshold_, other->great_throw_threshold_);
  std::swap(nice_throw_threshold_, other->nice_throw_threshold_);
  std::swap(milestone_threshold_, other->milestone_threshold_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncounterSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncounterSettings_descriptor_;
  metadata.reflection = EncounterSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncounterSettings

// optional float spin_bonus_threshold = 1;
void EncounterSettings::clear_spin_bonus_threshold() {
  spin_bonus_threshold_ = 0;
}
 float EncounterSettings::spin_bonus_threshold() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.EncounterSettings.spin_bonus_threshold)
  return spin_bonus_threshold_;
}
 void EncounterSettings::set_spin_bonus_threshold(float value) {
  
  spin_bonus_threshold_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.EncounterSettings.spin_bonus_threshold)
}

// optional float excellent_throw_threshold = 2;
void EncounterSettings::clear_excellent_throw_threshold() {
  excellent_throw_threshold_ = 0;
}
 float EncounterSettings::excellent_throw_threshold() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.EncounterSettings.excellent_throw_threshold)
  return excellent_throw_threshold_;
}
 void EncounterSettings::set_excellent_throw_threshold(float value) {
  
  excellent_throw_threshold_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.EncounterSettings.excellent_throw_threshold)
}

// optional float great_throw_threshold = 3;
void EncounterSettings::clear_great_throw_threshold() {
  great_throw_threshold_ = 0;
}
 float EncounterSettings::great_throw_threshold() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.EncounterSettings.great_throw_threshold)
  return great_throw_threshold_;
}
 void EncounterSettings::set_great_throw_threshold(float value) {
  
  great_throw_threshold_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.EncounterSettings.great_throw_threshold)
}

// optional float nice_throw_threshold = 4;
void EncounterSettings::clear_nice_throw_threshold() {
  nice_throw_threshold_ = 0;
}
 float EncounterSettings::nice_throw_threshold() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.EncounterSettings.nice_throw_threshold)
  return nice_throw_threshold_;
}
 void EncounterSettings::set_nice_throw_threshold(float value) {
  
  nice_throw_threshold_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.EncounterSettings.nice_throw_threshold)
}

// optional int32 milestone_threshold = 5;
void EncounterSettings::clear_milestone_threshold() {
  milestone_threshold_ = 0;
}
 ::google::protobuf::int32 EncounterSettings::milestone_threshold() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.EncounterSettings.milestone_threshold)
  return milestone_threshold_;
}
 void EncounterSettings::set_milestone_threshold(::google::protobuf::int32 value) {
  
  milestone_threshold_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.EncounterSettings.milestone_threshold)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
