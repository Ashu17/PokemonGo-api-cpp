// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/CameraSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/CameraSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* CameraSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CameraSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/CameraSettings.proto");
  GOOGLE_CHECK(file != NULL);
  CameraSettings_descriptor_ = file->message_type(0);
  static const int CameraSettings_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, next_camera_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, interpolation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, target_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, ease_in_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, east_out_speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, duration_seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, wait_seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, transition_seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, angle_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, angle_offset_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, pitch_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, pitch_offset_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, roll_degree_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, distance_meters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, height_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, vert_ctr_ratio_),
  };
  CameraSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CameraSettings_descriptor_,
      CameraSettings::default_instance_,
      CameraSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(CameraSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CameraSettings_descriptor_, &CameraSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() {
  delete CameraSettings::default_instance_;
  delete CameraSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fCameraTarget_2eproto();
  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fCameraInterpolation_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/POGOProtos/Settings/Master/CameraSetti"
    "ngs.proto\022\032POGOProtos.Settings.Master\032#P"
    "OGOProtos/Enums/CameraTarget.proto\032*POGO"
    "Protos/Enums/CameraInterpolation.proto\"\327"
    "\003\n\016CameraSettings\022\023\n\013next_camera\030\001 \001(\t\022<"
    "\n\rinterpolation\030\002 \003(\0162%.POGOProtos.Enums"
    ".CameraInterpolation\0223\n\013target_type\030\003 \003("
    "\0162\036.POGOProtos.Enums.CameraTarget\022\025\n\reas"
    "e_in_speed\030\004 \003(\002\022\026\n\016east_out_speed\030\005 \003(\002"
    "\022\030\n\020duration_seconds\030\006 \003(\002\022\024\n\014wait_secon"
    "ds\030\007 \003(\002\022\032\n\022transition_seconds\030\010 \003(\002\022\024\n\014"
    "angle_degree\030\t \003(\002\022\033\n\023angle_offset_degre"
    "e\030\n \003(\002\022\024\n\014pitch_degree\030\013 \003(\002\022\033\n\023pitch_o"
    "ffset_degree\030\014 \003(\002\022\023\n\013roll_degree\030\r \003(\002\022"
    "\027\n\017distance_meters\030\016 \003(\002\022\026\n\016height_perce"
    "nt\030\017 \003(\002\022\026\n\016vert_ctr_ratio\030\020 \003(\002b\006proto3", 640);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/CameraSettings.proto", &protobuf_RegisterTypes);
  CameraSettings::default_instance_ = new CameraSettings();
  CameraSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraSettings::kNextCameraFieldNumber;
const int CameraSettings::kInterpolationFieldNumber;
const int CameraSettings::kTargetTypeFieldNumber;
const int CameraSettings::kEaseInSpeedFieldNumber;
const int CameraSettings::kEastOutSpeedFieldNumber;
const int CameraSettings::kDurationSecondsFieldNumber;
const int CameraSettings::kWaitSecondsFieldNumber;
const int CameraSettings::kTransitionSecondsFieldNumber;
const int CameraSettings::kAngleDegreeFieldNumber;
const int CameraSettings::kAngleOffsetDegreeFieldNumber;
const int CameraSettings::kPitchDegreeFieldNumber;
const int CameraSettings::kPitchOffsetDegreeFieldNumber;
const int CameraSettings::kRollDegreeFieldNumber;
const int CameraSettings::kDistanceMetersFieldNumber;
const int CameraSettings::kHeightPercentFieldNumber;
const int CameraSettings::kVertCtrRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraSettings::CameraSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.CameraSettings)
}

void CameraSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

CameraSettings::CameraSettings(const CameraSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.CameraSettings)
}

void CameraSettings::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  next_camera_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CameraSettings::~CameraSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.CameraSettings)
  SharedDtor();
}

void CameraSettings::SharedDtor() {
  next_camera_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CameraSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CameraSettings_descriptor_;
}

const CameraSettings& CameraSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fCameraSettings_2eproto();
  return *default_instance_;
}

CameraSettings* CameraSettings::default_instance_ = NULL;

CameraSettings* CameraSettings::New(::google::protobuf::Arena* arena) const {
  CameraSettings* n = new CameraSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.CameraSettings)
  next_camera_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interpolation_.Clear();
  target_type_.Clear();
  ease_in_speed_.Clear();
  east_out_speed_.Clear();
  duration_seconds_.Clear();
  wait_seconds_.Clear();
  transition_seconds_.Clear();
  angle_degree_.Clear();
  angle_offset_degree_.Clear();
  pitch_degree_.Clear();
  pitch_offset_degree_.Clear();
  roll_degree_.Clear();
  distance_meters_.Clear();
  height_percent_.Clear();
  vert_ctr_ratio_.Clear();
}

bool CameraSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.CameraSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string next_camera = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_camera()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_camera().data(), this->next_camera().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Settings.Master.CameraSettings.next_camera"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_interpolation;
        break;
      }

      // repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;
      case 2: {
        if (tag == 18) {
         parse_interpolation:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_interpolation(static_cast< ::POGOProtos::Enums::CameraInterpolation >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 16) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_interpolation(static_cast< ::POGOProtos::Enums::CameraInterpolation >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_target_type;
        break;
      }

      // repeated .POGOProtos.Enums.CameraTarget target_type = 3;
      case 3: {
        if (tag == 26) {
         parse_target_type:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_target_type(static_cast< ::POGOProtos::Enums::CameraTarget >(value));
          }
          input->PopLimit(limit);
        } else if (tag == 24) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_target_type(static_cast< ::POGOProtos::Enums::CameraTarget >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ease_in_speed;
        break;
      }

      // repeated float ease_in_speed = 4;
      case 4: {
        if (tag == 34) {
         parse_ease_in_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_ease_in_speed())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_ease_in_speed())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_east_out_speed;
        break;
      }

      // repeated float east_out_speed = 5;
      case 5: {
        if (tag == 42) {
         parse_east_out_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_east_out_speed())));
        } else if (tag == 45) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42, input, this->mutable_east_out_speed())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_duration_seconds;
        break;
      }

      // repeated float duration_seconds = 6;
      case 6: {
        if (tag == 50) {
         parse_duration_seconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_duration_seconds())));
        } else if (tag == 53) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50, input, this->mutable_duration_seconds())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_wait_seconds;
        break;
      }

      // repeated float wait_seconds = 7;
      case 7: {
        if (tag == 58) {
         parse_wait_seconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_wait_seconds())));
        } else if (tag == 61) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 58, input, this->mutable_wait_seconds())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_transition_seconds;
        break;
      }

      // repeated float transition_seconds = 8;
      case 8: {
        if (tag == 66) {
         parse_transition_seconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_transition_seconds())));
        } else if (tag == 69) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66, input, this->mutable_transition_seconds())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_angle_degree;
        break;
      }

      // repeated float angle_degree = 9;
      case 9: {
        if (tag == 74) {
         parse_angle_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_angle_degree())));
        } else if (tag == 77) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74, input, this->mutable_angle_degree())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_angle_offset_degree;
        break;
      }

      // repeated float angle_offset_degree = 10;
      case 10: {
        if (tag == 82) {
         parse_angle_offset_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_angle_offset_degree())));
        } else if (tag == 85) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 82, input, this->mutable_angle_offset_degree())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_pitch_degree;
        break;
      }

      // repeated float pitch_degree = 11;
      case 11: {
        if (tag == 90) {
         parse_pitch_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_pitch_degree())));
        } else if (tag == 93) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 90, input, this->mutable_pitch_degree())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_pitch_offset_degree;
        break;
      }

      // repeated float pitch_offset_degree = 12;
      case 12: {
        if (tag == 98) {
         parse_pitch_offset_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_pitch_offset_degree())));
        } else if (tag == 101) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 98, input, this->mutable_pitch_offset_degree())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_roll_degree;
        break;
      }

      // repeated float roll_degree = 13;
      case 13: {
        if (tag == 106) {
         parse_roll_degree:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_roll_degree())));
        } else if (tag == 109) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 106, input, this->mutable_roll_degree())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_distance_meters;
        break;
      }

      // repeated float distance_meters = 14;
      case 14: {
        if (tag == 114) {
         parse_distance_meters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_distance_meters())));
        } else if (tag == 117) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 114, input, this->mutable_distance_meters())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_height_percent;
        break;
      }

      // repeated float height_percent = 15;
      case 15: {
        if (tag == 122) {
         parse_height_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_height_percent())));
        } else if (tag == 125) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 122, input, this->mutable_height_percent())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_vert_ctr_ratio;
        break;
      }

      // repeated float vert_ctr_ratio = 16;
      case 16: {
        if (tag == 130) {
         parse_vert_ctr_ratio:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_vert_ctr_ratio())));
        } else if (tag == 133) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 130, input, this->mutable_vert_ctr_ratio())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.CameraSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.CameraSettings)
  return false;
#undef DO_
}

void CameraSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.CameraSettings)
  // optional string next_camera = 1;
  if (this->next_camera().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_camera().data(), this->next_camera().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.Master.CameraSettings.next_camera");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->next_camera(), output);
  }

  // repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;
  if (this->interpolation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_interpolation_cached_byte_size_);
  }
  for (int i = 0; i < this->interpolation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->interpolation(i), output);
  }

  // repeated .POGOProtos.Enums.CameraTarget target_type = 3;
  if (this->target_type_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_target_type_cached_byte_size_);
  }
  for (int i = 0; i < this->target_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->target_type(i), output);
  }

  // repeated float ease_in_speed = 4;
  if (this->ease_in_speed_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_ease_in_speed_cached_byte_size_);
  }
  for (int i = 0; i < this->ease_in_speed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->ease_in_speed(i), output);
  }

  // repeated float east_out_speed = 5;
  if (this->east_out_speed_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_east_out_speed_cached_byte_size_);
  }
  for (int i = 0; i < this->east_out_speed_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->east_out_speed(i), output);
  }

  // repeated float duration_seconds = 6;
  if (this->duration_seconds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_duration_seconds_cached_byte_size_);
  }
  for (int i = 0; i < this->duration_seconds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->duration_seconds(i), output);
  }

  // repeated float wait_seconds = 7;
  if (this->wait_seconds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_wait_seconds_cached_byte_size_);
  }
  for (int i = 0; i < this->wait_seconds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->wait_seconds(i), output);
  }

  // repeated float transition_seconds = 8;
  if (this->transition_seconds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_transition_seconds_cached_byte_size_);
  }
  for (int i = 0; i < this->transition_seconds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->transition_seconds(i), output);
  }

  // repeated float angle_degree = 9;
  if (this->angle_degree_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_angle_degree_cached_byte_size_);
  }
  for (int i = 0; i < this->angle_degree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->angle_degree(i), output);
  }

  // repeated float angle_offset_degree = 10;
  if (this->angle_offset_degree_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_angle_offset_degree_cached_byte_size_);
  }
  for (int i = 0; i < this->angle_offset_degree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->angle_offset_degree(i), output);
  }

  // repeated float pitch_degree = 11;
  if (this->pitch_degree_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pitch_degree_cached_byte_size_);
  }
  for (int i = 0; i < this->pitch_degree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->pitch_degree(i), output);
  }

  // repeated float pitch_offset_degree = 12;
  if (this->pitch_offset_degree_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_pitch_offset_degree_cached_byte_size_);
  }
  for (int i = 0; i < this->pitch_offset_degree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->pitch_offset_degree(i), output);
  }

  // repeated float roll_degree = 13;
  if (this->roll_degree_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(13, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_roll_degree_cached_byte_size_);
  }
  for (int i = 0; i < this->roll_degree_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->roll_degree(i), output);
  }

  // repeated float distance_meters = 14;
  if (this->distance_meters_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_distance_meters_cached_byte_size_);
  }
  for (int i = 0; i < this->distance_meters_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->distance_meters(i), output);
  }

  // repeated float height_percent = 15;
  if (this->height_percent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_height_percent_cached_byte_size_);
  }
  for (int i = 0; i < this->height_percent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->height_percent(i), output);
  }

  // repeated float vert_ctr_ratio = 16;
  if (this->vert_ctr_ratio_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(16, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vert_ctr_ratio_cached_byte_size_);
  }
  for (int i = 0; i < this->vert_ctr_ratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->vert_ctr_ratio(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.CameraSettings)
}

::google::protobuf::uint8* CameraSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.CameraSettings)
  // optional string next_camera = 1;
  if (this->next_camera().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_camera().data(), this->next_camera().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.Master.CameraSettings.next_camera");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->next_camera(), target);
  }

  // repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;
  if (this->interpolation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _interpolation_cached_byte_size_, target);
  }
  for (int i = 0; i < this->interpolation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->interpolation(i), target);
  }

  // repeated .POGOProtos.Enums.CameraTarget target_type = 3;
  if (this->target_type_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _target_type_cached_byte_size_, target);
  }
  for (int i = 0; i < this->target_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->target_type(i), target);
  }

  // repeated float ease_in_speed = 4;
  if (this->ease_in_speed_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _ease_in_speed_cached_byte_size_, target);
  }
  for (int i = 0; i < this->ease_in_speed_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->ease_in_speed(i), target);
  }

  // repeated float east_out_speed = 5;
  if (this->east_out_speed_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _east_out_speed_cached_byte_size_, target);
  }
  for (int i = 0; i < this->east_out_speed_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->east_out_speed(i), target);
  }

  // repeated float duration_seconds = 6;
  if (this->duration_seconds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _duration_seconds_cached_byte_size_, target);
  }
  for (int i = 0; i < this->duration_seconds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->duration_seconds(i), target);
  }

  // repeated float wait_seconds = 7;
  if (this->wait_seconds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _wait_seconds_cached_byte_size_, target);
  }
  for (int i = 0; i < this->wait_seconds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->wait_seconds(i), target);
  }

  // repeated float transition_seconds = 8;
  if (this->transition_seconds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _transition_seconds_cached_byte_size_, target);
  }
  for (int i = 0; i < this->transition_seconds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->transition_seconds(i), target);
  }

  // repeated float angle_degree = 9;
  if (this->angle_degree_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _angle_degree_cached_byte_size_, target);
  }
  for (int i = 0; i < this->angle_degree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->angle_degree(i), target);
  }

  // repeated float angle_offset_degree = 10;
  if (this->angle_offset_degree_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _angle_offset_degree_cached_byte_size_, target);
  }
  for (int i = 0; i < this->angle_offset_degree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->angle_offset_degree(i), target);
  }

  // repeated float pitch_degree = 11;
  if (this->pitch_degree_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pitch_degree_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pitch_degree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->pitch_degree(i), target);
  }

  // repeated float pitch_offset_degree = 12;
  if (this->pitch_offset_degree_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _pitch_offset_degree_cached_byte_size_, target);
  }
  for (int i = 0; i < this->pitch_offset_degree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->pitch_offset_degree(i), target);
  }

  // repeated float roll_degree = 13;
  if (this->roll_degree_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      13,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _roll_degree_cached_byte_size_, target);
  }
  for (int i = 0; i < this->roll_degree_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->roll_degree(i), target);
  }

  // repeated float distance_meters = 14;
  if (this->distance_meters_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _distance_meters_cached_byte_size_, target);
  }
  for (int i = 0; i < this->distance_meters_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->distance_meters(i), target);
  }

  // repeated float height_percent = 15;
  if (this->height_percent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _height_percent_cached_byte_size_, target);
  }
  for (int i = 0; i < this->height_percent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->height_percent(i), target);
  }

  // repeated float vert_ctr_ratio = 16;
  if (this->vert_ctr_ratio_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      16,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vert_ctr_ratio_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vert_ctr_ratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->vert_ctr_ratio(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.CameraSettings)
  return target;
}

int CameraSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.CameraSettings)
  int total_size = 0;

  // optional string next_camera = 1;
  if (this->next_camera().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_camera());
  }

  // repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->interpolation_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->interpolation(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _interpolation_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .POGOProtos.Enums.CameraTarget target_type = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->target_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->target_type(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _target_type_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float ease_in_speed = 4;
  {
    int data_size = 0;
    data_size = 4 * this->ease_in_speed_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ease_in_speed_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float east_out_speed = 5;
  {
    int data_size = 0;
    data_size = 4 * this->east_out_speed_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _east_out_speed_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float duration_seconds = 6;
  {
    int data_size = 0;
    data_size = 4 * this->duration_seconds_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _duration_seconds_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float wait_seconds = 7;
  {
    int data_size = 0;
    data_size = 4 * this->wait_seconds_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _wait_seconds_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float transition_seconds = 8;
  {
    int data_size = 0;
    data_size = 4 * this->transition_seconds_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _transition_seconds_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float angle_degree = 9;
  {
    int data_size = 0;
    data_size = 4 * this->angle_degree_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _angle_degree_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float angle_offset_degree = 10;
  {
    int data_size = 0;
    data_size = 4 * this->angle_offset_degree_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _angle_offset_degree_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float pitch_degree = 11;
  {
    int data_size = 0;
    data_size = 4 * this->pitch_degree_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pitch_degree_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float pitch_offset_degree = 12;
  {
    int data_size = 0;
    data_size = 4 * this->pitch_offset_degree_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _pitch_offset_degree_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float roll_degree = 13;
  {
    int data_size = 0;
    data_size = 4 * this->roll_degree_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roll_degree_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float distance_meters = 14;
  {
    int data_size = 0;
    data_size = 4 * this->distance_meters_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _distance_meters_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float height_percent = 15;
  {
    int data_size = 0;
    data_size = 4 * this->height_percent_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _height_percent_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float vert_ctr_ratio = 16;
  {
    int data_size = 0;
    data_size = 4 * this->vert_ctr_ratio_size();
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vert_ctr_ratio_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.CameraSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const CameraSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.CameraSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.CameraSettings)
    MergeFrom(*source);
  }
}

void CameraSettings::MergeFrom(const CameraSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.CameraSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  interpolation_.MergeFrom(from.interpolation_);
  target_type_.MergeFrom(from.target_type_);
  ease_in_speed_.MergeFrom(from.ease_in_speed_);
  east_out_speed_.MergeFrom(from.east_out_speed_);
  duration_seconds_.MergeFrom(from.duration_seconds_);
  wait_seconds_.MergeFrom(from.wait_seconds_);
  transition_seconds_.MergeFrom(from.transition_seconds_);
  angle_degree_.MergeFrom(from.angle_degree_);
  angle_offset_degree_.MergeFrom(from.angle_offset_degree_);
  pitch_degree_.MergeFrom(from.pitch_degree_);
  pitch_offset_degree_.MergeFrom(from.pitch_offset_degree_);
  roll_degree_.MergeFrom(from.roll_degree_);
  distance_meters_.MergeFrom(from.distance_meters_);
  height_percent_.MergeFrom(from.height_percent_);
  vert_ctr_ratio_.MergeFrom(from.vert_ctr_ratio_);
  if (from.next_camera().size() > 0) {

    next_camera_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_camera_);
  }
}

void CameraSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.CameraSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraSettings::CopyFrom(const CameraSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.CameraSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraSettings::IsInitialized() const {

  return true;
}

void CameraSettings::Swap(CameraSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraSettings::InternalSwap(CameraSettings* other) {
  next_camera_.Swap(&other->next_camera_);
  interpolation_.UnsafeArenaSwap(&other->interpolation_);
  target_type_.UnsafeArenaSwap(&other->target_type_);
  ease_in_speed_.UnsafeArenaSwap(&other->ease_in_speed_);
  east_out_speed_.UnsafeArenaSwap(&other->east_out_speed_);
  duration_seconds_.UnsafeArenaSwap(&other->duration_seconds_);
  wait_seconds_.UnsafeArenaSwap(&other->wait_seconds_);
  transition_seconds_.UnsafeArenaSwap(&other->transition_seconds_);
  angle_degree_.UnsafeArenaSwap(&other->angle_degree_);
  angle_offset_degree_.UnsafeArenaSwap(&other->angle_offset_degree_);
  pitch_degree_.UnsafeArenaSwap(&other->pitch_degree_);
  pitch_offset_degree_.UnsafeArenaSwap(&other->pitch_offset_degree_);
  roll_degree_.UnsafeArenaSwap(&other->roll_degree_);
  distance_meters_.UnsafeArenaSwap(&other->distance_meters_);
  height_percent_.UnsafeArenaSwap(&other->height_percent_);
  vert_ctr_ratio_.UnsafeArenaSwap(&other->vert_ctr_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CameraSettings_descriptor_;
  metadata.reflection = CameraSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CameraSettings

// optional string next_camera = 1;
void CameraSettings::clear_next_camera() {
  next_camera_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CameraSettings::next_camera() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.next_camera)
  return next_camera_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CameraSettings::set_next_camera(const ::std::string& value) {
  
  next_camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.next_camera)
}
 void CameraSettings::set_next_camera(const char* value) {
  
  next_camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.Master.CameraSettings.next_camera)
}
 void CameraSettings::set_next_camera(const char* value, size_t size) {
  
  next_camera_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.Master.CameraSettings.next_camera)
}
 ::std::string* CameraSettings::mutable_next_camera() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.CameraSettings.next_camera)
  return next_camera_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CameraSettings::release_next_camera() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.CameraSettings.next_camera)
  
  return next_camera_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CameraSettings::set_allocated_next_camera(::std::string* next_camera) {
  if (next_camera != NULL) {
    
  } else {
    
  }
  next_camera_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_camera);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.CameraSettings.next_camera)
}

// repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;
int CameraSettings::interpolation_size() const {
  return interpolation_.size();
}
void CameraSettings::clear_interpolation() {
  interpolation_.Clear();
}
 ::POGOProtos::Enums::CameraInterpolation CameraSettings::interpolation(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.interpolation)
  return static_cast< ::POGOProtos::Enums::CameraInterpolation >(interpolation_.Get(index));
}
 void CameraSettings::set_interpolation(int index, ::POGOProtos::Enums::CameraInterpolation value) {
  interpolation_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.interpolation)
}
 void CameraSettings::add_interpolation(::POGOProtos::Enums::CameraInterpolation value) {
  interpolation_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.interpolation)
}
 const ::google::protobuf::RepeatedField<int>&
CameraSettings::interpolation() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.interpolation)
  return interpolation_;
}
 ::google::protobuf::RepeatedField<int>*
CameraSettings::mutable_interpolation() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.interpolation)
  return &interpolation_;
}

// repeated .POGOProtos.Enums.CameraTarget target_type = 3;
int CameraSettings::target_type_size() const {
  return target_type_.size();
}
void CameraSettings::clear_target_type() {
  target_type_.Clear();
}
 ::POGOProtos::Enums::CameraTarget CameraSettings::target_type(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.target_type)
  return static_cast< ::POGOProtos::Enums::CameraTarget >(target_type_.Get(index));
}
 void CameraSettings::set_target_type(int index, ::POGOProtos::Enums::CameraTarget value) {
  target_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.target_type)
}
 void CameraSettings::add_target_type(::POGOProtos::Enums::CameraTarget value) {
  target_type_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.target_type)
}
 const ::google::protobuf::RepeatedField<int>&
CameraSettings::target_type() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.target_type)
  return target_type_;
}
 ::google::protobuf::RepeatedField<int>*
CameraSettings::mutable_target_type() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.target_type)
  return &target_type_;
}

// repeated float ease_in_speed = 4;
int CameraSettings::ease_in_speed_size() const {
  return ease_in_speed_.size();
}
void CameraSettings::clear_ease_in_speed() {
  ease_in_speed_.Clear();
}
 float CameraSettings::ease_in_speed(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.ease_in_speed)
  return ease_in_speed_.Get(index);
}
 void CameraSettings::set_ease_in_speed(int index, float value) {
  ease_in_speed_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.ease_in_speed)
}
 void CameraSettings::add_ease_in_speed(float value) {
  ease_in_speed_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.ease_in_speed)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::ease_in_speed() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.ease_in_speed)
  return ease_in_speed_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_ease_in_speed() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.ease_in_speed)
  return &ease_in_speed_;
}

// repeated float east_out_speed = 5;
int CameraSettings::east_out_speed_size() const {
  return east_out_speed_.size();
}
void CameraSettings::clear_east_out_speed() {
  east_out_speed_.Clear();
}
 float CameraSettings::east_out_speed(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.east_out_speed)
  return east_out_speed_.Get(index);
}
 void CameraSettings::set_east_out_speed(int index, float value) {
  east_out_speed_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.east_out_speed)
}
 void CameraSettings::add_east_out_speed(float value) {
  east_out_speed_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.east_out_speed)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::east_out_speed() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.east_out_speed)
  return east_out_speed_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_east_out_speed() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.east_out_speed)
  return &east_out_speed_;
}

// repeated float duration_seconds = 6;
int CameraSettings::duration_seconds_size() const {
  return duration_seconds_.size();
}
void CameraSettings::clear_duration_seconds() {
  duration_seconds_.Clear();
}
 float CameraSettings::duration_seconds(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.duration_seconds)
  return duration_seconds_.Get(index);
}
 void CameraSettings::set_duration_seconds(int index, float value) {
  duration_seconds_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.duration_seconds)
}
 void CameraSettings::add_duration_seconds(float value) {
  duration_seconds_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.duration_seconds)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::duration_seconds() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.duration_seconds)
  return duration_seconds_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_duration_seconds() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.duration_seconds)
  return &duration_seconds_;
}

// repeated float wait_seconds = 7;
int CameraSettings::wait_seconds_size() const {
  return wait_seconds_.size();
}
void CameraSettings::clear_wait_seconds() {
  wait_seconds_.Clear();
}
 float CameraSettings::wait_seconds(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.wait_seconds)
  return wait_seconds_.Get(index);
}
 void CameraSettings::set_wait_seconds(int index, float value) {
  wait_seconds_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.wait_seconds)
}
 void CameraSettings::add_wait_seconds(float value) {
  wait_seconds_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.wait_seconds)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::wait_seconds() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.wait_seconds)
  return wait_seconds_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_wait_seconds() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.wait_seconds)
  return &wait_seconds_;
}

// repeated float transition_seconds = 8;
int CameraSettings::transition_seconds_size() const {
  return transition_seconds_.size();
}
void CameraSettings::clear_transition_seconds() {
  transition_seconds_.Clear();
}
 float CameraSettings::transition_seconds(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.transition_seconds)
  return transition_seconds_.Get(index);
}
 void CameraSettings::set_transition_seconds(int index, float value) {
  transition_seconds_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.transition_seconds)
}
 void CameraSettings::add_transition_seconds(float value) {
  transition_seconds_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.transition_seconds)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::transition_seconds() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.transition_seconds)
  return transition_seconds_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_transition_seconds() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.transition_seconds)
  return &transition_seconds_;
}

// repeated float angle_degree = 9;
int CameraSettings::angle_degree_size() const {
  return angle_degree_.size();
}
void CameraSettings::clear_angle_degree() {
  angle_degree_.Clear();
}
 float CameraSettings::angle_degree(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.angle_degree)
  return angle_degree_.Get(index);
}
 void CameraSettings::set_angle_degree(int index, float value) {
  angle_degree_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.angle_degree)
}
 void CameraSettings::add_angle_degree(float value) {
  angle_degree_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.angle_degree)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::angle_degree() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.angle_degree)
  return angle_degree_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_angle_degree() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.angle_degree)
  return &angle_degree_;
}

// repeated float angle_offset_degree = 10;
int CameraSettings::angle_offset_degree_size() const {
  return angle_offset_degree_.size();
}
void CameraSettings::clear_angle_offset_degree() {
  angle_offset_degree_.Clear();
}
 float CameraSettings::angle_offset_degree(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.angle_offset_degree)
  return angle_offset_degree_.Get(index);
}
 void CameraSettings::set_angle_offset_degree(int index, float value) {
  angle_offset_degree_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.angle_offset_degree)
}
 void CameraSettings::add_angle_offset_degree(float value) {
  angle_offset_degree_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.angle_offset_degree)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::angle_offset_degree() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.angle_offset_degree)
  return angle_offset_degree_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_angle_offset_degree() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.angle_offset_degree)
  return &angle_offset_degree_;
}

// repeated float pitch_degree = 11;
int CameraSettings::pitch_degree_size() const {
  return pitch_degree_.size();
}
void CameraSettings::clear_pitch_degree() {
  pitch_degree_.Clear();
}
 float CameraSettings::pitch_degree(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.pitch_degree)
  return pitch_degree_.Get(index);
}
 void CameraSettings::set_pitch_degree(int index, float value) {
  pitch_degree_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.pitch_degree)
}
 void CameraSettings::add_pitch_degree(float value) {
  pitch_degree_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.pitch_degree)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::pitch_degree() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.pitch_degree)
  return pitch_degree_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_pitch_degree() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.pitch_degree)
  return &pitch_degree_;
}

// repeated float pitch_offset_degree = 12;
int CameraSettings::pitch_offset_degree_size() const {
  return pitch_offset_degree_.size();
}
void CameraSettings::clear_pitch_offset_degree() {
  pitch_offset_degree_.Clear();
}
 float CameraSettings::pitch_offset_degree(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.pitch_offset_degree)
  return pitch_offset_degree_.Get(index);
}
 void CameraSettings::set_pitch_offset_degree(int index, float value) {
  pitch_offset_degree_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.pitch_offset_degree)
}
 void CameraSettings::add_pitch_offset_degree(float value) {
  pitch_offset_degree_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.pitch_offset_degree)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::pitch_offset_degree() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.pitch_offset_degree)
  return pitch_offset_degree_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_pitch_offset_degree() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.pitch_offset_degree)
  return &pitch_offset_degree_;
}

// repeated float roll_degree = 13;
int CameraSettings::roll_degree_size() const {
  return roll_degree_.size();
}
void CameraSettings::clear_roll_degree() {
  roll_degree_.Clear();
}
 float CameraSettings::roll_degree(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.roll_degree)
  return roll_degree_.Get(index);
}
 void CameraSettings::set_roll_degree(int index, float value) {
  roll_degree_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.roll_degree)
}
 void CameraSettings::add_roll_degree(float value) {
  roll_degree_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.roll_degree)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::roll_degree() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.roll_degree)
  return roll_degree_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_roll_degree() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.roll_degree)
  return &roll_degree_;
}

// repeated float distance_meters = 14;
int CameraSettings::distance_meters_size() const {
  return distance_meters_.size();
}
void CameraSettings::clear_distance_meters() {
  distance_meters_.Clear();
}
 float CameraSettings::distance_meters(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.distance_meters)
  return distance_meters_.Get(index);
}
 void CameraSettings::set_distance_meters(int index, float value) {
  distance_meters_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.distance_meters)
}
 void CameraSettings::add_distance_meters(float value) {
  distance_meters_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.distance_meters)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::distance_meters() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.distance_meters)
  return distance_meters_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_distance_meters() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.distance_meters)
  return &distance_meters_;
}

// repeated float height_percent = 15;
int CameraSettings::height_percent_size() const {
  return height_percent_.size();
}
void CameraSettings::clear_height_percent() {
  height_percent_.Clear();
}
 float CameraSettings::height_percent(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.height_percent)
  return height_percent_.Get(index);
}
 void CameraSettings::set_height_percent(int index, float value) {
  height_percent_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.height_percent)
}
 void CameraSettings::add_height_percent(float value) {
  height_percent_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.height_percent)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::height_percent() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.height_percent)
  return height_percent_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_height_percent() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.height_percent)
  return &height_percent_;
}

// repeated float vert_ctr_ratio = 16;
int CameraSettings::vert_ctr_ratio_size() const {
  return vert_ctr_ratio_.size();
}
void CameraSettings::clear_vert_ctr_ratio() {
  vert_ctr_ratio_.Clear();
}
 float CameraSettings::vert_ctr_ratio(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.CameraSettings.vert_ctr_ratio)
  return vert_ctr_ratio_.Get(index);
}
 void CameraSettings::set_vert_ctr_ratio(int index, float value) {
  vert_ctr_ratio_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.CameraSettings.vert_ctr_ratio)
}
 void CameraSettings::add_vert_ctr_ratio(float value) {
  vert_ctr_ratio_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.CameraSettings.vert_ctr_ratio)
}
 const ::google::protobuf::RepeatedField< float >&
CameraSettings::vert_ctr_ratio() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.CameraSettings.vert_ctr_ratio)
  return vert_ctr_ratio_;
}
 ::google::protobuf::RepeatedField< float >*
CameraSettings::mutable_vert_ctr_ratio() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.CameraSettings.vert_ctr_ratio)
  return &vert_ctr_ratio_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
