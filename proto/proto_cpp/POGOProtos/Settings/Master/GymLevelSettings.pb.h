// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/GymLevelSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();

class GymLevelSettings;

// ===================================================================

class GymLevelSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.Master.GymLevelSettings) */ {
 public:
  GymLevelSettings();
  virtual ~GymLevelSettings();

  GymLevelSettings(const GymLevelSettings& from);

  inline GymLevelSettings& operator=(const GymLevelSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GymLevelSettings& default_instance();

  void Swap(GymLevelSettings* other);

  // implements Message ----------------------------------------------

  inline GymLevelSettings* New() const { return New(NULL); }

  GymLevelSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GymLevelSettings& from);
  void MergeFrom(const GymLevelSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GymLevelSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 required_experience = 1;
  int required_experience_size() const;
  void clear_required_experience();
  static const int kRequiredExperienceFieldNumber = 1;
  ::google::protobuf::int32 required_experience(int index) const;
  void set_required_experience(int index, ::google::protobuf::int32 value);
  void add_required_experience(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      required_experience() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_required_experience();

  // repeated int32 leader_slots = 2;
  int leader_slots_size() const;
  void clear_leader_slots();
  static const int kLeaderSlotsFieldNumber = 2;
  ::google::protobuf::int32 leader_slots(int index) const;
  void set_leader_slots(int index, ::google::protobuf::int32 value);
  void add_leader_slots(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      leader_slots() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_leader_slots();

  // repeated int32 trainer_slots = 3;
  int trainer_slots_size() const;
  void clear_trainer_slots();
  static const int kTrainerSlotsFieldNumber = 3;
  ::google::protobuf::int32 trainer_slots(int index) const;
  void set_trainer_slots(int index, ::google::protobuf::int32 value);
  void add_trainer_slots(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      trainer_slots() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_trainer_slots();

  // repeated int32 search_roll_bonus = 4;
  int search_roll_bonus_size() const;
  void clear_search_roll_bonus();
  static const int kSearchRollBonusFieldNumber = 4;
  ::google::protobuf::int32 search_roll_bonus(int index) const;
  void set_search_roll_bonus(int index, ::google::protobuf::int32 value);
  void add_search_roll_bonus(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      search_roll_bonus() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_search_roll_bonus();

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.GymLevelSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > required_experience_;
  mutable int _required_experience_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > leader_slots_;
  mutable int _leader_slots_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > trainer_slots_;
  mutable int _trainer_slots_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > search_roll_bonus_;
  mutable int _search_roll_bonus_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto();

  void InitAsDefaultInstance();
  static GymLevelSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GymLevelSettings

// repeated int32 required_experience = 1;
inline int GymLevelSettings::required_experience_size() const {
  return required_experience_.size();
}
inline void GymLevelSettings::clear_required_experience() {
  required_experience_.Clear();
}
inline ::google::protobuf::int32 GymLevelSettings::required_experience(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.GymLevelSettings.required_experience)
  return required_experience_.Get(index);
}
inline void GymLevelSettings::set_required_experience(int index, ::google::protobuf::int32 value) {
  required_experience_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.GymLevelSettings.required_experience)
}
inline void GymLevelSettings::add_required_experience(::google::protobuf::int32 value) {
  required_experience_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.GymLevelSettings.required_experience)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GymLevelSettings::required_experience() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.GymLevelSettings.required_experience)
  return required_experience_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GymLevelSettings::mutable_required_experience() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.GymLevelSettings.required_experience)
  return &required_experience_;
}

// repeated int32 leader_slots = 2;
inline int GymLevelSettings::leader_slots_size() const {
  return leader_slots_.size();
}
inline void GymLevelSettings::clear_leader_slots() {
  leader_slots_.Clear();
}
inline ::google::protobuf::int32 GymLevelSettings::leader_slots(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.GymLevelSettings.leader_slots)
  return leader_slots_.Get(index);
}
inline void GymLevelSettings::set_leader_slots(int index, ::google::protobuf::int32 value) {
  leader_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.GymLevelSettings.leader_slots)
}
inline void GymLevelSettings::add_leader_slots(::google::protobuf::int32 value) {
  leader_slots_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.GymLevelSettings.leader_slots)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GymLevelSettings::leader_slots() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.GymLevelSettings.leader_slots)
  return leader_slots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GymLevelSettings::mutable_leader_slots() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.GymLevelSettings.leader_slots)
  return &leader_slots_;
}

// repeated int32 trainer_slots = 3;
inline int GymLevelSettings::trainer_slots_size() const {
  return trainer_slots_.size();
}
inline void GymLevelSettings::clear_trainer_slots() {
  trainer_slots_.Clear();
}
inline ::google::protobuf::int32 GymLevelSettings::trainer_slots(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.GymLevelSettings.trainer_slots)
  return trainer_slots_.Get(index);
}
inline void GymLevelSettings::set_trainer_slots(int index, ::google::protobuf::int32 value) {
  trainer_slots_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.GymLevelSettings.trainer_slots)
}
inline void GymLevelSettings::add_trainer_slots(::google::protobuf::int32 value) {
  trainer_slots_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.GymLevelSettings.trainer_slots)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GymLevelSettings::trainer_slots() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.GymLevelSettings.trainer_slots)
  return trainer_slots_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GymLevelSettings::mutable_trainer_slots() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.GymLevelSettings.trainer_slots)
  return &trainer_slots_;
}

// repeated int32 search_roll_bonus = 4;
inline int GymLevelSettings::search_roll_bonus_size() const {
  return search_roll_bonus_.size();
}
inline void GymLevelSettings::clear_search_roll_bonus() {
  search_roll_bonus_.Clear();
}
inline ::google::protobuf::int32 GymLevelSettings::search_roll_bonus(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.GymLevelSettings.search_roll_bonus)
  return search_roll_bonus_.Get(index);
}
inline void GymLevelSettings::set_search_roll_bonus(int index, ::google::protobuf::int32 value) {
  search_roll_bonus_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.GymLevelSettings.search_roll_bonus)
}
inline void GymLevelSettings::add_search_roll_bonus(::google::protobuf::int32 value) {
  search_roll_bonus_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.GymLevelSettings.search_roll_bonus)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GymLevelSettings::search_roll_bonus() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.GymLevelSettings.search_roll_bonus)
  return search_roll_bonus_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GymLevelSettings::mutable_search_roll_bonus() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.GymLevelSettings.search_roll_bonus)
  return &search_roll_bonus_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMaster_2fGymLevelSettings_2eproto__INCLUDED
