// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PlayerLevelSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();

class PlayerLevelSettings;

// ===================================================================

class PlayerLevelSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.Master.PlayerLevelSettings) */ {
 public:
  PlayerLevelSettings();
  virtual ~PlayerLevelSettings();

  PlayerLevelSettings(const PlayerLevelSettings& from);

  inline PlayerLevelSettings& operator=(const PlayerLevelSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevelSettings& default_instance();

  void Swap(PlayerLevelSettings* other);

  // implements Message ----------------------------------------------

  inline PlayerLevelSettings* New() const { return New(NULL); }

  PlayerLevelSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLevelSettings& from);
  void MergeFrom(const PlayerLevelSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PlayerLevelSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 rank_num = 1;
  int rank_num_size() const;
  void clear_rank_num();
  static const int kRankNumFieldNumber = 1;
  ::google::protobuf::int32 rank_num(int index) const;
  void set_rank_num(int index, ::google::protobuf::int32 value);
  void add_rank_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rank_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rank_num();

  // repeated int32 required_experience = 2;
  int required_experience_size() const;
  void clear_required_experience();
  static const int kRequiredExperienceFieldNumber = 2;
  ::google::protobuf::int32 required_experience(int index) const;
  void set_required_experience(int index, ::google::protobuf::int32 value);
  void add_required_experience(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      required_experience() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_required_experience();

  // repeated float cp_multiplier = 3;
  int cp_multiplier_size() const;
  void clear_cp_multiplier();
  static const int kCpMultiplierFieldNumber = 3;
  float cp_multiplier(int index) const;
  void set_cp_multiplier(int index, float value);
  void add_cp_multiplier(float value);
  const ::google::protobuf::RepeatedField< float >&
      cp_multiplier() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_cp_multiplier();

  // optional int32 max_egg_player_level = 4;
  void clear_max_egg_player_level();
  static const int kMaxEggPlayerLevelFieldNumber = 4;
  ::google::protobuf::int32 max_egg_player_level() const;
  void set_max_egg_player_level(::google::protobuf::int32 value);

  // optional int32 max_encounter_player_level = 5;
  void clear_max_encounter_player_level();
  static const int kMaxEncounterPlayerLevelFieldNumber = 5;
  ::google::protobuf::int32 max_encounter_player_level() const;
  void set_max_encounter_player_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.PlayerLevelSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rank_num_;
  mutable int _rank_num_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > required_experience_;
  mutable int _required_experience_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > cp_multiplier_;
  mutable int _cp_multiplier_cached_byte_size_;
  ::google::protobuf::int32 max_egg_player_level_;
  ::google::protobuf::int32 max_encounter_player_level_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();

  void InitAsDefaultInstance();
  static PlayerLevelSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLevelSettings

// repeated int32 rank_num = 1;
inline int PlayerLevelSettings::rank_num_size() const {
  return rank_num_.size();
}
inline void PlayerLevelSettings::clear_rank_num() {
  rank_num_.Clear();
}
inline ::google::protobuf::int32 PlayerLevelSettings::rank_num(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return rank_num_.Get(index);
}
inline void PlayerLevelSettings::set_rank_num(int index, ::google::protobuf::int32 value) {
  rank_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
}
inline void PlayerLevelSettings::add_rank_num(::google::protobuf::int32 value) {
  rank_num_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerLevelSettings::rank_num() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return rank_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerLevelSettings::mutable_rank_num() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return &rank_num_;
}

// repeated int32 required_experience = 2;
inline int PlayerLevelSettings::required_experience_size() const {
  return required_experience_.size();
}
inline void PlayerLevelSettings::clear_required_experience() {
  required_experience_.Clear();
}
inline ::google::protobuf::int32 PlayerLevelSettings::required_experience(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return required_experience_.Get(index);
}
inline void PlayerLevelSettings::set_required_experience(int index, ::google::protobuf::int32 value) {
  required_experience_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
}
inline void PlayerLevelSettings::add_required_experience(::google::protobuf::int32 value) {
  required_experience_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerLevelSettings::required_experience() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return required_experience_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerLevelSettings::mutable_required_experience() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return &required_experience_;
}

// repeated float cp_multiplier = 3;
inline int PlayerLevelSettings::cp_multiplier_size() const {
  return cp_multiplier_.size();
}
inline void PlayerLevelSettings::clear_cp_multiplier() {
  cp_multiplier_.Clear();
}
inline float PlayerLevelSettings::cp_multiplier(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return cp_multiplier_.Get(index);
}
inline void PlayerLevelSettings::set_cp_multiplier(int index, float value) {
  cp_multiplier_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
}
inline void PlayerLevelSettings::add_cp_multiplier(float value) {
  cp_multiplier_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
}
inline const ::google::protobuf::RepeatedField< float >&
PlayerLevelSettings::cp_multiplier() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return cp_multiplier_;
}
inline ::google::protobuf::RepeatedField< float >*
PlayerLevelSettings::mutable_cp_multiplier() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return &cp_multiplier_;
}

// optional int32 max_egg_player_level = 4;
inline void PlayerLevelSettings::clear_max_egg_player_level() {
  max_egg_player_level_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelSettings::max_egg_player_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.max_egg_player_level)
  return max_egg_player_level_;
}
inline void PlayerLevelSettings::set_max_egg_player_level(::google::protobuf::int32 value) {
  
  max_egg_player_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.max_egg_player_level)
}

// optional int32 max_encounter_player_level = 5;
inline void PlayerLevelSettings::clear_max_encounter_player_level() {
  max_encounter_player_level_ = 0;
}
inline ::google::protobuf::int32 PlayerLevelSettings::max_encounter_player_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.max_encounter_player_level)
  return max_encounter_player_level_;
}
inline void PlayerLevelSettings::set_max_encounter_player_level(::google::protobuf::int32 value) {
  
  max_encounter_player_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.max_encounter_player_level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto__INCLUDED
