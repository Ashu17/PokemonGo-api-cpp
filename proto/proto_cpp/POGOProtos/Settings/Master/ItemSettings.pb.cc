// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/ItemSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/ItemSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* ItemSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/ItemSettings.proto");
  GOOGLE_CHECK(file != NULL);
  ItemSettings_descriptor_ = file->message_type(0);
  static const int ItemSettings_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, item_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, category_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, drop_freq_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, drop_trainer_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, pokeball_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, potion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, revive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, battle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, food_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, inventory_upgrade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, xp_boost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, incense_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, egg_incubator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, fort_modifier_),
  };
  ItemSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ItemSettings_descriptor_,
      ItemSettings::default_instance_,
      ItemSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(ItemSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ItemSettings_descriptor_, &ItemSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() {
  delete ItemSettings::default_instance_;
  delete ItemSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fItemCategory_2eproto();
  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemId_2eproto();
  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemType_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fFoodAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fPotionAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fReviveAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fBattleAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fIncenseAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fPokeballAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fFortModifierAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fEggIncubatorAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fExperienceBoostAttributes_2eproto();
  ::POGOProtos::Settings::Master::Item::protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItem_2fInventoryUpgradeAttributes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-POGOProtos/Settings/Master/ItemSetting"
    "s.proto\022\032POGOProtos.Settings.Master\032#POG"
    "OProtos/Enums/ItemCategory.proto\032&POGOPr"
    "otos/Inventory/Item/ItemId.proto\032(POGOPr"
    "otos/Inventory/Item/ItemType.proto\0324POGO"
    "Protos/Settings/Master/Item/FoodAttribut"
    "es.proto\0326POGOProtos/Settings/Master/Ite"
    "m/PotionAttributes.proto\0326POGOProtos/Set"
    "tings/Master/Item/ReviveAttributes.proto"
    "\0326POGOProtos/Settings/Master/Item/Battle"
    "Attributes.proto\0327POGOProtos/Settings/Ma"
    "ster/Item/IncenseAttributes.proto\0328POGOP"
    "rotos/Settings/Master/Item/PokeballAttri"
    "butes.proto\032<POGOProtos/Settings/Master/"
    "Item/FortModifierAttributes.proto\032<POGOP"
    "rotos/Settings/Master/Item/EggIncubatorA"
    "ttributes.proto\032\?POGOProtos/Settings/Mas"
    "ter/Item/ExperienceBoostAttributes.proto"
    "\032@POGOProtos/Settings/Master/Item/Invent"
    "oryUpgradeAttributes.proto\"\265\007\n\014ItemSetti"
    "ngs\0222\n\007item_id\030\001 \001(\0162!.POGOProtos.Invent"
    "ory.Item.ItemId\0226\n\titem_type\030\002 \001(\0162#.POG"
    "OProtos.Inventory.Item.ItemType\0220\n\010categ"
    "ory\030\003 \001(\0162\036.POGOProtos.Enums.ItemCategor"
    "y\022\021\n\tdrop_freq\030\004 \001(\002\022\032\n\022drop_trainer_lev"
    "el\030\005 \001(\005\022E\n\010pokeball\030\006 \001(\01323.POGOProtos."
    "Settings.Master.Item.PokeballAttributes\022"
    "A\n\006potion\030\007 \001(\01321.POGOProtos.Settings.Ma"
    "ster.Item.PotionAttributes\022A\n\006revive\030\010 \001"
    "(\01321.POGOProtos.Settings.Master.Item.Rev"
    "iveAttributes\022A\n\006battle\030\t \001(\01321.POGOProt"
    "os.Settings.Master.Item.BattleAttributes"
    "\022=\n\004food\030\n \001(\0132/.POGOProtos.Settings.Mas"
    "ter.Item.FoodAttributes\022V\n\021inventory_upg"
    "rade\030\013 \001(\0132;.POGOProtos.Settings.Master."
    "Item.InventoryUpgradeAttributes\022L\n\010xp_bo"
    "ost\030\014 \001(\0132:.POGOProtos.Settings.Master.I"
    "tem.ExperienceBoostAttributes\022C\n\007incense"
    "\030\r \001(\01322.POGOProtos.Settings.Master.Item"
    ".IncenseAttributes\022N\n\regg_incubator\030\016 \001("
    "\01327.POGOProtos.Settings.Master.Item.EggI"
    "ncubatorAttributes\022N\n\rfort_modifier\030\017 \001("
    "\01327.POGOProtos.Settings.Master.Item.Fort"
    "ModifierAttributesb\006proto3", 1746);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/ItemSettings.proto", &protobuf_RegisterTypes);
  ItemSettings::default_instance_ = new ItemSettings();
  ItemSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemSettings::kItemIdFieldNumber;
const int ItemSettings::kItemTypeFieldNumber;
const int ItemSettings::kCategoryFieldNumber;
const int ItemSettings::kDropFreqFieldNumber;
const int ItemSettings::kDropTrainerLevelFieldNumber;
const int ItemSettings::kPokeballFieldNumber;
const int ItemSettings::kPotionFieldNumber;
const int ItemSettings::kReviveFieldNumber;
const int ItemSettings::kBattleFieldNumber;
const int ItemSettings::kFoodFieldNumber;
const int ItemSettings::kInventoryUpgradeFieldNumber;
const int ItemSettings::kXpBoostFieldNumber;
const int ItemSettings::kIncenseFieldNumber;
const int ItemSettings::kEggIncubatorFieldNumber;
const int ItemSettings::kFortModifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemSettings::ItemSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.ItemSettings)
}

void ItemSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pokeball_ = const_cast< ::POGOProtos::Settings::Master::Item::PokeballAttributes*>(&::POGOProtos::Settings::Master::Item::PokeballAttributes::default_instance());
  potion_ = const_cast< ::POGOProtos::Settings::Master::Item::PotionAttributes*>(&::POGOProtos::Settings::Master::Item::PotionAttributes::default_instance());
  revive_ = const_cast< ::POGOProtos::Settings::Master::Item::ReviveAttributes*>(&::POGOProtos::Settings::Master::Item::ReviveAttributes::default_instance());
  battle_ = const_cast< ::POGOProtos::Settings::Master::Item::BattleAttributes*>(&::POGOProtos::Settings::Master::Item::BattleAttributes::default_instance());
  food_ = const_cast< ::POGOProtos::Settings::Master::Item::FoodAttributes*>(&::POGOProtos::Settings::Master::Item::FoodAttributes::default_instance());
  inventory_upgrade_ = const_cast< ::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes*>(&::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes::default_instance());
  xp_boost_ = const_cast< ::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes*>(&::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes::default_instance());
  incense_ = const_cast< ::POGOProtos::Settings::Master::Item::IncenseAttributes*>(&::POGOProtos::Settings::Master::Item::IncenseAttributes::default_instance());
  egg_incubator_ = const_cast< ::POGOProtos::Settings::Master::Item::EggIncubatorAttributes*>(&::POGOProtos::Settings::Master::Item::EggIncubatorAttributes::default_instance());
  fort_modifier_ = const_cast< ::POGOProtos::Settings::Master::Item::FortModifierAttributes*>(&::POGOProtos::Settings::Master::Item::FortModifierAttributes::default_instance());
}

ItemSettings::ItemSettings(const ItemSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.ItemSettings)
}

void ItemSettings::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  item_id_ = 0;
  item_type_ = 0;
  category_ = 0;
  drop_freq_ = 0;
  drop_trainer_level_ = 0;
  pokeball_ = NULL;
  potion_ = NULL;
  revive_ = NULL;
  battle_ = NULL;
  food_ = NULL;
  inventory_upgrade_ = NULL;
  xp_boost_ = NULL;
  incense_ = NULL;
  egg_incubator_ = NULL;
  fort_modifier_ = NULL;
}

ItemSettings::~ItemSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.ItemSettings)
  SharedDtor();
}

void ItemSettings::SharedDtor() {
  if (this != default_instance_) {
    delete pokeball_;
    delete potion_;
    delete revive_;
    delete battle_;
    delete food_;
    delete inventory_upgrade_;
    delete xp_boost_;
    delete incense_;
    delete egg_incubator_;
    delete fort_modifier_;
  }
}

void ItemSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemSettings_descriptor_;
}

const ItemSettings& ItemSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fItemSettings_2eproto();
  return *default_instance_;
}

ItemSettings* ItemSettings::default_instance_ = NULL;

ItemSettings* ItemSettings::New(::google::protobuf::Arena* arena) const {
  ItemSettings* n = new ItemSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.ItemSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ItemSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ItemSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item_id_, drop_freq_);
  drop_trainer_level_ = 0;
  if (GetArenaNoVirtual() == NULL && pokeball_ != NULL) delete pokeball_;
  pokeball_ = NULL;
  if (GetArenaNoVirtual() == NULL && potion_ != NULL) delete potion_;
  potion_ = NULL;
  if (GetArenaNoVirtual() == NULL && revive_ != NULL) delete revive_;
  revive_ = NULL;
  if (GetArenaNoVirtual() == NULL && battle_ != NULL) delete battle_;
  battle_ = NULL;
  if (GetArenaNoVirtual() == NULL && food_ != NULL) delete food_;
  food_ = NULL;
  if (GetArenaNoVirtual() == NULL && inventory_upgrade_ != NULL) delete inventory_upgrade_;
  inventory_upgrade_ = NULL;
  if (GetArenaNoVirtual() == NULL && xp_boost_ != NULL) delete xp_boost_;
  xp_boost_ = NULL;
  if (GetArenaNoVirtual() == NULL && incense_ != NULL) delete incense_;
  incense_ = NULL;
  if (GetArenaNoVirtual() == NULL && egg_incubator_ != NULL) delete egg_incubator_;
  egg_incubator_ = NULL;
  if (GetArenaNoVirtual() == NULL && fort_modifier_ != NULL) delete fort_modifier_;
  fort_modifier_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ItemSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.ItemSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item_id(static_cast< ::POGOProtos::Inventory::Item::ItemId >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item_type;
        break;
      }

      // optional .POGOProtos.Inventory.Item.ItemType item_type = 2;
      case 2: {
        if (tag == 16) {
         parse_item_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item_type(static_cast< ::POGOProtos::Inventory::Item::ItemType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_category;
        break;
      }

      // optional .POGOProtos.Enums.ItemCategory category = 3;
      case 3: {
        if (tag == 24) {
         parse_category:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_category(static_cast< ::POGOProtos::Enums::ItemCategory >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_drop_freq;
        break;
      }

      // optional float drop_freq = 4;
      case 4: {
        if (tag == 37) {
         parse_drop_freq:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_freq_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_drop_trainer_level;
        break;
      }

      // optional int32 drop_trainer_level = 5;
      case 5: {
        if (tag == 40) {
         parse_drop_trainer_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &drop_trainer_level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pokeball;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.PokeballAttributes pokeball = 6;
      case 6: {
        if (tag == 50) {
         parse_pokeball:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pokeball()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_potion;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.PotionAttributes potion = 7;
      case 7: {
        if (tag == 58) {
         parse_potion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_potion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_revive;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.ReviveAttributes revive = 8;
      case 8: {
        if (tag == 66) {
         parse_revive:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_revive()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_battle;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.BattleAttributes battle = 9;
      case 9: {
        if (tag == 74) {
         parse_battle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_food;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.FoodAttributes food = 10;
      case 10: {
        if (tag == 82) {
         parse_food:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_food()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_inventory_upgrade;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes inventory_upgrade = 11;
      case 11: {
        if (tag == 90) {
         parse_inventory_upgrade:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inventory_upgrade()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_xp_boost;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.ExperienceBoostAttributes xp_boost = 12;
      case 12: {
        if (tag == 98) {
         parse_xp_boost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_xp_boost()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_incense;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.IncenseAttributes incense = 13;
      case 13: {
        if (tag == 106) {
         parse_incense:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_incense()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_egg_incubator;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.EggIncubatorAttributes egg_incubator = 14;
      case 14: {
        if (tag == 114) {
         parse_egg_incubator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_egg_incubator()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_fort_modifier;
        break;
      }

      // optional .POGOProtos.Settings.Master.Item.FortModifierAttributes fort_modifier = 15;
      case 15: {
        if (tag == 122) {
         parse_fort_modifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fort_modifier()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.ItemSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.ItemSettings)
  return false;
#undef DO_
}

void ItemSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.ItemSettings)
  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->item_id(), output);
  }

  // optional .POGOProtos.Inventory.Item.ItemType item_type = 2;
  if (this->item_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->item_type(), output);
  }

  // optional .POGOProtos.Enums.ItemCategory category = 3;
  if (this->category() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->category(), output);
  }

  // optional float drop_freq = 4;
  if (this->drop_freq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->drop_freq(), output);
  }

  // optional int32 drop_trainer_level = 5;
  if (this->drop_trainer_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->drop_trainer_level(), output);
  }

  // optional .POGOProtos.Settings.Master.Item.PokeballAttributes pokeball = 6;
  if (this->has_pokeball()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pokeball_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.PotionAttributes potion = 7;
  if (this->has_potion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->potion_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.ReviveAttributes revive = 8;
  if (this->has_revive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->revive_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.BattleAttributes battle = 9;
  if (this->has_battle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->battle_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.FoodAttributes food = 10;
  if (this->has_food()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->food_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes inventory_upgrade = 11;
  if (this->has_inventory_upgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->inventory_upgrade_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.ExperienceBoostAttributes xp_boost = 12;
  if (this->has_xp_boost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->xp_boost_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.IncenseAttributes incense = 13;
  if (this->has_incense()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->incense_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.EggIncubatorAttributes egg_incubator = 14;
  if (this->has_egg_incubator()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->egg_incubator_, output);
  }

  // optional .POGOProtos.Settings.Master.Item.FortModifierAttributes fort_modifier = 15;
  if (this->has_fort_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->fort_modifier_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.ItemSettings)
}

::google::protobuf::uint8* ItemSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.ItemSettings)
  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->item_id(), target);
  }

  // optional .POGOProtos.Inventory.Item.ItemType item_type = 2;
  if (this->item_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->item_type(), target);
  }

  // optional .POGOProtos.Enums.ItemCategory category = 3;
  if (this->category() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->category(), target);
  }

  // optional float drop_freq = 4;
  if (this->drop_freq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->drop_freq(), target);
  }

  // optional int32 drop_trainer_level = 5;
  if (this->drop_trainer_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->drop_trainer_level(), target);
  }

  // optional .POGOProtos.Settings.Master.Item.PokeballAttributes pokeball = 6;
  if (this->has_pokeball()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pokeball_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.PotionAttributes potion = 7;
  if (this->has_potion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->potion_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.ReviveAttributes revive = 8;
  if (this->has_revive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->revive_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.BattleAttributes battle = 9;
  if (this->has_battle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->battle_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.FoodAttributes food = 10;
  if (this->has_food()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->food_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes inventory_upgrade = 11;
  if (this->has_inventory_upgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->inventory_upgrade_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.ExperienceBoostAttributes xp_boost = 12;
  if (this->has_xp_boost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->xp_boost_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.IncenseAttributes incense = 13;
  if (this->has_incense()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->incense_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.EggIncubatorAttributes egg_incubator = 14;
  if (this->has_egg_incubator()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->egg_incubator_, false, target);
  }

  // optional .POGOProtos.Settings.Master.Item.FortModifierAttributes fort_modifier = 15;
  if (this->has_fort_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->fort_modifier_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.ItemSettings)
  return target;
}

int ItemSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.ItemSettings)
  int total_size = 0;

  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_id());
  }

  // optional .POGOProtos.Inventory.Item.ItemType item_type = 2;
  if (this->item_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_type());
  }

  // optional .POGOProtos.Enums.ItemCategory category = 3;
  if (this->category() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->category());
  }

  // optional float drop_freq = 4;
  if (this->drop_freq() != 0) {
    total_size += 1 + 4;
  }

  // optional int32 drop_trainer_level = 5;
  if (this->drop_trainer_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->drop_trainer_level());
  }

  // optional .POGOProtos.Settings.Master.Item.PokeballAttributes pokeball = 6;
  if (this->has_pokeball()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pokeball_);
  }

  // optional .POGOProtos.Settings.Master.Item.PotionAttributes potion = 7;
  if (this->has_potion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->potion_);
  }

  // optional .POGOProtos.Settings.Master.Item.ReviveAttributes revive = 8;
  if (this->has_revive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->revive_);
  }

  // optional .POGOProtos.Settings.Master.Item.BattleAttributes battle = 9;
  if (this->has_battle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->battle_);
  }

  // optional .POGOProtos.Settings.Master.Item.FoodAttributes food = 10;
  if (this->has_food()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->food_);
  }

  // optional .POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes inventory_upgrade = 11;
  if (this->has_inventory_upgrade()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->inventory_upgrade_);
  }

  // optional .POGOProtos.Settings.Master.Item.ExperienceBoostAttributes xp_boost = 12;
  if (this->has_xp_boost()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->xp_boost_);
  }

  // optional .POGOProtos.Settings.Master.Item.IncenseAttributes incense = 13;
  if (this->has_incense()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->incense_);
  }

  // optional .POGOProtos.Settings.Master.Item.EggIncubatorAttributes egg_incubator = 14;
  if (this->has_egg_incubator()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->egg_incubator_);
  }

  // optional .POGOProtos.Settings.Master.Item.FortModifierAttributes fort_modifier = 15;
  if (this->has_fort_modifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fort_modifier_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.ItemSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ItemSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.ItemSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.ItemSettings)
    MergeFrom(*source);
  }
}

void ItemSettings::MergeFrom(const ItemSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.ItemSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_type() != 0) {
    set_item_type(from.item_type());
  }
  if (from.category() != 0) {
    set_category(from.category());
  }
  if (from.drop_freq() != 0) {
    set_drop_freq(from.drop_freq());
  }
  if (from.drop_trainer_level() != 0) {
    set_drop_trainer_level(from.drop_trainer_level());
  }
  if (from.has_pokeball()) {
    mutable_pokeball()->::POGOProtos::Settings::Master::Item::PokeballAttributes::MergeFrom(from.pokeball());
  }
  if (from.has_potion()) {
    mutable_potion()->::POGOProtos::Settings::Master::Item::PotionAttributes::MergeFrom(from.potion());
  }
  if (from.has_revive()) {
    mutable_revive()->::POGOProtos::Settings::Master::Item::ReviveAttributes::MergeFrom(from.revive());
  }
  if (from.has_battle()) {
    mutable_battle()->::POGOProtos::Settings::Master::Item::BattleAttributes::MergeFrom(from.battle());
  }
  if (from.has_food()) {
    mutable_food()->::POGOProtos::Settings::Master::Item::FoodAttributes::MergeFrom(from.food());
  }
  if (from.has_inventory_upgrade()) {
    mutable_inventory_upgrade()->::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes::MergeFrom(from.inventory_upgrade());
  }
  if (from.has_xp_boost()) {
    mutable_xp_boost()->::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes::MergeFrom(from.xp_boost());
  }
  if (from.has_incense()) {
    mutable_incense()->::POGOProtos::Settings::Master::Item::IncenseAttributes::MergeFrom(from.incense());
  }
  if (from.has_egg_incubator()) {
    mutable_egg_incubator()->::POGOProtos::Settings::Master::Item::EggIncubatorAttributes::MergeFrom(from.egg_incubator());
  }
  if (from.has_fort_modifier()) {
    mutable_fort_modifier()->::POGOProtos::Settings::Master::Item::FortModifierAttributes::MergeFrom(from.fort_modifier());
  }
}

void ItemSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.ItemSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemSettings::CopyFrom(const ItemSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.ItemSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemSettings::IsInitialized() const {

  return true;
}

void ItemSettings::Swap(ItemSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemSettings::InternalSwap(ItemSettings* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(item_type_, other->item_type_);
  std::swap(category_, other->category_);
  std::swap(drop_freq_, other->drop_freq_);
  std::swap(drop_trainer_level_, other->drop_trainer_level_);
  std::swap(pokeball_, other->pokeball_);
  std::swap(potion_, other->potion_);
  std::swap(revive_, other->revive_);
  std::swap(battle_, other->battle_);
  std::swap(food_, other->food_);
  std::swap(inventory_upgrade_, other->inventory_upgrade_);
  std::swap(xp_boost_, other->xp_boost_);
  std::swap(incense_, other->incense_);
  std::swap(egg_incubator_, other->egg_incubator_);
  std::swap(fort_modifier_, other->fort_modifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemSettings_descriptor_;
  metadata.reflection = ItemSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemSettings

// optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
void ItemSettings::clear_item_id() {
  item_id_ = 0;
}
 ::POGOProtos::Inventory::Item::ItemId ItemSettings::item_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.item_id)
  return static_cast< ::POGOProtos::Inventory::Item::ItemId >(item_id_);
}
 void ItemSettings::set_item_id(::POGOProtos::Inventory::Item::ItemId value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.ItemSettings.item_id)
}

// optional .POGOProtos.Inventory.Item.ItemType item_type = 2;
void ItemSettings::clear_item_type() {
  item_type_ = 0;
}
 ::POGOProtos::Inventory::Item::ItemType ItemSettings::item_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.item_type)
  return static_cast< ::POGOProtos::Inventory::Item::ItemType >(item_type_);
}
 void ItemSettings::set_item_type(::POGOProtos::Inventory::Item::ItemType value) {
  
  item_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.ItemSettings.item_type)
}

// optional .POGOProtos.Enums.ItemCategory category = 3;
void ItemSettings::clear_category() {
  category_ = 0;
}
 ::POGOProtos::Enums::ItemCategory ItemSettings::category() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.category)
  return static_cast< ::POGOProtos::Enums::ItemCategory >(category_);
}
 void ItemSettings::set_category(::POGOProtos::Enums::ItemCategory value) {
  
  category_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.ItemSettings.category)
}

// optional float drop_freq = 4;
void ItemSettings::clear_drop_freq() {
  drop_freq_ = 0;
}
 float ItemSettings::drop_freq() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.drop_freq)
  return drop_freq_;
}
 void ItemSettings::set_drop_freq(float value) {
  
  drop_freq_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.ItemSettings.drop_freq)
}

// optional int32 drop_trainer_level = 5;
void ItemSettings::clear_drop_trainer_level() {
  drop_trainer_level_ = 0;
}
 ::google::protobuf::int32 ItemSettings::drop_trainer_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.drop_trainer_level)
  return drop_trainer_level_;
}
 void ItemSettings::set_drop_trainer_level(::google::protobuf::int32 value) {
  
  drop_trainer_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.ItemSettings.drop_trainer_level)
}

// optional .POGOProtos.Settings.Master.Item.PokeballAttributes pokeball = 6;
bool ItemSettings::has_pokeball() const {
  return !_is_default_instance_ && pokeball_ != NULL;
}
void ItemSettings::clear_pokeball() {
  if (GetArenaNoVirtual() == NULL && pokeball_ != NULL) delete pokeball_;
  pokeball_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::PokeballAttributes& ItemSettings::pokeball() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.pokeball)
  return pokeball_ != NULL ? *pokeball_ : *default_instance_->pokeball_;
}
::POGOProtos::Settings::Master::Item::PokeballAttributes* ItemSettings::mutable_pokeball() {
  
  if (pokeball_ == NULL) {
    pokeball_ = new ::POGOProtos::Settings::Master::Item::PokeballAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.pokeball)
  return pokeball_;
}
::POGOProtos::Settings::Master::Item::PokeballAttributes* ItemSettings::release_pokeball() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.pokeball)
  
  ::POGOProtos::Settings::Master::Item::PokeballAttributes* temp = pokeball_;
  pokeball_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_pokeball(::POGOProtos::Settings::Master::Item::PokeballAttributes* pokeball) {
  delete pokeball_;
  pokeball_ = pokeball;
  if (pokeball) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.pokeball)
}

// optional .POGOProtos.Settings.Master.Item.PotionAttributes potion = 7;
bool ItemSettings::has_potion() const {
  return !_is_default_instance_ && potion_ != NULL;
}
void ItemSettings::clear_potion() {
  if (GetArenaNoVirtual() == NULL && potion_ != NULL) delete potion_;
  potion_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::PotionAttributes& ItemSettings::potion() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.potion)
  return potion_ != NULL ? *potion_ : *default_instance_->potion_;
}
::POGOProtos::Settings::Master::Item::PotionAttributes* ItemSettings::mutable_potion() {
  
  if (potion_ == NULL) {
    potion_ = new ::POGOProtos::Settings::Master::Item::PotionAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.potion)
  return potion_;
}
::POGOProtos::Settings::Master::Item::PotionAttributes* ItemSettings::release_potion() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.potion)
  
  ::POGOProtos::Settings::Master::Item::PotionAttributes* temp = potion_;
  potion_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_potion(::POGOProtos::Settings::Master::Item::PotionAttributes* potion) {
  delete potion_;
  potion_ = potion;
  if (potion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.potion)
}

// optional .POGOProtos.Settings.Master.Item.ReviveAttributes revive = 8;
bool ItemSettings::has_revive() const {
  return !_is_default_instance_ && revive_ != NULL;
}
void ItemSettings::clear_revive() {
  if (GetArenaNoVirtual() == NULL && revive_ != NULL) delete revive_;
  revive_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::ReviveAttributes& ItemSettings::revive() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.revive)
  return revive_ != NULL ? *revive_ : *default_instance_->revive_;
}
::POGOProtos::Settings::Master::Item::ReviveAttributes* ItemSettings::mutable_revive() {
  
  if (revive_ == NULL) {
    revive_ = new ::POGOProtos::Settings::Master::Item::ReviveAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.revive)
  return revive_;
}
::POGOProtos::Settings::Master::Item::ReviveAttributes* ItemSettings::release_revive() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.revive)
  
  ::POGOProtos::Settings::Master::Item::ReviveAttributes* temp = revive_;
  revive_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_revive(::POGOProtos::Settings::Master::Item::ReviveAttributes* revive) {
  delete revive_;
  revive_ = revive;
  if (revive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.revive)
}

// optional .POGOProtos.Settings.Master.Item.BattleAttributes battle = 9;
bool ItemSettings::has_battle() const {
  return !_is_default_instance_ && battle_ != NULL;
}
void ItemSettings::clear_battle() {
  if (GetArenaNoVirtual() == NULL && battle_ != NULL) delete battle_;
  battle_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::BattleAttributes& ItemSettings::battle() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.battle)
  return battle_ != NULL ? *battle_ : *default_instance_->battle_;
}
::POGOProtos::Settings::Master::Item::BattleAttributes* ItemSettings::mutable_battle() {
  
  if (battle_ == NULL) {
    battle_ = new ::POGOProtos::Settings::Master::Item::BattleAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.battle)
  return battle_;
}
::POGOProtos::Settings::Master::Item::BattleAttributes* ItemSettings::release_battle() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.battle)
  
  ::POGOProtos::Settings::Master::Item::BattleAttributes* temp = battle_;
  battle_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_battle(::POGOProtos::Settings::Master::Item::BattleAttributes* battle) {
  delete battle_;
  battle_ = battle;
  if (battle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.battle)
}

// optional .POGOProtos.Settings.Master.Item.FoodAttributes food = 10;
bool ItemSettings::has_food() const {
  return !_is_default_instance_ && food_ != NULL;
}
void ItemSettings::clear_food() {
  if (GetArenaNoVirtual() == NULL && food_ != NULL) delete food_;
  food_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::FoodAttributes& ItemSettings::food() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.food)
  return food_ != NULL ? *food_ : *default_instance_->food_;
}
::POGOProtos::Settings::Master::Item::FoodAttributes* ItemSettings::mutable_food() {
  
  if (food_ == NULL) {
    food_ = new ::POGOProtos::Settings::Master::Item::FoodAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.food)
  return food_;
}
::POGOProtos::Settings::Master::Item::FoodAttributes* ItemSettings::release_food() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.food)
  
  ::POGOProtos::Settings::Master::Item::FoodAttributes* temp = food_;
  food_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_food(::POGOProtos::Settings::Master::Item::FoodAttributes* food) {
  delete food_;
  food_ = food;
  if (food) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.food)
}

// optional .POGOProtos.Settings.Master.Item.InventoryUpgradeAttributes inventory_upgrade = 11;
bool ItemSettings::has_inventory_upgrade() const {
  return !_is_default_instance_ && inventory_upgrade_ != NULL;
}
void ItemSettings::clear_inventory_upgrade() {
  if (GetArenaNoVirtual() == NULL && inventory_upgrade_ != NULL) delete inventory_upgrade_;
  inventory_upgrade_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes& ItemSettings::inventory_upgrade() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.inventory_upgrade)
  return inventory_upgrade_ != NULL ? *inventory_upgrade_ : *default_instance_->inventory_upgrade_;
}
::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes* ItemSettings::mutable_inventory_upgrade() {
  
  if (inventory_upgrade_ == NULL) {
    inventory_upgrade_ = new ::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.inventory_upgrade)
  return inventory_upgrade_;
}
::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes* ItemSettings::release_inventory_upgrade() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.inventory_upgrade)
  
  ::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes* temp = inventory_upgrade_;
  inventory_upgrade_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_inventory_upgrade(::POGOProtos::Settings::Master::Item::InventoryUpgradeAttributes* inventory_upgrade) {
  delete inventory_upgrade_;
  inventory_upgrade_ = inventory_upgrade;
  if (inventory_upgrade) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.inventory_upgrade)
}

// optional .POGOProtos.Settings.Master.Item.ExperienceBoostAttributes xp_boost = 12;
bool ItemSettings::has_xp_boost() const {
  return !_is_default_instance_ && xp_boost_ != NULL;
}
void ItemSettings::clear_xp_boost() {
  if (GetArenaNoVirtual() == NULL && xp_boost_ != NULL) delete xp_boost_;
  xp_boost_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes& ItemSettings::xp_boost() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.xp_boost)
  return xp_boost_ != NULL ? *xp_boost_ : *default_instance_->xp_boost_;
}
::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes* ItemSettings::mutable_xp_boost() {
  
  if (xp_boost_ == NULL) {
    xp_boost_ = new ::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.xp_boost)
  return xp_boost_;
}
::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes* ItemSettings::release_xp_boost() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.xp_boost)
  
  ::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes* temp = xp_boost_;
  xp_boost_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_xp_boost(::POGOProtos::Settings::Master::Item::ExperienceBoostAttributes* xp_boost) {
  delete xp_boost_;
  xp_boost_ = xp_boost;
  if (xp_boost) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.xp_boost)
}

// optional .POGOProtos.Settings.Master.Item.IncenseAttributes incense = 13;
bool ItemSettings::has_incense() const {
  return !_is_default_instance_ && incense_ != NULL;
}
void ItemSettings::clear_incense() {
  if (GetArenaNoVirtual() == NULL && incense_ != NULL) delete incense_;
  incense_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::IncenseAttributes& ItemSettings::incense() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.incense)
  return incense_ != NULL ? *incense_ : *default_instance_->incense_;
}
::POGOProtos::Settings::Master::Item::IncenseAttributes* ItemSettings::mutable_incense() {
  
  if (incense_ == NULL) {
    incense_ = new ::POGOProtos::Settings::Master::Item::IncenseAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.incense)
  return incense_;
}
::POGOProtos::Settings::Master::Item::IncenseAttributes* ItemSettings::release_incense() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.incense)
  
  ::POGOProtos::Settings::Master::Item::IncenseAttributes* temp = incense_;
  incense_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_incense(::POGOProtos::Settings::Master::Item::IncenseAttributes* incense) {
  delete incense_;
  incense_ = incense;
  if (incense) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.incense)
}

// optional .POGOProtos.Settings.Master.Item.EggIncubatorAttributes egg_incubator = 14;
bool ItemSettings::has_egg_incubator() const {
  return !_is_default_instance_ && egg_incubator_ != NULL;
}
void ItemSettings::clear_egg_incubator() {
  if (GetArenaNoVirtual() == NULL && egg_incubator_ != NULL) delete egg_incubator_;
  egg_incubator_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::EggIncubatorAttributes& ItemSettings::egg_incubator() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.egg_incubator)
  return egg_incubator_ != NULL ? *egg_incubator_ : *default_instance_->egg_incubator_;
}
::POGOProtos::Settings::Master::Item::EggIncubatorAttributes* ItemSettings::mutable_egg_incubator() {
  
  if (egg_incubator_ == NULL) {
    egg_incubator_ = new ::POGOProtos::Settings::Master::Item::EggIncubatorAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.egg_incubator)
  return egg_incubator_;
}
::POGOProtos::Settings::Master::Item::EggIncubatorAttributes* ItemSettings::release_egg_incubator() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.egg_incubator)
  
  ::POGOProtos::Settings::Master::Item::EggIncubatorAttributes* temp = egg_incubator_;
  egg_incubator_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_egg_incubator(::POGOProtos::Settings::Master::Item::EggIncubatorAttributes* egg_incubator) {
  delete egg_incubator_;
  egg_incubator_ = egg_incubator;
  if (egg_incubator) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.egg_incubator)
}

// optional .POGOProtos.Settings.Master.Item.FortModifierAttributes fort_modifier = 15;
bool ItemSettings::has_fort_modifier() const {
  return !_is_default_instance_ && fort_modifier_ != NULL;
}
void ItemSettings::clear_fort_modifier() {
  if (GetArenaNoVirtual() == NULL && fort_modifier_ != NULL) delete fort_modifier_;
  fort_modifier_ = NULL;
}
const ::POGOProtos::Settings::Master::Item::FortModifierAttributes& ItemSettings::fort_modifier() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.ItemSettings.fort_modifier)
  return fort_modifier_ != NULL ? *fort_modifier_ : *default_instance_->fort_modifier_;
}
::POGOProtos::Settings::Master::Item::FortModifierAttributes* ItemSettings::mutable_fort_modifier() {
  
  if (fort_modifier_ == NULL) {
    fort_modifier_ = new ::POGOProtos::Settings::Master::Item::FortModifierAttributes;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.Master.ItemSettings.fort_modifier)
  return fort_modifier_;
}
::POGOProtos::Settings::Master::Item::FortModifierAttributes* ItemSettings::release_fort_modifier() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.Master.ItemSettings.fort_modifier)
  
  ::POGOProtos::Settings::Master::Item::FortModifierAttributes* temp = fort_modifier_;
  fort_modifier_ = NULL;
  return temp;
}
void ItemSettings::set_allocated_fort_modifier(::POGOProtos::Settings::Master::Item::FortModifierAttributes* fort_modifier) {
  delete fort_modifier_;
  fort_modifier_ = fort_modifier;
  if (fort_modifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.Master.ItemSettings.fort_modifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
