// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PokemonUpgradeSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/PokemonUpgradeSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* PokemonUpgradeSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PokemonUpgradeSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/PokemonUpgradeSettings.proto");
  GOOGLE_CHECK(file != NULL);
  PokemonUpgradeSettings_descriptor_ = file->message_type(0);
  static const int PokemonUpgradeSettings_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, upgrades_per_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, allowed_levels_above_player_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, candy_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, stardust_cost_),
  };
  PokemonUpgradeSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PokemonUpgradeSettings_descriptor_,
      PokemonUpgradeSettings::default_instance_,
      PokemonUpgradeSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(PokemonUpgradeSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PokemonUpgradeSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PokemonUpgradeSettings_descriptor_, &PokemonUpgradeSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() {
  delete PokemonUpgradeSettings::default_instance_;
  delete PokemonUpgradeSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n7POGOProtos/Settings/Master/PokemonUpgr"
    "adeSettings.proto\022\032POGOProtos.Settings.M"
    "aster\"\204\001\n\026PokemonUpgradeSettings\022\032\n\022upgr"
    "ades_per_level\030\001 \001(\005\022#\n\033allowed_levels_a"
    "bove_player\030\002 \001(\005\022\022\n\ncandy_cost\030\003 \003(\005\022\025\n"
    "\rstardust_cost\030\004 \003(\005b\006proto3", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/PokemonUpgradeSettings.proto", &protobuf_RegisterTypes);
  PokemonUpgradeSettings::default_instance_ = new PokemonUpgradeSettings();
  PokemonUpgradeSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PokemonUpgradeSettings::kUpgradesPerLevelFieldNumber;
const int PokemonUpgradeSettings::kAllowedLevelsAbovePlayerFieldNumber;
const int PokemonUpgradeSettings::kCandyCostFieldNumber;
const int PokemonUpgradeSettings::kStardustCostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PokemonUpgradeSettings::PokemonUpgradeSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.PokemonUpgradeSettings)
}

void PokemonUpgradeSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PokemonUpgradeSettings::PokemonUpgradeSettings(const PokemonUpgradeSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.PokemonUpgradeSettings)
}

void PokemonUpgradeSettings::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  upgrades_per_level_ = 0;
  allowed_levels_above_player_ = 0;
}

PokemonUpgradeSettings::~PokemonUpgradeSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  SharedDtor();
}

void PokemonUpgradeSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PokemonUpgradeSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PokemonUpgradeSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PokemonUpgradeSettings_descriptor_;
}

const PokemonUpgradeSettings& PokemonUpgradeSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPokemonUpgradeSettings_2eproto();
  return *default_instance_;
}

PokemonUpgradeSettings* PokemonUpgradeSettings::default_instance_ = NULL;

PokemonUpgradeSettings* PokemonUpgradeSettings::New(::google::protobuf::Arena* arena) const {
  PokemonUpgradeSettings* n = new PokemonUpgradeSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PokemonUpgradeSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PokemonUpgradeSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PokemonUpgradeSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(upgrades_per_level_, allowed_levels_above_player_);

#undef ZR_HELPER_
#undef ZR_

  candy_cost_.Clear();
  stardust_cost_.Clear();
}

bool PokemonUpgradeSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 upgrades_per_level = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &upgrades_per_level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_allowed_levels_above_player;
        break;
      }

      // optional int32 allowed_levels_above_player = 2;
      case 2: {
        if (tag == 16) {
         parse_allowed_levels_above_player:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &allowed_levels_above_player_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_candy_cost;
        break;
      }

      // repeated int32 candy_cost = 3;
      case 3: {
        if (tag == 26) {
         parse_candy_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_candy_cost())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26, input, this->mutable_candy_cost())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_stardust_cost;
        break;
      }

      // repeated int32 stardust_cost = 4;
      case 4: {
        if (tag == 34) {
         parse_stardust_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_stardust_cost())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34, input, this->mutable_stardust_cost())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  return false;
#undef DO_
}

void PokemonUpgradeSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  // optional int32 upgrades_per_level = 1;
  if (this->upgrades_per_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->upgrades_per_level(), output);
  }

  // optional int32 allowed_levels_above_player = 2;
  if (this->allowed_levels_above_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->allowed_levels_above_player(), output);
  }

  // repeated int32 candy_cost = 3;
  if (this->candy_cost_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_candy_cost_cached_byte_size_);
  }
  for (int i = 0; i < this->candy_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->candy_cost(i), output);
  }

  // repeated int32 stardust_cost = 4;
  if (this->stardust_cost_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_stardust_cost_cached_byte_size_);
  }
  for (int i = 0; i < this->stardust_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->stardust_cost(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.PokemonUpgradeSettings)
}

::google::protobuf::uint8* PokemonUpgradeSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  // optional int32 upgrades_per_level = 1;
  if (this->upgrades_per_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->upgrades_per_level(), target);
  }

  // optional int32 allowed_levels_above_player = 2;
  if (this->allowed_levels_above_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->allowed_levels_above_player(), target);
  }

  // repeated int32 candy_cost = 3;
  if (this->candy_cost_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _candy_cost_cached_byte_size_, target);
  }
  for (int i = 0; i < this->candy_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->candy_cost(i), target);
  }

  // repeated int32 stardust_cost = 4;
  if (this->stardust_cost_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _stardust_cost_cached_byte_size_, target);
  }
  for (int i = 0; i < this->stardust_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->stardust_cost(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  return target;
}

int PokemonUpgradeSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  int total_size = 0;

  // optional int32 upgrades_per_level = 1;
  if (this->upgrades_per_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->upgrades_per_level());
  }

  // optional int32 allowed_levels_above_player = 2;
  if (this->allowed_levels_above_player() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->allowed_levels_above_player());
  }

  // repeated int32 candy_cost = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->candy_cost_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->candy_cost(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _candy_cost_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 stardust_cost = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->stardust_cost_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->stardust_cost(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _stardust_cost_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PokemonUpgradeSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PokemonUpgradeSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PokemonUpgradeSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.PokemonUpgradeSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.PokemonUpgradeSettings)
    MergeFrom(*source);
  }
}

void PokemonUpgradeSettings::MergeFrom(const PokemonUpgradeSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  candy_cost_.MergeFrom(from.candy_cost_);
  stardust_cost_.MergeFrom(from.stardust_cost_);
  if (from.upgrades_per_level() != 0) {
    set_upgrades_per_level(from.upgrades_per_level());
  }
  if (from.allowed_levels_above_player() != 0) {
    set_allowed_levels_above_player(from.allowed_levels_above_player());
  }
}

void PokemonUpgradeSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PokemonUpgradeSettings::CopyFrom(const PokemonUpgradeSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.PokemonUpgradeSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PokemonUpgradeSettings::IsInitialized() const {

  return true;
}

void PokemonUpgradeSettings::Swap(PokemonUpgradeSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PokemonUpgradeSettings::InternalSwap(PokemonUpgradeSettings* other) {
  std::swap(upgrades_per_level_, other->upgrades_per_level_);
  std::swap(allowed_levels_above_player_, other->allowed_levels_above_player_);
  candy_cost_.UnsafeArenaSwap(&other->candy_cost_);
  stardust_cost_.UnsafeArenaSwap(&other->stardust_cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PokemonUpgradeSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PokemonUpgradeSettings_descriptor_;
  metadata.reflection = PokemonUpgradeSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PokemonUpgradeSettings

// optional int32 upgrades_per_level = 1;
void PokemonUpgradeSettings::clear_upgrades_per_level() {
  upgrades_per_level_ = 0;
}
 ::google::protobuf::int32 PokemonUpgradeSettings::upgrades_per_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonUpgradeSettings.upgrades_per_level)
  return upgrades_per_level_;
}
 void PokemonUpgradeSettings::set_upgrades_per_level(::google::protobuf::int32 value) {
  
  upgrades_per_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonUpgradeSettings.upgrades_per_level)
}

// optional int32 allowed_levels_above_player = 2;
void PokemonUpgradeSettings::clear_allowed_levels_above_player() {
  allowed_levels_above_player_ = 0;
}
 ::google::protobuf::int32 PokemonUpgradeSettings::allowed_levels_above_player() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonUpgradeSettings.allowed_levels_above_player)
  return allowed_levels_above_player_;
}
 void PokemonUpgradeSettings::set_allowed_levels_above_player(::google::protobuf::int32 value) {
  
  allowed_levels_above_player_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonUpgradeSettings.allowed_levels_above_player)
}

// repeated int32 candy_cost = 3;
int PokemonUpgradeSettings::candy_cost_size() const {
  return candy_cost_.size();
}
void PokemonUpgradeSettings::clear_candy_cost() {
  candy_cost_.Clear();
}
 ::google::protobuf::int32 PokemonUpgradeSettings::candy_cost(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonUpgradeSettings.candy_cost)
  return candy_cost_.Get(index);
}
 void PokemonUpgradeSettings::set_candy_cost(int index, ::google::protobuf::int32 value) {
  candy_cost_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonUpgradeSettings.candy_cost)
}
 void PokemonUpgradeSettings::add_candy_cost(::google::protobuf::int32 value) {
  candy_cost_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonUpgradeSettings.candy_cost)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PokemonUpgradeSettings::candy_cost() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonUpgradeSettings.candy_cost)
  return candy_cost_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PokemonUpgradeSettings::mutable_candy_cost() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonUpgradeSettings.candy_cost)
  return &candy_cost_;
}

// repeated int32 stardust_cost = 4;
int PokemonUpgradeSettings::stardust_cost_size() const {
  return stardust_cost_.size();
}
void PokemonUpgradeSettings::clear_stardust_cost() {
  stardust_cost_.Clear();
}
 ::google::protobuf::int32 PokemonUpgradeSettings::stardust_cost(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PokemonUpgradeSettings.stardust_cost)
  return stardust_cost_.Get(index);
}
 void PokemonUpgradeSettings::set_stardust_cost(int index, ::google::protobuf::int32 value) {
  stardust_cost_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PokemonUpgradeSettings.stardust_cost)
}
 void PokemonUpgradeSettings::add_stardust_cost(::google::protobuf::int32 value) {
  stardust_cost_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PokemonUpgradeSettings.stardust_cost)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PokemonUpgradeSettings::stardust_cost() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PokemonUpgradeSettings.stardust_cost)
  return stardust_cost_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PokemonUpgradeSettings::mutable_stardust_cost() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PokemonUpgradeSettings.stardust_cost)
  return &stardust_cost_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
