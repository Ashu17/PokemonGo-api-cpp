// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PlayerLevelSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/Master/PlayerLevelSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {
namespace Master {

namespace {

const ::google::protobuf::Descriptor* PlayerLevelSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerLevelSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/Master/PlayerLevelSettings.proto");
  GOOGLE_CHECK(file != NULL);
  PlayerLevelSettings_descriptor_ = file->message_type(0);
  static const int PlayerLevelSettings_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, rank_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, required_experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, cp_multiplier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, max_egg_player_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, max_encounter_player_level_),
  };
  PlayerLevelSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerLevelSettings_descriptor_,
      PlayerLevelSettings::default_instance_,
      PlayerLevelSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(PlayerLevelSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLevelSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerLevelSettings_descriptor_, &PlayerLevelSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() {
  delete PlayerLevelSettings::default_instance_;
  delete PlayerLevelSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n4POGOProtos/Settings/Master/PlayerLevel"
    "Settings.proto\022\032POGOProtos.Settings.Mast"
    "er\"\235\001\n\023PlayerLevelSettings\022\020\n\010rank_num\030\001"
    " \003(\005\022\033\n\023required_experience\030\002 \003(\005\022\025\n\rcp_"
    "multiplier\030\003 \003(\002\022\034\n\024max_egg_player_level"
    "\030\004 \001(\005\022\"\n\032max_encounter_player_level\030\005 \001"
    "(\005b\006proto3", 250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/Master/PlayerLevelSettings.proto", &protobuf_RegisterTypes);
  PlayerLevelSettings::default_instance_ = new PlayerLevelSettings();
  PlayerLevelSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLevelSettings::kRankNumFieldNumber;
const int PlayerLevelSettings::kRequiredExperienceFieldNumber;
const int PlayerLevelSettings::kCpMultiplierFieldNumber;
const int PlayerLevelSettings::kMaxEggPlayerLevelFieldNumber;
const int PlayerLevelSettings::kMaxEncounterPlayerLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLevelSettings::PlayerLevelSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.Master.PlayerLevelSettings)
}

void PlayerLevelSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PlayerLevelSettings::PlayerLevelSettings(const PlayerLevelSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.Master.PlayerLevelSettings)
}

void PlayerLevelSettings::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  max_egg_player_level_ = 0;
  max_encounter_player_level_ = 0;
}

PlayerLevelSettings::~PlayerLevelSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.Master.PlayerLevelSettings)
  SharedDtor();
}

void PlayerLevelSettings::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PlayerLevelSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLevelSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerLevelSettings_descriptor_;
}

const PlayerLevelSettings& PlayerLevelSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMaster_2fPlayerLevelSettings_2eproto();
  return *default_instance_;
}

PlayerLevelSettings* PlayerLevelSettings::default_instance_ = NULL;

PlayerLevelSettings* PlayerLevelSettings::New(::google::protobuf::Arena* arena) const {
  PlayerLevelSettings* n = new PlayerLevelSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLevelSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.Master.PlayerLevelSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PlayerLevelSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PlayerLevelSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(max_egg_player_level_, max_encounter_player_level_);

#undef ZR_HELPER_
#undef ZR_

  rank_num_.Clear();
  required_experience_.Clear();
  cp_multiplier_.Clear();
}

bool PlayerLevelSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 rank_num = 1;
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rank_num())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_rank_num())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_required_experience;
        break;
      }

      // repeated int32 required_experience = 2;
      case 2: {
        if (tag == 18) {
         parse_required_experience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_required_experience())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_required_experience())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cp_multiplier;
        break;
      }

      // repeated float cp_multiplier = 3;
      case 3: {
        if (tag == 26) {
         parse_cp_multiplier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_cp_multiplier())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_cp_multiplier())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_max_egg_player_level;
        break;
      }

      // optional int32 max_egg_player_level = 4;
      case 4: {
        if (tag == 32) {
         parse_max_egg_player_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_egg_player_level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_max_encounter_player_level;
        break;
      }

      // optional int32 max_encounter_player_level = 5;
      case 5: {
        if (tag == 40) {
         parse_max_encounter_player_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_encounter_player_level_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.Master.PlayerLevelSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.Master.PlayerLevelSettings)
  return false;
#undef DO_
}

void PlayerLevelSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  // repeated int32 rank_num = 1;
  if (this->rank_num_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_rank_num_cached_byte_size_);
  }
  for (int i = 0; i < this->rank_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->rank_num(i), output);
  }

  // repeated int32 required_experience = 2;
  if (this->required_experience_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_required_experience_cached_byte_size_);
  }
  for (int i = 0; i < this->required_experience_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->required_experience(i), output);
  }

  // repeated float cp_multiplier = 3;
  if (this->cp_multiplier_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_cp_multiplier_cached_byte_size_);
  }
  for (int i = 0; i < this->cp_multiplier_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->cp_multiplier(i), output);
  }

  // optional int32 max_egg_player_level = 4;
  if (this->max_egg_player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_egg_player_level(), output);
  }

  // optional int32 max_encounter_player_level = 5;
  if (this->max_encounter_player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->max_encounter_player_level(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.Master.PlayerLevelSettings)
}

::google::protobuf::uint8* PlayerLevelSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  // repeated int32 rank_num = 1;
  if (this->rank_num_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _rank_num_cached_byte_size_, target);
  }
  for (int i = 0; i < this->rank_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->rank_num(i), target);
  }

  // repeated int32 required_experience = 2;
  if (this->required_experience_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _required_experience_cached_byte_size_, target);
  }
  for (int i = 0; i < this->required_experience_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->required_experience(i), target);
  }

  // repeated float cp_multiplier = 3;
  if (this->cp_multiplier_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _cp_multiplier_cached_byte_size_, target);
  }
  for (int i = 0; i < this->cp_multiplier_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->cp_multiplier(i), target);
  }

  // optional int32 max_egg_player_level = 4;
  if (this->max_egg_player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_egg_player_level(), target);
  }

  // optional int32 max_encounter_player_level = 5;
  if (this->max_encounter_player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->max_encounter_player_level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.Master.PlayerLevelSettings)
  return target;
}

int PlayerLevelSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  int total_size = 0;

  // optional int32 max_egg_player_level = 4;
  if (this->max_egg_player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_egg_player_level());
  }

  // optional int32 max_encounter_player_level = 5;
  if (this->max_encounter_player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_encounter_player_level());
  }

  // repeated int32 rank_num = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->rank_num_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->rank_num(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rank_num_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 required_experience = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->required_experience_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->required_experience(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _required_experience_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float cp_multiplier = 3;
  {
    int data_size = 0;
    data_size = 4 * this->cp_multiplier_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cp_multiplier_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLevelSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PlayerLevelSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLevelSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.Master.PlayerLevelSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.Master.PlayerLevelSettings)
    MergeFrom(*source);
  }
}

void PlayerLevelSettings::MergeFrom(const PlayerLevelSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  rank_num_.MergeFrom(from.rank_num_);
  required_experience_.MergeFrom(from.required_experience_);
  cp_multiplier_.MergeFrom(from.cp_multiplier_);
  if (from.max_egg_player_level() != 0) {
    set_max_egg_player_level(from.max_egg_player_level());
  }
  if (from.max_encounter_player_level() != 0) {
    set_max_encounter_player_level(from.max_encounter_player_level());
  }
}

void PlayerLevelSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLevelSettings::CopyFrom(const PlayerLevelSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.Master.PlayerLevelSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLevelSettings::IsInitialized() const {

  return true;
}

void PlayerLevelSettings::Swap(PlayerLevelSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLevelSettings::InternalSwap(PlayerLevelSettings* other) {
  rank_num_.UnsafeArenaSwap(&other->rank_num_);
  required_experience_.UnsafeArenaSwap(&other->required_experience_);
  cp_multiplier_.UnsafeArenaSwap(&other->cp_multiplier_);
  std::swap(max_egg_player_level_, other->max_egg_player_level_);
  std::swap(max_encounter_player_level_, other->max_encounter_player_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLevelSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerLevelSettings_descriptor_;
  metadata.reflection = PlayerLevelSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLevelSettings

// repeated int32 rank_num = 1;
int PlayerLevelSettings::rank_num_size() const {
  return rank_num_.size();
}
void PlayerLevelSettings::clear_rank_num() {
  rank_num_.Clear();
}
 ::google::protobuf::int32 PlayerLevelSettings::rank_num(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return rank_num_.Get(index);
}
 void PlayerLevelSettings::set_rank_num(int index, ::google::protobuf::int32 value) {
  rank_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
}
 void PlayerLevelSettings::add_rank_num(::google::protobuf::int32 value) {
  rank_num_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerLevelSettings::rank_num() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return rank_num_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerLevelSettings::mutable_rank_num() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.rank_num)
  return &rank_num_;
}

// repeated int32 required_experience = 2;
int PlayerLevelSettings::required_experience_size() const {
  return required_experience_.size();
}
void PlayerLevelSettings::clear_required_experience() {
  required_experience_.Clear();
}
 ::google::protobuf::int32 PlayerLevelSettings::required_experience(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return required_experience_.Get(index);
}
 void PlayerLevelSettings::set_required_experience(int index, ::google::protobuf::int32 value) {
  required_experience_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
}
 void PlayerLevelSettings::add_required_experience(::google::protobuf::int32 value) {
  required_experience_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PlayerLevelSettings::required_experience() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return required_experience_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PlayerLevelSettings::mutable_required_experience() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.required_experience)
  return &required_experience_;
}

// repeated float cp_multiplier = 3;
int PlayerLevelSettings::cp_multiplier_size() const {
  return cp_multiplier_.size();
}
void PlayerLevelSettings::clear_cp_multiplier() {
  cp_multiplier_.Clear();
}
 float PlayerLevelSettings::cp_multiplier(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return cp_multiplier_.Get(index);
}
 void PlayerLevelSettings::set_cp_multiplier(int index, float value) {
  cp_multiplier_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
}
 void PlayerLevelSettings::add_cp_multiplier(float value) {
  cp_multiplier_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
}
 const ::google::protobuf::RepeatedField< float >&
PlayerLevelSettings::cp_multiplier() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return cp_multiplier_;
}
 ::google::protobuf::RepeatedField< float >*
PlayerLevelSettings::mutable_cp_multiplier() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Settings.Master.PlayerLevelSettings.cp_multiplier)
  return &cp_multiplier_;
}

// optional int32 max_egg_player_level = 4;
void PlayerLevelSettings::clear_max_egg_player_level() {
  max_egg_player_level_ = 0;
}
 ::google::protobuf::int32 PlayerLevelSettings::max_egg_player_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.max_egg_player_level)
  return max_egg_player_level_;
}
 void PlayerLevelSettings::set_max_egg_player_level(::google::protobuf::int32 value) {
  
  max_egg_player_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.max_egg_player_level)
}

// optional int32 max_encounter_player_level = 5;
void PlayerLevelSettings::clear_max_encounter_player_level() {
  max_encounter_player_level_ = 0;
}
 ::google::protobuf::int32 PlayerLevelSettings::max_encounter_player_level() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.Master.PlayerLevelSettings.max_encounter_player_level)
  return max_encounter_player_level_;
}
 void PlayerLevelSettings::set_max_encounter_player_level(::google::protobuf::int32 value) {
  
  max_encounter_player_level_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.Master.PlayerLevelSettings.max_encounter_player_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Master
}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
