// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/GlobalSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fGlobalSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fGlobalSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Settings/FortSettings.pb.h"
#include "POGOProtos/Settings/MapSettings.pb.h"
#include "POGOProtos/Settings/LevelSettings.pb.h"
#include "POGOProtos/Settings/InventorySettings.pb.h"
#include "POGOProtos/Settings/GpsSettings.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fGlobalSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fGlobalSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fGlobalSettings_2eproto();

class GlobalSettings;

// ===================================================================

class GlobalSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.GlobalSettings) */ {
 public:
  GlobalSettings();
  virtual ~GlobalSettings();

  GlobalSettings(const GlobalSettings& from);

  inline GlobalSettings& operator=(const GlobalSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GlobalSettings& default_instance();

  void Swap(GlobalSettings* other);

  // implements Message ----------------------------------------------

  inline GlobalSettings* New() const { return New(NULL); }

  GlobalSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GlobalSettings& from);
  void MergeFrom(const GlobalSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GlobalSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Settings.FortSettings fort_settings = 2;
  bool has_fort_settings() const;
  void clear_fort_settings();
  static const int kFortSettingsFieldNumber = 2;
  const ::POGOProtos::Settings::FortSettings& fort_settings() const;
  ::POGOProtos::Settings::FortSettings* mutable_fort_settings();
  ::POGOProtos::Settings::FortSettings* release_fort_settings();
  void set_allocated_fort_settings(::POGOProtos::Settings::FortSettings* fort_settings);

  // optional .POGOProtos.Settings.MapSettings map_settings = 3;
  bool has_map_settings() const;
  void clear_map_settings();
  static const int kMapSettingsFieldNumber = 3;
  const ::POGOProtos::Settings::MapSettings& map_settings() const;
  ::POGOProtos::Settings::MapSettings* mutable_map_settings();
  ::POGOProtos::Settings::MapSettings* release_map_settings();
  void set_allocated_map_settings(::POGOProtos::Settings::MapSettings* map_settings);

  // optional .POGOProtos.Settings.LevelSettings level_settings = 4;
  bool has_level_settings() const;
  void clear_level_settings();
  static const int kLevelSettingsFieldNumber = 4;
  const ::POGOProtos::Settings::LevelSettings& level_settings() const;
  ::POGOProtos::Settings::LevelSettings* mutable_level_settings();
  ::POGOProtos::Settings::LevelSettings* release_level_settings();
  void set_allocated_level_settings(::POGOProtos::Settings::LevelSettings* level_settings);

  // optional .POGOProtos.Settings.InventorySettings inventory_settings = 5;
  bool has_inventory_settings() const;
  void clear_inventory_settings();
  static const int kInventorySettingsFieldNumber = 5;
  const ::POGOProtos::Settings::InventorySettings& inventory_settings() const;
  ::POGOProtos::Settings::InventorySettings* mutable_inventory_settings();
  ::POGOProtos::Settings::InventorySettings* release_inventory_settings();
  void set_allocated_inventory_settings(::POGOProtos::Settings::InventorySettings* inventory_settings);

  // optional string minimum_client_version = 6;
  void clear_minimum_client_version();
  static const int kMinimumClientVersionFieldNumber = 6;
  const ::std::string& minimum_client_version() const;
  void set_minimum_client_version(const ::std::string& value);
  void set_minimum_client_version(const char* value);
  void set_minimum_client_version(const char* value, size_t size);
  ::std::string* mutable_minimum_client_version();
  ::std::string* release_minimum_client_version();
  void set_allocated_minimum_client_version(::std::string* minimum_client_version);

  // optional .POGOProtos.Settings.GpsSettings gps_settings = 7;
  bool has_gps_settings() const;
  void clear_gps_settings();
  static const int kGpsSettingsFieldNumber = 7;
  const ::POGOProtos::Settings::GpsSettings& gps_settings() const;
  ::POGOProtos::Settings::GpsSettings* mutable_gps_settings();
  ::POGOProtos::Settings::GpsSettings* release_gps_settings();
  void set_allocated_gps_settings(::POGOProtos::Settings::GpsSettings* gps_settings);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.GlobalSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::POGOProtos::Settings::FortSettings* fort_settings_;
  ::POGOProtos::Settings::MapSettings* map_settings_;
  ::POGOProtos::Settings::LevelSettings* level_settings_;
  ::POGOProtos::Settings::InventorySettings* inventory_settings_;
  ::google::protobuf::internal::ArenaStringPtr minimum_client_version_;
  ::POGOProtos::Settings::GpsSettings* gps_settings_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fGlobalSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fGlobalSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fGlobalSettings_2eproto();

  void InitAsDefaultInstance();
  static GlobalSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GlobalSettings

// optional .POGOProtos.Settings.FortSettings fort_settings = 2;
inline bool GlobalSettings::has_fort_settings() const {
  return !_is_default_instance_ && fort_settings_ != NULL;
}
inline void GlobalSettings::clear_fort_settings() {
  if (GetArenaNoVirtual() == NULL && fort_settings_ != NULL) delete fort_settings_;
  fort_settings_ = NULL;
}
inline const ::POGOProtos::Settings::FortSettings& GlobalSettings::fort_settings() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.fort_settings)
  return fort_settings_ != NULL ? *fort_settings_ : *default_instance_->fort_settings_;
}
inline ::POGOProtos::Settings::FortSettings* GlobalSettings::mutable_fort_settings() {
  
  if (fort_settings_ == NULL) {
    fort_settings_ = new ::POGOProtos::Settings::FortSettings;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.fort_settings)
  return fort_settings_;
}
inline ::POGOProtos::Settings::FortSettings* GlobalSettings::release_fort_settings() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.fort_settings)
  
  ::POGOProtos::Settings::FortSettings* temp = fort_settings_;
  fort_settings_ = NULL;
  return temp;
}
inline void GlobalSettings::set_allocated_fort_settings(::POGOProtos::Settings::FortSettings* fort_settings) {
  delete fort_settings_;
  fort_settings_ = fort_settings;
  if (fort_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.fort_settings)
}

// optional .POGOProtos.Settings.MapSettings map_settings = 3;
inline bool GlobalSettings::has_map_settings() const {
  return !_is_default_instance_ && map_settings_ != NULL;
}
inline void GlobalSettings::clear_map_settings() {
  if (GetArenaNoVirtual() == NULL && map_settings_ != NULL) delete map_settings_;
  map_settings_ = NULL;
}
inline const ::POGOProtos::Settings::MapSettings& GlobalSettings::map_settings() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.map_settings)
  return map_settings_ != NULL ? *map_settings_ : *default_instance_->map_settings_;
}
inline ::POGOProtos::Settings::MapSettings* GlobalSettings::mutable_map_settings() {
  
  if (map_settings_ == NULL) {
    map_settings_ = new ::POGOProtos::Settings::MapSettings;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.map_settings)
  return map_settings_;
}
inline ::POGOProtos::Settings::MapSettings* GlobalSettings::release_map_settings() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.map_settings)
  
  ::POGOProtos::Settings::MapSettings* temp = map_settings_;
  map_settings_ = NULL;
  return temp;
}
inline void GlobalSettings::set_allocated_map_settings(::POGOProtos::Settings::MapSettings* map_settings) {
  delete map_settings_;
  map_settings_ = map_settings;
  if (map_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.map_settings)
}

// optional .POGOProtos.Settings.LevelSettings level_settings = 4;
inline bool GlobalSettings::has_level_settings() const {
  return !_is_default_instance_ && level_settings_ != NULL;
}
inline void GlobalSettings::clear_level_settings() {
  if (GetArenaNoVirtual() == NULL && level_settings_ != NULL) delete level_settings_;
  level_settings_ = NULL;
}
inline const ::POGOProtos::Settings::LevelSettings& GlobalSettings::level_settings() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.level_settings)
  return level_settings_ != NULL ? *level_settings_ : *default_instance_->level_settings_;
}
inline ::POGOProtos::Settings::LevelSettings* GlobalSettings::mutable_level_settings() {
  
  if (level_settings_ == NULL) {
    level_settings_ = new ::POGOProtos::Settings::LevelSettings;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.level_settings)
  return level_settings_;
}
inline ::POGOProtos::Settings::LevelSettings* GlobalSettings::release_level_settings() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.level_settings)
  
  ::POGOProtos::Settings::LevelSettings* temp = level_settings_;
  level_settings_ = NULL;
  return temp;
}
inline void GlobalSettings::set_allocated_level_settings(::POGOProtos::Settings::LevelSettings* level_settings) {
  delete level_settings_;
  level_settings_ = level_settings;
  if (level_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.level_settings)
}

// optional .POGOProtos.Settings.InventorySettings inventory_settings = 5;
inline bool GlobalSettings::has_inventory_settings() const {
  return !_is_default_instance_ && inventory_settings_ != NULL;
}
inline void GlobalSettings::clear_inventory_settings() {
  if (GetArenaNoVirtual() == NULL && inventory_settings_ != NULL) delete inventory_settings_;
  inventory_settings_ = NULL;
}
inline const ::POGOProtos::Settings::InventorySettings& GlobalSettings::inventory_settings() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.inventory_settings)
  return inventory_settings_ != NULL ? *inventory_settings_ : *default_instance_->inventory_settings_;
}
inline ::POGOProtos::Settings::InventorySettings* GlobalSettings::mutable_inventory_settings() {
  
  if (inventory_settings_ == NULL) {
    inventory_settings_ = new ::POGOProtos::Settings::InventorySettings;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.inventory_settings)
  return inventory_settings_;
}
inline ::POGOProtos::Settings::InventorySettings* GlobalSettings::release_inventory_settings() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.inventory_settings)
  
  ::POGOProtos::Settings::InventorySettings* temp = inventory_settings_;
  inventory_settings_ = NULL;
  return temp;
}
inline void GlobalSettings::set_allocated_inventory_settings(::POGOProtos::Settings::InventorySettings* inventory_settings) {
  delete inventory_settings_;
  inventory_settings_ = inventory_settings;
  if (inventory_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.inventory_settings)
}

// optional string minimum_client_version = 6;
inline void GlobalSettings::clear_minimum_client_version() {
  minimum_client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GlobalSettings::minimum_client_version() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.minimum_client_version)
  return minimum_client_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalSettings::set_minimum_client_version(const ::std::string& value) {
  
  minimum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.GlobalSettings.minimum_client_version)
}
inline void GlobalSettings::set_minimum_client_version(const char* value) {
  
  minimum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.GlobalSettings.minimum_client_version)
}
inline void GlobalSettings::set_minimum_client_version(const char* value, size_t size) {
  
  minimum_client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.GlobalSettings.minimum_client_version)
}
inline ::std::string* GlobalSettings::mutable_minimum_client_version() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.minimum_client_version)
  return minimum_client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GlobalSettings::release_minimum_client_version() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.minimum_client_version)
  
  return minimum_client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GlobalSettings::set_allocated_minimum_client_version(::std::string* minimum_client_version) {
  if (minimum_client_version != NULL) {
    
  } else {
    
  }
  minimum_client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), minimum_client_version);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.minimum_client_version)
}

// optional .POGOProtos.Settings.GpsSettings gps_settings = 7;
inline bool GlobalSettings::has_gps_settings() const {
  return !_is_default_instance_ && gps_settings_ != NULL;
}
inline void GlobalSettings::clear_gps_settings() {
  if (GetArenaNoVirtual() == NULL && gps_settings_ != NULL) delete gps_settings_;
  gps_settings_ = NULL;
}
inline const ::POGOProtos::Settings::GpsSettings& GlobalSettings::gps_settings() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.GlobalSettings.gps_settings)
  return gps_settings_ != NULL ? *gps_settings_ : *default_instance_->gps_settings_;
}
inline ::POGOProtos::Settings::GpsSettings* GlobalSettings::mutable_gps_settings() {
  
  if (gps_settings_ == NULL) {
    gps_settings_ = new ::POGOProtos::Settings::GpsSettings;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.GlobalSettings.gps_settings)
  return gps_settings_;
}
inline ::POGOProtos::Settings::GpsSettings* GlobalSettings::release_gps_settings() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.GlobalSettings.gps_settings)
  
  ::POGOProtos::Settings::GpsSettings* temp = gps_settings_;
  gps_settings_ = NULL;
  return temp;
}
inline void GlobalSettings::set_allocated_gps_settings(::POGOProtos::Settings::GpsSettings* gps_settings) {
  delete gps_settings_;
  gps_settings_ = gps_settings;
  if (gps_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.GlobalSettings.gps_settings)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fGlobalSettings_2eproto__INCLUDED
