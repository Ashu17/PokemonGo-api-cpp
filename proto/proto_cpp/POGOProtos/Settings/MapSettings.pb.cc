// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/MapSettings.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Settings/MapSettings.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {

namespace {

const ::google::protobuf::Descriptor* MapSettings_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapSettings_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fSettings_2fMapSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMapSettings_2eproto() {
  protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Settings/MapSettings.proto");
  GOOGLE_CHECK(file != NULL);
  MapSettings_descriptor_ = file->message_type(0);
  static const int MapSettings_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, pokemon_visible_range_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, poke_nav_range_meters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, encounter_range_meters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, get_map_objects_min_refresh_seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, get_map_objects_max_refresh_seconds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, get_map_objects_min_distance_meters_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, google_maps_api_key_),
  };
  MapSettings_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapSettings_descriptor_,
      MapSettings::default_instance_,
      MapSettings_offsets_,
      -1,
      -1,
      -1,
      sizeof(MapSettings),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapSettings, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fSettings_2fMapSettings_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapSettings_descriptor_, &MapSettings::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMapSettings_2eproto() {
  delete MapSettings::default_instance_;
  delete MapSettings_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n%POGOProtos/Settings/MapSettings.proto\022"
    "\023POGOProtos.Settings\"\217\002\n\013MapSettings\022\035\n\025"
    "pokemon_visible_range\030\001 \001(\001\022\035\n\025poke_nav_"
    "range_meters\030\002 \001(\001\022\036\n\026encounter_range_me"
    "ters\030\003 \001(\001\022+\n#get_map_objects_min_refres"
    "h_seconds\030\004 \001(\002\022+\n#get_map_objects_max_r"
    "efresh_seconds\030\005 \001(\002\022+\n#get_map_objects_"
    "min_distance_meters\030\006 \001(\002\022\033\n\023google_maps"
    "_api_key\030\007 \001(\tb\006proto3", 342);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Settings/MapSettings.proto", &protobuf_RegisterTypes);
  MapSettings::default_instance_ = new MapSettings();
  MapSettings::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fSettings_2fMapSettings_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fSettings_2fMapSettings_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fSettings_2fMapSettings_2eproto() {
    protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fSettings_2fMapSettings_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapSettings::kPokemonVisibleRangeFieldNumber;
const int MapSettings::kPokeNavRangeMetersFieldNumber;
const int MapSettings::kEncounterRangeMetersFieldNumber;
const int MapSettings::kGetMapObjectsMinRefreshSecondsFieldNumber;
const int MapSettings::kGetMapObjectsMaxRefreshSecondsFieldNumber;
const int MapSettings::kGetMapObjectsMinDistanceMetersFieldNumber;
const int MapSettings::kGoogleMapsApiKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapSettings::MapSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Settings.MapSettings)
}

void MapSettings::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MapSettings::MapSettings(const MapSettings& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Settings.MapSettings)
}

void MapSettings::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pokemon_visible_range_ = 0;
  poke_nav_range_meters_ = 0;
  encounter_range_meters_ = 0;
  get_map_objects_min_refresh_seconds_ = 0;
  get_map_objects_max_refresh_seconds_ = 0;
  get_map_objects_min_distance_meters_ = 0;
  google_maps_api_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MapSettings::~MapSettings() {
  // @@protoc_insertion_point(destructor:POGOProtos.Settings.MapSettings)
  SharedDtor();
}

void MapSettings::SharedDtor() {
  google_maps_api_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MapSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapSettings::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapSettings_descriptor_;
}

const MapSettings& MapSettings::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
  return *default_instance_;
}

MapSettings* MapSettings::default_instance_ = NULL;

MapSettings* MapSettings::New(::google::protobuf::Arena* arena) const {
  MapSettings* n = new MapSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Settings.MapSettings)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MapSettings, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MapSettings*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(pokemon_visible_range_, get_map_objects_max_refresh_seconds_);
  get_map_objects_min_distance_meters_ = 0;
  google_maps_api_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MapSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Settings.MapSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double pokemon_visible_range = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pokemon_visible_range_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_poke_nav_range_meters;
        break;
      }

      // optional double poke_nav_range_meters = 2;
      case 2: {
        if (tag == 17) {
         parse_poke_nav_range_meters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &poke_nav_range_meters_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_encounter_range_meters;
        break;
      }

      // optional double encounter_range_meters = 3;
      case 3: {
        if (tag == 25) {
         parse_encounter_range_meters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &encounter_range_meters_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_get_map_objects_min_refresh_seconds;
        break;
      }

      // optional float get_map_objects_min_refresh_seconds = 4;
      case 4: {
        if (tag == 37) {
         parse_get_map_objects_min_refresh_seconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &get_map_objects_min_refresh_seconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(45)) goto parse_get_map_objects_max_refresh_seconds;
        break;
      }

      // optional float get_map_objects_max_refresh_seconds = 5;
      case 5: {
        if (tag == 45) {
         parse_get_map_objects_max_refresh_seconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &get_map_objects_max_refresh_seconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(53)) goto parse_get_map_objects_min_distance_meters;
        break;
      }

      // optional float get_map_objects_min_distance_meters = 6;
      case 6: {
        if (tag == 53) {
         parse_get_map_objects_min_distance_meters:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &get_map_objects_min_distance_meters_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_google_maps_api_key;
        break;
      }

      // optional string google_maps_api_key = 7;
      case 7: {
        if (tag == 58) {
         parse_google_maps_api_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_google_maps_api_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->google_maps_api_key().data(), this->google_maps_api_key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Settings.MapSettings.google_maps_api_key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Settings.MapSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Settings.MapSettings)
  return false;
#undef DO_
}

void MapSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Settings.MapSettings)
  // optional double pokemon_visible_range = 1;
  if (this->pokemon_visible_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->pokemon_visible_range(), output);
  }

  // optional double poke_nav_range_meters = 2;
  if (this->poke_nav_range_meters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->poke_nav_range_meters(), output);
  }

  // optional double encounter_range_meters = 3;
  if (this->encounter_range_meters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->encounter_range_meters(), output);
  }

  // optional float get_map_objects_min_refresh_seconds = 4;
  if (this->get_map_objects_min_refresh_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->get_map_objects_min_refresh_seconds(), output);
  }

  // optional float get_map_objects_max_refresh_seconds = 5;
  if (this->get_map_objects_max_refresh_seconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->get_map_objects_max_refresh_seconds(), output);
  }

  // optional float get_map_objects_min_distance_meters = 6;
  if (this->get_map_objects_min_distance_meters() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->get_map_objects_min_distance_meters(), output);
  }

  // optional string google_maps_api_key = 7;
  if (this->google_maps_api_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->google_maps_api_key().data(), this->google_maps_api_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.MapSettings.google_maps_api_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->google_maps_api_key(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Settings.MapSettings)
}

::google::protobuf::uint8* MapSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Settings.MapSettings)
  // optional double pokemon_visible_range = 1;
  if (this->pokemon_visible_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->pokemon_visible_range(), target);
  }

  // optional double poke_nav_range_meters = 2;
  if (this->poke_nav_range_meters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->poke_nav_range_meters(), target);
  }

  // optional double encounter_range_meters = 3;
  if (this->encounter_range_meters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->encounter_range_meters(), target);
  }

  // optional float get_map_objects_min_refresh_seconds = 4;
  if (this->get_map_objects_min_refresh_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->get_map_objects_min_refresh_seconds(), target);
  }

  // optional float get_map_objects_max_refresh_seconds = 5;
  if (this->get_map_objects_max_refresh_seconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->get_map_objects_max_refresh_seconds(), target);
  }

  // optional float get_map_objects_min_distance_meters = 6;
  if (this->get_map_objects_min_distance_meters() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->get_map_objects_min_distance_meters(), target);
  }

  // optional string google_maps_api_key = 7;
  if (this->google_maps_api_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->google_maps_api_key().data(), this->google_maps_api_key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Settings.MapSettings.google_maps_api_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->google_maps_api_key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Settings.MapSettings)
  return target;
}

int MapSettings::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Settings.MapSettings)
  int total_size = 0;

  // optional double pokemon_visible_range = 1;
  if (this->pokemon_visible_range() != 0) {
    total_size += 1 + 8;
  }

  // optional double poke_nav_range_meters = 2;
  if (this->poke_nav_range_meters() != 0) {
    total_size += 1 + 8;
  }

  // optional double encounter_range_meters = 3;
  if (this->encounter_range_meters() != 0) {
    total_size += 1 + 8;
  }

  // optional float get_map_objects_min_refresh_seconds = 4;
  if (this->get_map_objects_min_refresh_seconds() != 0) {
    total_size += 1 + 4;
  }

  // optional float get_map_objects_max_refresh_seconds = 5;
  if (this->get_map_objects_max_refresh_seconds() != 0) {
    total_size += 1 + 4;
  }

  // optional float get_map_objects_min_distance_meters = 6;
  if (this->get_map_objects_min_distance_meters() != 0) {
    total_size += 1 + 4;
  }

  // optional string google_maps_api_key = 7;
  if (this->google_maps_api_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->google_maps_api_key());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Settings.MapSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapSettings* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Settings.MapSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Settings.MapSettings)
    MergeFrom(*source);
  }
}

void MapSettings::MergeFrom(const MapSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Settings.MapSettings)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.pokemon_visible_range() != 0) {
    set_pokemon_visible_range(from.pokemon_visible_range());
  }
  if (from.poke_nav_range_meters() != 0) {
    set_poke_nav_range_meters(from.poke_nav_range_meters());
  }
  if (from.encounter_range_meters() != 0) {
    set_encounter_range_meters(from.encounter_range_meters());
  }
  if (from.get_map_objects_min_refresh_seconds() != 0) {
    set_get_map_objects_min_refresh_seconds(from.get_map_objects_min_refresh_seconds());
  }
  if (from.get_map_objects_max_refresh_seconds() != 0) {
    set_get_map_objects_max_refresh_seconds(from.get_map_objects_max_refresh_seconds());
  }
  if (from.get_map_objects_min_distance_meters() != 0) {
    set_get_map_objects_min_distance_meters(from.get_map_objects_min_distance_meters());
  }
  if (from.google_maps_api_key().size() > 0) {

    google_maps_api_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.google_maps_api_key_);
  }
}

void MapSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Settings.MapSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapSettings::CopyFrom(const MapSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Settings.MapSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapSettings::IsInitialized() const {

  return true;
}

void MapSettings::Swap(MapSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapSettings::InternalSwap(MapSettings* other) {
  std::swap(pokemon_visible_range_, other->pokemon_visible_range_);
  std::swap(poke_nav_range_meters_, other->poke_nav_range_meters_);
  std::swap(encounter_range_meters_, other->encounter_range_meters_);
  std::swap(get_map_objects_min_refresh_seconds_, other->get_map_objects_min_refresh_seconds_);
  std::swap(get_map_objects_max_refresh_seconds_, other->get_map_objects_max_refresh_seconds_);
  std::swap(get_map_objects_min_distance_meters_, other->get_map_objects_min_distance_meters_);
  google_maps_api_key_.Swap(&other->google_maps_api_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapSettings::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapSettings_descriptor_;
  metadata.reflection = MapSettings_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapSettings

// optional double pokemon_visible_range = 1;
void MapSettings::clear_pokemon_visible_range() {
  pokemon_visible_range_ = 0;
}
 double MapSettings::pokemon_visible_range() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.pokemon_visible_range)
  return pokemon_visible_range_;
}
 void MapSettings::set_pokemon_visible_range(double value) {
  
  pokemon_visible_range_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.pokemon_visible_range)
}

// optional double poke_nav_range_meters = 2;
void MapSettings::clear_poke_nav_range_meters() {
  poke_nav_range_meters_ = 0;
}
 double MapSettings::poke_nav_range_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.poke_nav_range_meters)
  return poke_nav_range_meters_;
}
 void MapSettings::set_poke_nav_range_meters(double value) {
  
  poke_nav_range_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.poke_nav_range_meters)
}

// optional double encounter_range_meters = 3;
void MapSettings::clear_encounter_range_meters() {
  encounter_range_meters_ = 0;
}
 double MapSettings::encounter_range_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.encounter_range_meters)
  return encounter_range_meters_;
}
 void MapSettings::set_encounter_range_meters(double value) {
  
  encounter_range_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.encounter_range_meters)
}

// optional float get_map_objects_min_refresh_seconds = 4;
void MapSettings::clear_get_map_objects_min_refresh_seconds() {
  get_map_objects_min_refresh_seconds_ = 0;
}
 float MapSettings::get_map_objects_min_refresh_seconds() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_min_refresh_seconds)
  return get_map_objects_min_refresh_seconds_;
}
 void MapSettings::set_get_map_objects_min_refresh_seconds(float value) {
  
  get_map_objects_min_refresh_seconds_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_min_refresh_seconds)
}

// optional float get_map_objects_max_refresh_seconds = 5;
void MapSettings::clear_get_map_objects_max_refresh_seconds() {
  get_map_objects_max_refresh_seconds_ = 0;
}
 float MapSettings::get_map_objects_max_refresh_seconds() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_max_refresh_seconds)
  return get_map_objects_max_refresh_seconds_;
}
 void MapSettings::set_get_map_objects_max_refresh_seconds(float value) {
  
  get_map_objects_max_refresh_seconds_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_max_refresh_seconds)
}

// optional float get_map_objects_min_distance_meters = 6;
void MapSettings::clear_get_map_objects_min_distance_meters() {
  get_map_objects_min_distance_meters_ = 0;
}
 float MapSettings::get_map_objects_min_distance_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_min_distance_meters)
  return get_map_objects_min_distance_meters_;
}
 void MapSettings::set_get_map_objects_min_distance_meters(float value) {
  
  get_map_objects_min_distance_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_min_distance_meters)
}

// optional string google_maps_api_key = 7;
void MapSettings::clear_google_maps_api_key() {
  google_maps_api_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& MapSettings::google_maps_api_key() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.google_maps_api_key)
  return google_maps_api_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapSettings::set_google_maps_api_key(const ::std::string& value) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
 void MapSettings::set_google_maps_api_key(const char* value) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
 void MapSettings::set_google_maps_api_key(const char* value, size_t size) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
 ::std::string* MapSettings::mutable_google_maps_api_key() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.MapSettings.google_maps_api_key)
  return google_maps_api_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MapSettings::release_google_maps_api_key() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.MapSettings.google_maps_api_key)
  
  return google_maps_api_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MapSettings::set_allocated_google_maps_api_key(::std::string* google_maps_api_key) {
  if (google_maps_api_key != NULL) {
    
  } else {
    
  }
  google_maps_api_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), google_maps_api_key);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.MapSettings.google_maps_api_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
