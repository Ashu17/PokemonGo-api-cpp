// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/MapSettings.proto

#ifndef PROTOBUF_POGOProtos_2fSettings_2fMapSettings_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fSettings_2fMapSettings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Settings {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
void protobuf_AssignDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMapSettings_2eproto();

class MapSettings;

// ===================================================================

class MapSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Settings.MapSettings) */ {
 public:
  MapSettings();
  virtual ~MapSettings();

  MapSettings(const MapSettings& from);

  inline MapSettings& operator=(const MapSettings& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapSettings& default_instance();

  void Swap(MapSettings* other);

  // implements Message ----------------------------------------------

  inline MapSettings* New() const { return New(NULL); }

  MapSettings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MapSettings& from);
  void MergeFrom(const MapSettings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MapSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double pokemon_visible_range = 1;
  void clear_pokemon_visible_range();
  static const int kPokemonVisibleRangeFieldNumber = 1;
  double pokemon_visible_range() const;
  void set_pokemon_visible_range(double value);

  // optional double poke_nav_range_meters = 2;
  void clear_poke_nav_range_meters();
  static const int kPokeNavRangeMetersFieldNumber = 2;
  double poke_nav_range_meters() const;
  void set_poke_nav_range_meters(double value);

  // optional double encounter_range_meters = 3;
  void clear_encounter_range_meters();
  static const int kEncounterRangeMetersFieldNumber = 3;
  double encounter_range_meters() const;
  void set_encounter_range_meters(double value);

  // optional float get_map_objects_min_refresh_seconds = 4;
  void clear_get_map_objects_min_refresh_seconds();
  static const int kGetMapObjectsMinRefreshSecondsFieldNumber = 4;
  float get_map_objects_min_refresh_seconds() const;
  void set_get_map_objects_min_refresh_seconds(float value);

  // optional float get_map_objects_max_refresh_seconds = 5;
  void clear_get_map_objects_max_refresh_seconds();
  static const int kGetMapObjectsMaxRefreshSecondsFieldNumber = 5;
  float get_map_objects_max_refresh_seconds() const;
  void set_get_map_objects_max_refresh_seconds(float value);

  // optional float get_map_objects_min_distance_meters = 6;
  void clear_get_map_objects_min_distance_meters();
  static const int kGetMapObjectsMinDistanceMetersFieldNumber = 6;
  float get_map_objects_min_distance_meters() const;
  void set_get_map_objects_min_distance_meters(float value);

  // optional string google_maps_api_key = 7;
  void clear_google_maps_api_key();
  static const int kGoogleMapsApiKeyFieldNumber = 7;
  const ::std::string& google_maps_api_key() const;
  void set_google_maps_api_key(const ::std::string& value);
  void set_google_maps_api_key(const char* value);
  void set_google_maps_api_key(const char* value, size_t size);
  ::std::string* mutable_google_maps_api_key();
  ::std::string* release_google_maps_api_key();
  void set_allocated_google_maps_api_key(::std::string* google_maps_api_key);

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.MapSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double pokemon_visible_range_;
  double poke_nav_range_meters_;
  double encounter_range_meters_;
  float get_map_objects_min_refresh_seconds_;
  float get_map_objects_max_refresh_seconds_;
  ::google::protobuf::internal::ArenaStringPtr google_maps_api_key_;
  float get_map_objects_min_distance_meters_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fSettings_2fMapSettings_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fSettings_2fMapSettings_2eproto();

  void InitAsDefaultInstance();
  static MapSettings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MapSettings

// optional double pokemon_visible_range = 1;
inline void MapSettings::clear_pokemon_visible_range() {
  pokemon_visible_range_ = 0;
}
inline double MapSettings::pokemon_visible_range() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.pokemon_visible_range)
  return pokemon_visible_range_;
}
inline void MapSettings::set_pokemon_visible_range(double value) {
  
  pokemon_visible_range_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.pokemon_visible_range)
}

// optional double poke_nav_range_meters = 2;
inline void MapSettings::clear_poke_nav_range_meters() {
  poke_nav_range_meters_ = 0;
}
inline double MapSettings::poke_nav_range_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.poke_nav_range_meters)
  return poke_nav_range_meters_;
}
inline void MapSettings::set_poke_nav_range_meters(double value) {
  
  poke_nav_range_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.poke_nav_range_meters)
}

// optional double encounter_range_meters = 3;
inline void MapSettings::clear_encounter_range_meters() {
  encounter_range_meters_ = 0;
}
inline double MapSettings::encounter_range_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.encounter_range_meters)
  return encounter_range_meters_;
}
inline void MapSettings::set_encounter_range_meters(double value) {
  
  encounter_range_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.encounter_range_meters)
}

// optional float get_map_objects_min_refresh_seconds = 4;
inline void MapSettings::clear_get_map_objects_min_refresh_seconds() {
  get_map_objects_min_refresh_seconds_ = 0;
}
inline float MapSettings::get_map_objects_min_refresh_seconds() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_min_refresh_seconds)
  return get_map_objects_min_refresh_seconds_;
}
inline void MapSettings::set_get_map_objects_min_refresh_seconds(float value) {
  
  get_map_objects_min_refresh_seconds_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_min_refresh_seconds)
}

// optional float get_map_objects_max_refresh_seconds = 5;
inline void MapSettings::clear_get_map_objects_max_refresh_seconds() {
  get_map_objects_max_refresh_seconds_ = 0;
}
inline float MapSettings::get_map_objects_max_refresh_seconds() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_max_refresh_seconds)
  return get_map_objects_max_refresh_seconds_;
}
inline void MapSettings::set_get_map_objects_max_refresh_seconds(float value) {
  
  get_map_objects_max_refresh_seconds_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_max_refresh_seconds)
}

// optional float get_map_objects_min_distance_meters = 6;
inline void MapSettings::clear_get_map_objects_min_distance_meters() {
  get_map_objects_min_distance_meters_ = 0;
}
inline float MapSettings::get_map_objects_min_distance_meters() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.get_map_objects_min_distance_meters)
  return get_map_objects_min_distance_meters_;
}
inline void MapSettings::set_get_map_objects_min_distance_meters(float value) {
  
  get_map_objects_min_distance_meters_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.get_map_objects_min_distance_meters)
}

// optional string google_maps_api_key = 7;
inline void MapSettings::clear_google_maps_api_key() {
  google_maps_api_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapSettings::google_maps_api_key() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Settings.MapSettings.google_maps_api_key)
  return google_maps_api_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapSettings::set_google_maps_api_key(const ::std::string& value) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
inline void MapSettings::set_google_maps_api_key(const char* value) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
inline void MapSettings::set_google_maps_api_key(const char* value, size_t size) {
  
  google_maps_api_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Settings.MapSettings.google_maps_api_key)
}
inline ::std::string* MapSettings::mutable_google_maps_api_key() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Settings.MapSettings.google_maps_api_key)
  return google_maps_api_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapSettings::release_google_maps_api_key() {
  // @@protoc_insertion_point(field_release:POGOProtos.Settings.MapSettings.google_maps_api_key)
  
  return google_maps_api_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapSettings::set_allocated_google_maps_api_key(::std::string* google_maps_api_key) {
  if (google_maps_api_key != NULL) {
    
  } else {
    
  }
  google_maps_api_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), google_maps_api_key);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Settings.MapSettings.google_maps_api_key)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Settings
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fSettings_2fMapSettings_2eproto__INCLUDED
