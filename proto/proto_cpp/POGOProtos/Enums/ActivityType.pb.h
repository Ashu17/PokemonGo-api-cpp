// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Enums/ActivityType.proto

#ifndef PROTOBUF_POGOProtos_2fEnums_2fActivityType_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fEnums_2fActivityType_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Enums {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fEnums_2fActivityType_2eproto();
void protobuf_AssignDesc_POGOProtos_2fEnums_2fActivityType_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fEnums_2fActivityType_2eproto();


enum ActivityType {
  ACTIVITY_UNKNOWN = 0,
  ACTIVITY_CATCH_POKEMON = 1,
  ACTIVITY_CATCH_LEGEND_POKEMON = 2,
  ACTIVITY_FLEE_POKEMON = 3,
  ACTIVITY_DEFEAT_FORT = 4,
  ACTIVITY_EVOLVE_POKEMON = 5,
  ACTIVITY_HATCH_EGG = 6,
  ACTIVITY_WALK_KM = 7,
  ACTIVITY_POKEDEX_ENTRY_NEW = 8,
  ACTIVITY_CATCH_FIRST_THROW = 9,
  ACTIVITY_CATCH_NICE_THROW = 10,
  ACTIVITY_CATCH_GREAT_THROW = 11,
  ACTIVITY_CATCH_EXCELLENT_THROW = 12,
  ACTIVITY_CATCH_CURVEBALL = 13,
  ACTIVITY_CATCH_FIRST_CATCH_OF_DAY = 14,
  ACTIVITY_CATCH_MILESTONE = 15,
  ACTIVITY_TRAIN_POKEMON = 16,
  ACTIVITY_SEARCH_FORT = 17,
  ACTIVITY_RELEASE_POKEMON = 18,
  ACTIVITY_HATCH_EGG_SMALL_BONUS = 19,
  ACTIVITY_HATCH_EGG_MEDIUM_BONUS = 20,
  ACTIVITY_HATCH_EGG_LARGE_BONUS = 21,
  ACTIVITY_DEFEAT_GYM_DEFENDER = 22,
  ACTIVITY_DEFEAT_GYM_LEADER = 23,
  ActivityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActivityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActivityType_IsValid(int value);
const ActivityType ActivityType_MIN = ACTIVITY_UNKNOWN;
const ActivityType ActivityType_MAX = ACTIVITY_DEFEAT_GYM_LEADER;
const int ActivityType_ARRAYSIZE = ActivityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActivityType_descriptor();
inline const ::std::string& ActivityType_Name(ActivityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActivityType_descriptor(), value);
}
inline bool ActivityType_Parse(
    const ::std::string& name, ActivityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActivityType>(
    ActivityType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Enums
}  // namespace POGOProtos

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::POGOProtos::Enums::ActivityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::POGOProtos::Enums::ActivityType>() {
  return ::POGOProtos::Enums::ActivityType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fEnums_2fActivityType_2eproto__INCLUDED
