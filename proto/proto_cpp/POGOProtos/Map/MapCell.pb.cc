// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Map/MapCell.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Map/MapCell.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Map {

namespace {

const ::google::protobuf::Descriptor* MapCell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MapCell_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fMap_2fMapCell_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fMap_2fMapCell_2eproto() {
  protobuf_AddDesc_POGOProtos_2fMap_2fMapCell_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Map/MapCell.proto");
  GOOGLE_CHECK(file != NULL);
  MapCell_descriptor_ = file->message_type(0);
  static const int MapCell_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, s2_cell_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, current_timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, forts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, spawn_points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, deleted_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, is_truncated_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, fort_summaries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, decimated_spawn_points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, wild_pokemons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, catchable_pokemons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, nearby_pokemons_),
  };
  MapCell_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MapCell_descriptor_,
      MapCell::default_instance_,
      MapCell_offsets_,
      -1,
      -1,
      -1,
      sizeof(MapCell),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapCell, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fMap_2fMapCell_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MapCell_descriptor_, &MapCell::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fMap_2fMapCell_2eproto() {
  delete MapCell::default_instance_;
  delete MapCell_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fMap_2fMapCell_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fMap_2fMapCell_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Map::protobuf_AddDesc_POGOProtos_2fMap_2fSpawnPoint_2eproto();
  ::POGOProtos::Map::Fort::protobuf_AddDesc_POGOProtos_2fMap_2fFort_2fFortData_2eproto();
  ::POGOProtos::Map::Fort::protobuf_AddDesc_POGOProtos_2fMap_2fFort_2fFortSummary_2eproto();
  ::POGOProtos::Map::Pokemon::protobuf_AddDesc_POGOProtos_2fMap_2fPokemon_2fNearbyPokemon_2eproto();
  ::POGOProtos::Map::Pokemon::protobuf_AddDesc_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();
  ::POGOProtos::Map::Pokemon::protobuf_AddDesc_POGOProtos_2fMap_2fPokemon_2fMapPokemon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034POGOProtos/Map/MapCell.proto\022\016POGOProt"
    "os.Map\032\037POGOProtos/Map/SpawnPoint.proto\032"
    "\"POGOProtos/Map/Fort/FortData.proto\032%POG"
    "OProtos/Map/Fort/FortSummary.proto\032*POGO"
    "Protos/Map/Pokemon/NearbyPokemon.proto\032("
    "POGOProtos/Map/Pokemon/WildPokemon.proto"
    "\032\'POGOProtos/Map/Pokemon/MapPokemon.prot"
    "o\"\201\004\n\007MapCell\022\022\n\ns2_cell_id\030\001 \001(\004\022\034\n\024cur"
    "rent_timestamp_ms\030\002 \001(\003\022,\n\005forts\030\003 \003(\0132\035"
    ".POGOProtos.Map.Fort.FortData\0220\n\014spawn_p"
    "oints\030\004 \003(\0132\032.POGOProtos.Map.SpawnPoint\022"
    "\027\n\017deleted_objects\030\006 \003(\t\022\031\n\021is_truncated"
    "_list\030\007 \001(\010\0228\n\016fort_summaries\030\010 \003(\0132 .PO"
    "GOProtos.Map.Fort.FortSummary\022:\n\026decimat"
    "ed_spawn_points\030\t \003(\0132\032.POGOProtos.Map.S"
    "pawnPoint\022:\n\rwild_pokemons\030\005 \003(\0132#.POGOP"
    "rotos.Map.Pokemon.WildPokemon\022>\n\022catchab"
    "le_pokemons\030\n \003(\0132\".POGOProtos.Map.Pokem"
    "on.MapPokemon\022>\n\017nearby_pokemons\030\013 \003(\0132%"
    ".POGOProtos.Map.Pokemon.NearbyPokemonb\006p"
    "roto3", 805);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Map/MapCell.proto", &protobuf_RegisterTypes);
  MapCell::default_instance_ = new MapCell();
  MapCell::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fMap_2fMapCell_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fMap_2fMapCell_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fMap_2fMapCell_2eproto() {
    protobuf_AddDesc_POGOProtos_2fMap_2fMapCell_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fMap_2fMapCell_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapCell::kS2CellIdFieldNumber;
const int MapCell::kCurrentTimestampMsFieldNumber;
const int MapCell::kFortsFieldNumber;
const int MapCell::kSpawnPointsFieldNumber;
const int MapCell::kDeletedObjectsFieldNumber;
const int MapCell::kIsTruncatedListFieldNumber;
const int MapCell::kFortSummariesFieldNumber;
const int MapCell::kDecimatedSpawnPointsFieldNumber;
const int MapCell::kWildPokemonsFieldNumber;
const int MapCell::kCatchablePokemonsFieldNumber;
const int MapCell::kNearbyPokemonsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapCell::MapCell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Map.MapCell)
}

void MapCell::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

MapCell::MapCell(const MapCell& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Map.MapCell)
}

void MapCell::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  s2_cell_id_ = GOOGLE_ULONGLONG(0);
  current_timestamp_ms_ = GOOGLE_LONGLONG(0);
  is_truncated_list_ = false;
}

MapCell::~MapCell() {
  // @@protoc_insertion_point(destructor:POGOProtos.Map.MapCell)
  SharedDtor();
}

void MapCell::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MapCell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapCell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MapCell_descriptor_;
}

const MapCell& MapCell::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fMap_2fMapCell_2eproto();
  return *default_instance_;
}

MapCell* MapCell::default_instance_ = NULL;

MapCell* MapCell::New(::google::protobuf::Arena* arena) const {
  MapCell* n = new MapCell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapCell::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Map.MapCell)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MapCell, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MapCell*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(s2_cell_id_, current_timestamp_ms_);
  is_truncated_list_ = false;

#undef ZR_HELPER_
#undef ZR_

  forts_.Clear();
  spawn_points_.Clear();
  deleted_objects_.Clear();
  fort_summaries_.Clear();
  decimated_spawn_points_.Clear();
  wild_pokemons_.Clear();
  catchable_pokemons_.Clear();
  nearby_pokemons_.Clear();
}

bool MapCell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Map.MapCell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 s2_cell_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &s2_cell_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_current_timestamp_ms;
        break;
      }

      // optional int64 current_timestamp_ms = 2;
      case 2: {
        if (tag == 16) {
         parse_current_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &current_timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_forts;
        break;
      }

      // repeated .POGOProtos.Map.Fort.FortData forts = 3;
      case 3: {
        if (tag == 26) {
         parse_forts:
          DO_(input->IncrementRecursionDepth());
         parse_loop_forts:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_forts()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_forts;
        if (input->ExpectTag(34)) goto parse_loop_spawn_points;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Map.SpawnPoint spawn_points = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_spawn_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_spawn_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_spawn_points;
        if (input->ExpectTag(42)) goto parse_loop_wild_pokemons;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Map.Pokemon.WildPokemon wild_pokemons = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_wild_pokemons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_wild_pokemons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_wild_pokemons;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_deleted_objects;
        break;
      }

      // repeated string deleted_objects = 6;
      case 6: {
        if (tag == 50) {
         parse_deleted_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_deleted_objects()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deleted_objects(this->deleted_objects_size() - 1).data(),
            this->deleted_objects(this->deleted_objects_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Map.MapCell.deleted_objects"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_deleted_objects;
        if (input->ExpectTag(56)) goto parse_is_truncated_list;
        break;
      }

      // optional bool is_truncated_list = 7;
      case 7: {
        if (tag == 56) {
         parse_is_truncated_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_truncated_list_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_fort_summaries;
        break;
      }

      // repeated .POGOProtos.Map.Fort.FortSummary fort_summaries = 8;
      case 8: {
        if (tag == 66) {
         parse_fort_summaries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_fort_summaries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_fort_summaries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_fort_summaries;
        if (input->ExpectTag(74)) goto parse_loop_decimated_spawn_points;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Map.SpawnPoint decimated_spawn_points = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_decimated_spawn_points:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_decimated_spawn_points()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_decimated_spawn_points;
        if (input->ExpectTag(82)) goto parse_loop_catchable_pokemons;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Map.Pokemon.MapPokemon catchable_pokemons = 10;
      case 10: {
        if (tag == 82) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_catchable_pokemons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_catchable_pokemons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_catchable_pokemons;
        if (input->ExpectTag(90)) goto parse_loop_nearby_pokemons;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .POGOProtos.Map.Pokemon.NearbyPokemon nearby_pokemons = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_nearby_pokemons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nearby_pokemons()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_nearby_pokemons;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Map.MapCell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Map.MapCell)
  return false;
#undef DO_
}

void MapCell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Map.MapCell)
  // optional uint64 s2_cell_id = 1;
  if (this->s2_cell_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->s2_cell_id(), output);
  }

  // optional int64 current_timestamp_ms = 2;
  if (this->current_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->current_timestamp_ms(), output);
  }

  // repeated .POGOProtos.Map.Fort.FortData forts = 3;
  for (unsigned int i = 0, n = this->forts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->forts(i), output);
  }

  // repeated .POGOProtos.Map.SpawnPoint spawn_points = 4;
  for (unsigned int i = 0, n = this->spawn_points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->spawn_points(i), output);
  }

  // repeated .POGOProtos.Map.Pokemon.WildPokemon wild_pokemons = 5;
  for (unsigned int i = 0, n = this->wild_pokemons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->wild_pokemons(i), output);
  }

  // repeated string deleted_objects = 6;
  for (int i = 0; i < this->deleted_objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deleted_objects(i).data(), this->deleted_objects(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Map.MapCell.deleted_objects");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->deleted_objects(i), output);
  }

  // optional bool is_truncated_list = 7;
  if (this->is_truncated_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_truncated_list(), output);
  }

  // repeated .POGOProtos.Map.Fort.FortSummary fort_summaries = 8;
  for (unsigned int i = 0, n = this->fort_summaries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->fort_summaries(i), output);
  }

  // repeated .POGOProtos.Map.SpawnPoint decimated_spawn_points = 9;
  for (unsigned int i = 0, n = this->decimated_spawn_points_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->decimated_spawn_points(i), output);
  }

  // repeated .POGOProtos.Map.Pokemon.MapPokemon catchable_pokemons = 10;
  for (unsigned int i = 0, n = this->catchable_pokemons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->catchable_pokemons(i), output);
  }

  // repeated .POGOProtos.Map.Pokemon.NearbyPokemon nearby_pokemons = 11;
  for (unsigned int i = 0, n = this->nearby_pokemons_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->nearby_pokemons(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Map.MapCell)
}

::google::protobuf::uint8* MapCell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Map.MapCell)
  // optional uint64 s2_cell_id = 1;
  if (this->s2_cell_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->s2_cell_id(), target);
  }

  // optional int64 current_timestamp_ms = 2;
  if (this->current_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->current_timestamp_ms(), target);
  }

  // repeated .POGOProtos.Map.Fort.FortData forts = 3;
  for (unsigned int i = 0, n = this->forts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->forts(i), false, target);
  }

  // repeated .POGOProtos.Map.SpawnPoint spawn_points = 4;
  for (unsigned int i = 0, n = this->spawn_points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->spawn_points(i), false, target);
  }

  // repeated .POGOProtos.Map.Pokemon.WildPokemon wild_pokemons = 5;
  for (unsigned int i = 0, n = this->wild_pokemons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->wild_pokemons(i), false, target);
  }

  // repeated string deleted_objects = 6;
  for (int i = 0; i < this->deleted_objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deleted_objects(i).data(), this->deleted_objects(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Map.MapCell.deleted_objects");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->deleted_objects(i), target);
  }

  // optional bool is_truncated_list = 7;
  if (this->is_truncated_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_truncated_list(), target);
  }

  // repeated .POGOProtos.Map.Fort.FortSummary fort_summaries = 8;
  for (unsigned int i = 0, n = this->fort_summaries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->fort_summaries(i), false, target);
  }

  // repeated .POGOProtos.Map.SpawnPoint decimated_spawn_points = 9;
  for (unsigned int i = 0, n = this->decimated_spawn_points_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->decimated_spawn_points(i), false, target);
  }

  // repeated .POGOProtos.Map.Pokemon.MapPokemon catchable_pokemons = 10;
  for (unsigned int i = 0, n = this->catchable_pokemons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->catchable_pokemons(i), false, target);
  }

  // repeated .POGOProtos.Map.Pokemon.NearbyPokemon nearby_pokemons = 11;
  for (unsigned int i = 0, n = this->nearby_pokemons_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->nearby_pokemons(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Map.MapCell)
  return target;
}

int MapCell::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Map.MapCell)
  int total_size = 0;

  // optional uint64 s2_cell_id = 1;
  if (this->s2_cell_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->s2_cell_id());
  }

  // optional int64 current_timestamp_ms = 2;
  if (this->current_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->current_timestamp_ms());
  }

  // optional bool is_truncated_list = 7;
  if (this->is_truncated_list() != 0) {
    total_size += 1 + 1;
  }

  // repeated .POGOProtos.Map.Fort.FortData forts = 3;
  total_size += 1 * this->forts_size();
  for (int i = 0; i < this->forts_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forts(i));
  }

  // repeated .POGOProtos.Map.SpawnPoint spawn_points = 4;
  total_size += 1 * this->spawn_points_size();
  for (int i = 0; i < this->spawn_points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->spawn_points(i));
  }

  // repeated string deleted_objects = 6;
  total_size += 1 * this->deleted_objects_size();
  for (int i = 0; i < this->deleted_objects_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->deleted_objects(i));
  }

  // repeated .POGOProtos.Map.Fort.FortSummary fort_summaries = 8;
  total_size += 1 * this->fort_summaries_size();
  for (int i = 0; i < this->fort_summaries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fort_summaries(i));
  }

  // repeated .POGOProtos.Map.SpawnPoint decimated_spawn_points = 9;
  total_size += 1 * this->decimated_spawn_points_size();
  for (int i = 0; i < this->decimated_spawn_points_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->decimated_spawn_points(i));
  }

  // repeated .POGOProtos.Map.Pokemon.WildPokemon wild_pokemons = 5;
  total_size += 1 * this->wild_pokemons_size();
  for (int i = 0; i < this->wild_pokemons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wild_pokemons(i));
  }

  // repeated .POGOProtos.Map.Pokemon.MapPokemon catchable_pokemons = 10;
  total_size += 1 * this->catchable_pokemons_size();
  for (int i = 0; i < this->catchable_pokemons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->catchable_pokemons(i));
  }

  // repeated .POGOProtos.Map.Pokemon.NearbyPokemon nearby_pokemons = 11;
  total_size += 1 * this->nearby_pokemons_size();
  for (int i = 0; i < this->nearby_pokemons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nearby_pokemons(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapCell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Map.MapCell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MapCell* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MapCell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Map.MapCell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Map.MapCell)
    MergeFrom(*source);
  }
}

void MapCell::MergeFrom(const MapCell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Map.MapCell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  forts_.MergeFrom(from.forts_);
  spawn_points_.MergeFrom(from.spawn_points_);
  deleted_objects_.MergeFrom(from.deleted_objects_);
  fort_summaries_.MergeFrom(from.fort_summaries_);
  decimated_spawn_points_.MergeFrom(from.decimated_spawn_points_);
  wild_pokemons_.MergeFrom(from.wild_pokemons_);
  catchable_pokemons_.MergeFrom(from.catchable_pokemons_);
  nearby_pokemons_.MergeFrom(from.nearby_pokemons_);
  if (from.s2_cell_id() != 0) {
    set_s2_cell_id(from.s2_cell_id());
  }
  if (from.current_timestamp_ms() != 0) {
    set_current_timestamp_ms(from.current_timestamp_ms());
  }
  if (from.is_truncated_list() != 0) {
    set_is_truncated_list(from.is_truncated_list());
  }
}

void MapCell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Map.MapCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapCell::CopyFrom(const MapCell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Map.MapCell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapCell::IsInitialized() const {

  return true;
}

void MapCell::Swap(MapCell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapCell::InternalSwap(MapCell* other) {
  std::swap(s2_cell_id_, other->s2_cell_id_);
  std::swap(current_timestamp_ms_, other->current_timestamp_ms_);
  forts_.UnsafeArenaSwap(&other->forts_);
  spawn_points_.UnsafeArenaSwap(&other->spawn_points_);
  deleted_objects_.UnsafeArenaSwap(&other->deleted_objects_);
  std::swap(is_truncated_list_, other->is_truncated_list_);
  fort_summaries_.UnsafeArenaSwap(&other->fort_summaries_);
  decimated_spawn_points_.UnsafeArenaSwap(&other->decimated_spawn_points_);
  wild_pokemons_.UnsafeArenaSwap(&other->wild_pokemons_);
  catchable_pokemons_.UnsafeArenaSwap(&other->catchable_pokemons_);
  nearby_pokemons_.UnsafeArenaSwap(&other->nearby_pokemons_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapCell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MapCell_descriptor_;
  metadata.reflection = MapCell_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapCell

// optional uint64 s2_cell_id = 1;
void MapCell::clear_s2_cell_id() {
  s2_cell_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 MapCell::s2_cell_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.s2_cell_id)
  return s2_cell_id_;
}
 void MapCell::set_s2_cell_id(::google::protobuf::uint64 value) {
  
  s2_cell_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.MapCell.s2_cell_id)
}

// optional int64 current_timestamp_ms = 2;
void MapCell::clear_current_timestamp_ms() {
  current_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 MapCell::current_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.current_timestamp_ms)
  return current_timestamp_ms_;
}
 void MapCell::set_current_timestamp_ms(::google::protobuf::int64 value) {
  
  current_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.MapCell.current_timestamp_ms)
}

// repeated .POGOProtos.Map.Fort.FortData forts = 3;
int MapCell::forts_size() const {
  return forts_.size();
}
void MapCell::clear_forts() {
  forts_.Clear();
}
const ::POGOProtos::Map::Fort::FortData& MapCell::forts(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.forts)
  return forts_.Get(index);
}
::POGOProtos::Map::Fort::FortData* MapCell::mutable_forts(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.forts)
  return forts_.Mutable(index);
}
::POGOProtos::Map::Fort::FortData* MapCell::add_forts() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.forts)
  return forts_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortData >*
MapCell::mutable_forts() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.forts)
  return &forts_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortData >&
MapCell::forts() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.forts)
  return forts_;
}

// repeated .POGOProtos.Map.SpawnPoint spawn_points = 4;
int MapCell::spawn_points_size() const {
  return spawn_points_.size();
}
void MapCell::clear_spawn_points() {
  spawn_points_.Clear();
}
const ::POGOProtos::Map::SpawnPoint& MapCell::spawn_points(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.spawn_points)
  return spawn_points_.Get(index);
}
::POGOProtos::Map::SpawnPoint* MapCell::mutable_spawn_points(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.spawn_points)
  return spawn_points_.Mutable(index);
}
::POGOProtos::Map::SpawnPoint* MapCell::add_spawn_points() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.spawn_points)
  return spawn_points_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::SpawnPoint >*
MapCell::mutable_spawn_points() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.spawn_points)
  return &spawn_points_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::SpawnPoint >&
MapCell::spawn_points() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.spawn_points)
  return spawn_points_;
}

// repeated string deleted_objects = 6;
int MapCell::deleted_objects_size() const {
  return deleted_objects_.size();
}
void MapCell::clear_deleted_objects() {
  deleted_objects_.Clear();
}
 const ::std::string& MapCell::deleted_objects(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.deleted_objects)
  return deleted_objects_.Get(index);
}
 ::std::string* MapCell::mutable_deleted_objects(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.deleted_objects)
  return deleted_objects_.Mutable(index);
}
 void MapCell::set_deleted_objects(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:POGOProtos.Map.MapCell.deleted_objects)
  deleted_objects_.Mutable(index)->assign(value);
}
 void MapCell::set_deleted_objects(int index, const char* value) {
  deleted_objects_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:POGOProtos.Map.MapCell.deleted_objects)
}
 void MapCell::set_deleted_objects(int index, const char* value, size_t size) {
  deleted_objects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Map.MapCell.deleted_objects)
}
 ::std::string* MapCell::add_deleted_objects() {
  // @@protoc_insertion_point(field_add_mutable:POGOProtos.Map.MapCell.deleted_objects)
  return deleted_objects_.Add();
}
 void MapCell::add_deleted_objects(const ::std::string& value) {
  deleted_objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.deleted_objects)
}
 void MapCell::add_deleted_objects(const char* value) {
  deleted_objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:POGOProtos.Map.MapCell.deleted_objects)
}
 void MapCell::add_deleted_objects(const char* value, size_t size) {
  deleted_objects_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:POGOProtos.Map.MapCell.deleted_objects)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
MapCell::deleted_objects() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.deleted_objects)
  return deleted_objects_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
MapCell::mutable_deleted_objects() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.deleted_objects)
  return &deleted_objects_;
}

// optional bool is_truncated_list = 7;
void MapCell::clear_is_truncated_list() {
  is_truncated_list_ = false;
}
 bool MapCell::is_truncated_list() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.is_truncated_list)
  return is_truncated_list_;
}
 void MapCell::set_is_truncated_list(bool value) {
  
  is_truncated_list_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.MapCell.is_truncated_list)
}

// repeated .POGOProtos.Map.Fort.FortSummary fort_summaries = 8;
int MapCell::fort_summaries_size() const {
  return fort_summaries_.size();
}
void MapCell::clear_fort_summaries() {
  fort_summaries_.Clear();
}
const ::POGOProtos::Map::Fort::FortSummary& MapCell::fort_summaries(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.fort_summaries)
  return fort_summaries_.Get(index);
}
::POGOProtos::Map::Fort::FortSummary* MapCell::mutable_fort_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.fort_summaries)
  return fort_summaries_.Mutable(index);
}
::POGOProtos::Map::Fort::FortSummary* MapCell::add_fort_summaries() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.fort_summaries)
  return fort_summaries_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortSummary >*
MapCell::mutable_fort_summaries() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.fort_summaries)
  return &fort_summaries_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortSummary >&
MapCell::fort_summaries() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.fort_summaries)
  return fort_summaries_;
}

// repeated .POGOProtos.Map.SpawnPoint decimated_spawn_points = 9;
int MapCell::decimated_spawn_points_size() const {
  return decimated_spawn_points_.size();
}
void MapCell::clear_decimated_spawn_points() {
  decimated_spawn_points_.Clear();
}
const ::POGOProtos::Map::SpawnPoint& MapCell::decimated_spawn_points(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.decimated_spawn_points)
  return decimated_spawn_points_.Get(index);
}
::POGOProtos::Map::SpawnPoint* MapCell::mutable_decimated_spawn_points(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.decimated_spawn_points)
  return decimated_spawn_points_.Mutable(index);
}
::POGOProtos::Map::SpawnPoint* MapCell::add_decimated_spawn_points() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.decimated_spawn_points)
  return decimated_spawn_points_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::SpawnPoint >*
MapCell::mutable_decimated_spawn_points() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.decimated_spawn_points)
  return &decimated_spawn_points_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::SpawnPoint >&
MapCell::decimated_spawn_points() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.decimated_spawn_points)
  return decimated_spawn_points_;
}

// repeated .POGOProtos.Map.Pokemon.WildPokemon wild_pokemons = 5;
int MapCell::wild_pokemons_size() const {
  return wild_pokemons_.size();
}
void MapCell::clear_wild_pokemons() {
  wild_pokemons_.Clear();
}
const ::POGOProtos::Map::Pokemon::WildPokemon& MapCell::wild_pokemons(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.wild_pokemons)
  return wild_pokemons_.Get(index);
}
::POGOProtos::Map::Pokemon::WildPokemon* MapCell::mutable_wild_pokemons(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.wild_pokemons)
  return wild_pokemons_.Mutable(index);
}
::POGOProtos::Map::Pokemon::WildPokemon* MapCell::add_wild_pokemons() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.wild_pokemons)
  return wild_pokemons_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::WildPokemon >*
MapCell::mutable_wild_pokemons() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.wild_pokemons)
  return &wild_pokemons_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::WildPokemon >&
MapCell::wild_pokemons() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.wild_pokemons)
  return wild_pokemons_;
}

// repeated .POGOProtos.Map.Pokemon.MapPokemon catchable_pokemons = 10;
int MapCell::catchable_pokemons_size() const {
  return catchable_pokemons_.size();
}
void MapCell::clear_catchable_pokemons() {
  catchable_pokemons_.Clear();
}
const ::POGOProtos::Map::Pokemon::MapPokemon& MapCell::catchable_pokemons(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.catchable_pokemons)
  return catchable_pokemons_.Get(index);
}
::POGOProtos::Map::Pokemon::MapPokemon* MapCell::mutable_catchable_pokemons(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.catchable_pokemons)
  return catchable_pokemons_.Mutable(index);
}
::POGOProtos::Map::Pokemon::MapPokemon* MapCell::add_catchable_pokemons() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.catchable_pokemons)
  return catchable_pokemons_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::MapPokemon >*
MapCell::mutable_catchable_pokemons() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.catchable_pokemons)
  return &catchable_pokemons_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::MapPokemon >&
MapCell::catchable_pokemons() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.catchable_pokemons)
  return catchable_pokemons_;
}

// repeated .POGOProtos.Map.Pokemon.NearbyPokemon nearby_pokemons = 11;
int MapCell::nearby_pokemons_size() const {
  return nearby_pokemons_.size();
}
void MapCell::clear_nearby_pokemons() {
  nearby_pokemons_.Clear();
}
const ::POGOProtos::Map::Pokemon::NearbyPokemon& MapCell::nearby_pokemons(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.MapCell.nearby_pokemons)
  return nearby_pokemons_.Get(index);
}
::POGOProtos::Map::Pokemon::NearbyPokemon* MapCell::mutable_nearby_pokemons(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.MapCell.nearby_pokemons)
  return nearby_pokemons_.Mutable(index);
}
::POGOProtos::Map::Pokemon::NearbyPokemon* MapCell::add_nearby_pokemons() {
  // @@protoc_insertion_point(field_add:POGOProtos.Map.MapCell.nearby_pokemons)
  return nearby_pokemons_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::NearbyPokemon >*
MapCell::mutable_nearby_pokemons() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Map.MapCell.nearby_pokemons)
  return &nearby_pokemons_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Pokemon::NearbyPokemon >&
MapCell::nearby_pokemons() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Map.MapCell.nearby_pokemons)
  return nearby_pokemons_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Map
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
