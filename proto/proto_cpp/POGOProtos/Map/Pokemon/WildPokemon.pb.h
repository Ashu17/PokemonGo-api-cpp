// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Map/Pokemon/WildPokemon.proto

#ifndef PROTOBUF_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Data/PokemonData.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Map {
namespace Pokemon {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();
void protobuf_AssignDesc_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();

class WildPokemon;

// ===================================================================

class WildPokemon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Map.Pokemon.WildPokemon) */ {
 public:
  WildPokemon();
  virtual ~WildPokemon();

  WildPokemon(const WildPokemon& from);

  inline WildPokemon& operator=(const WildPokemon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WildPokemon& default_instance();

  void Swap(WildPokemon* other);

  // implements Message ----------------------------------------------

  inline WildPokemon* New() const { return New(NULL); }

  WildPokemon* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WildPokemon& from);
  void MergeFrom(const WildPokemon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WildPokemon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 encounter_id = 1;
  void clear_encounter_id();
  static const int kEncounterIdFieldNumber = 1;
  ::google::protobuf::uint64 encounter_id() const;
  void set_encounter_id(::google::protobuf::uint64 value);

  // optional int64 last_modified_timestamp_ms = 2;
  void clear_last_modified_timestamp_ms();
  static const int kLastModifiedTimestampMsFieldNumber = 2;
  ::google::protobuf::int64 last_modified_timestamp_ms() const;
  void set_last_modified_timestamp_ms(::google::protobuf::int64 value);

  // optional double latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // optional double longitude = 4;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // optional string spawn_point_id = 5;
  void clear_spawn_point_id();
  static const int kSpawnPointIdFieldNumber = 5;
  const ::std::string& spawn_point_id() const;
  void set_spawn_point_id(const ::std::string& value);
  void set_spawn_point_id(const char* value);
  void set_spawn_point_id(const char* value, size_t size);
  ::std::string* mutable_spawn_point_id();
  ::std::string* release_spawn_point_id();
  void set_allocated_spawn_point_id(::std::string* spawn_point_id);

  // optional .POGOProtos.Data.PokemonData pokemon_data = 7;
  bool has_pokemon_data() const;
  void clear_pokemon_data();
  static const int kPokemonDataFieldNumber = 7;
  const ::POGOProtos::Data::PokemonData& pokemon_data() const;
  ::POGOProtos::Data::PokemonData* mutable_pokemon_data();
  ::POGOProtos::Data::PokemonData* release_pokemon_data();
  void set_allocated_pokemon_data(::POGOProtos::Data::PokemonData* pokemon_data);

  // optional int32 time_till_hidden_ms = 11;
  void clear_time_till_hidden_ms();
  static const int kTimeTillHiddenMsFieldNumber = 11;
  ::google::protobuf::int32 time_till_hidden_ms() const;
  void set_time_till_hidden_ms(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Map.Pokemon.WildPokemon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 encounter_id_;
  ::google::protobuf::int64 last_modified_timestamp_ms_;
  double latitude_;
  double longitude_;
  ::google::protobuf::internal::ArenaStringPtr spawn_point_id_;
  ::POGOProtos::Data::PokemonData* pokemon_data_;
  ::google::protobuf::int32 time_till_hidden_ms_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto();

  void InitAsDefaultInstance();
  static WildPokemon* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WildPokemon

// optional fixed64 encounter_id = 1;
inline void WildPokemon::clear_encounter_id() {
  encounter_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 WildPokemon::encounter_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.encounter_id)
  return encounter_id_;
}
inline void WildPokemon::set_encounter_id(::google::protobuf::uint64 value) {
  
  encounter_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.encounter_id)
}

// optional int64 last_modified_timestamp_ms = 2;
inline void WildPokemon::clear_last_modified_timestamp_ms() {
  last_modified_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 WildPokemon::last_modified_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.last_modified_timestamp_ms)
  return last_modified_timestamp_ms_;
}
inline void WildPokemon::set_last_modified_timestamp_ms(::google::protobuf::int64 value) {
  
  last_modified_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.last_modified_timestamp_ms)
}

// optional double latitude = 3;
inline void WildPokemon::clear_latitude() {
  latitude_ = 0;
}
inline double WildPokemon::latitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.latitude)
  return latitude_;
}
inline void WildPokemon::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.latitude)
}

// optional double longitude = 4;
inline void WildPokemon::clear_longitude() {
  longitude_ = 0;
}
inline double WildPokemon::longitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.longitude)
  return longitude_;
}
inline void WildPokemon::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.longitude)
}

// optional string spawn_point_id = 5;
inline void WildPokemon::clear_spawn_point_id() {
  spawn_point_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WildPokemon::spawn_point_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
  return spawn_point_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WildPokemon::set_spawn_point_id(const ::std::string& value) {
  
  spawn_point_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
}
inline void WildPokemon::set_spawn_point_id(const char* value) {
  
  spawn_point_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
}
inline void WildPokemon::set_spawn_point_id(const char* value, size_t size) {
  
  spawn_point_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
}
inline ::std::string* WildPokemon::mutable_spawn_point_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
  return spawn_point_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WildPokemon::release_spawn_point_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
  
  return spawn_point_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WildPokemon::set_allocated_spawn_point_id(::std::string* spawn_point_id) {
  if (spawn_point_id != NULL) {
    
  } else {
    
  }
  spawn_point_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spawn_point_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Map.Pokemon.WildPokemon.spawn_point_id)
}

// optional .POGOProtos.Data.PokemonData pokemon_data = 7;
inline bool WildPokemon::has_pokemon_data() const {
  return !_is_default_instance_ && pokemon_data_ != NULL;
}
inline void WildPokemon::clear_pokemon_data() {
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
}
inline const ::POGOProtos::Data::PokemonData& WildPokemon::pokemon_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.pokemon_data)
  return pokemon_data_ != NULL ? *pokemon_data_ : *default_instance_->pokemon_data_;
}
inline ::POGOProtos::Data::PokemonData* WildPokemon::mutable_pokemon_data() {
  
  if (pokemon_data_ == NULL) {
    pokemon_data_ = new ::POGOProtos::Data::PokemonData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Map.Pokemon.WildPokemon.pokemon_data)
  return pokemon_data_;
}
inline ::POGOProtos::Data::PokemonData* WildPokemon::release_pokemon_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Map.Pokemon.WildPokemon.pokemon_data)
  
  ::POGOProtos::Data::PokemonData* temp = pokemon_data_;
  pokemon_data_ = NULL;
  return temp;
}
inline void WildPokemon::set_allocated_pokemon_data(::POGOProtos::Data::PokemonData* pokemon_data) {
  delete pokemon_data_;
  pokemon_data_ = pokemon_data;
  if (pokemon_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Map.Pokemon.WildPokemon.pokemon_data)
}

// optional int32 time_till_hidden_ms = 11;
inline void WildPokemon::clear_time_till_hidden_ms() {
  time_till_hidden_ms_ = 0;
}
inline ::google::protobuf::int32 WildPokemon::time_till_hidden_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Map.Pokemon.WildPokemon.time_till_hidden_ms)
  return time_till_hidden_ms_;
}
inline void WildPokemon::set_time_till_hidden_ms(::google::protobuf::int32 value) {
  
  time_till_hidden_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Map.Pokemon.WildPokemon.time_till_hidden_ms)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Pokemon
}  // namespace Map
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fMap_2fPokemon_2fWildPokemon_2eproto__INCLUDED
