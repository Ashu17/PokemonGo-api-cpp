// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/EncounterTutorialCompleteResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/EncounterTutorialCompleteResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* EncounterTutorialCompleteResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EncounterTutorialCompleteResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EncounterTutorialCompleteResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/EncounterTutorialCompleteResponse.proto");
  GOOGLE_CHECK(file != NULL);
  EncounterTutorialCompleteResponse_descriptor_ = file->message_type(0);
  static const int EncounterTutorialCompleteResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterTutorialCompleteResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterTutorialCompleteResponse, pokemon_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterTutorialCompleteResponse, capture_award_),
  };
  EncounterTutorialCompleteResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EncounterTutorialCompleteResponse_descriptor_,
      EncounterTutorialCompleteResponse::default_instance_,
      EncounterTutorialCompleteResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EncounterTutorialCompleteResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterTutorialCompleteResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncounterTutorialCompleteResponse, _is_default_instance_));
  EncounterTutorialCompleteResponse_Result_descriptor_ = EncounterTutorialCompleteResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EncounterTutorialCompleteResponse_descriptor_, &EncounterTutorialCompleteResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() {
  delete EncounterTutorialCompleteResponse::default_instance_;
  delete EncounterTutorialCompleteResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPokemonData_2eproto();
  ::POGOProtos::Data::Capture::protobuf_AddDesc_POGOProtos_2fData_2fCapture_2fCaptureAward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nGPOGOProtos/Networking/Responses/Encoun"
    "terTutorialCompleteResponse.proto\022\037POGOP"
    "rotos.Networking.Responses\032!POGOProtos/D"
    "ata/PokemonData.proto\032*POGOProtos/Data/C"
    "apture/CaptureAward.proto\"\255\002\n!EncounterT"
    "utorialCompleteResponse\022Y\n\006result\030\001 \001(\0162"
    "I.POGOProtos.Networking.Responses.Encoun"
    "terTutorialCompleteResponse.Result\0222\n\014po"
    "kemon_data\030\002 \001(\0132\034.POGOProtos.Data.Pokem"
    "onData\022<\n\rcapture_award\030\003 \001(\0132%.POGOProt"
    "os.Data.Capture.CaptureAward\";\n\006Result\022\t"
    "\n\005UNSET\020\000\022\013\n\007SUCCESS\020\001\022\031\n\025ERROR_INVALID_"
    "POKEMON\020\002b\006proto3", 497);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/EncounterTutorialCompleteResponse.proto", &protobuf_RegisterTypes);
  EncounterTutorialCompleteResponse::default_instance_ = new EncounterTutorialCompleteResponse();
  EncounterTutorialCompleteResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* EncounterTutorialCompleteResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncounterTutorialCompleteResponse_Result_descriptor_;
}
bool EncounterTutorialCompleteResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::UNSET;
const EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::SUCCESS;
const EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::ERROR_INVALID_POKEMON;
const EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::Result_MIN;
const EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::Result_MAX;
const int EncounterTutorialCompleteResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncounterTutorialCompleteResponse::kResultFieldNumber;
const int EncounterTutorialCompleteResponse::kPokemonDataFieldNumber;
const int EncounterTutorialCompleteResponse::kCaptureAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncounterTutorialCompleteResponse::EncounterTutorialCompleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
}

void EncounterTutorialCompleteResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pokemon_data_ = const_cast< ::POGOProtos::Data::PokemonData*>(&::POGOProtos::Data::PokemonData::default_instance());
  capture_award_ = const_cast< ::POGOProtos::Data::Capture::CaptureAward*>(&::POGOProtos::Data::Capture::CaptureAward::default_instance());
}

EncounterTutorialCompleteResponse::EncounterTutorialCompleteResponse(const EncounterTutorialCompleteResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
}

void EncounterTutorialCompleteResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  pokemon_data_ = NULL;
  capture_award_ = NULL;
}

EncounterTutorialCompleteResponse::~EncounterTutorialCompleteResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  SharedDtor();
}

void EncounterTutorialCompleteResponse::SharedDtor() {
  if (this != default_instance_) {
    delete pokemon_data_;
    delete capture_award_;
  }
}

void EncounterTutorialCompleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncounterTutorialCompleteResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EncounterTutorialCompleteResponse_descriptor_;
}

const EncounterTutorialCompleteResponse& EncounterTutorialCompleteResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fEncounterTutorialCompleteResponse_2eproto();
  return *default_instance_;
}

EncounterTutorialCompleteResponse* EncounterTutorialCompleteResponse::default_instance_ = NULL;

EncounterTutorialCompleteResponse* EncounterTutorialCompleteResponse::New(::google::protobuf::Arena* arena) const {
  EncounterTutorialCompleteResponse* n = new EncounterTutorialCompleteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncounterTutorialCompleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  result_ = 0;
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && capture_award_ != NULL) delete capture_award_;
  capture_award_ = NULL;
}

bool EncounterTutorialCompleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::EncounterTutorialCompleteResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pokemon_data;
        break;
      }

      // optional .POGOProtos.Data.PokemonData pokemon_data = 2;
      case 2: {
        if (tag == 18) {
         parse_pokemon_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pokemon_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_capture_award;
        break;
      }

      // optional .POGOProtos.Data.Capture.CaptureAward capture_award = 3;
      case 3: {
        if (tag == 26) {
         parse_capture_award:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_capture_award()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  return false;
#undef DO_
}

void EncounterTutorialCompleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  // optional .POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 2;
  if (this->has_pokemon_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pokemon_data_, output);
  }

  // optional .POGOProtos.Data.Capture.CaptureAward capture_award = 3;
  if (this->has_capture_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->capture_award_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
}

::google::protobuf::uint8* EncounterTutorialCompleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  // optional .POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 2;
  if (this->has_pokemon_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pokemon_data_, false, target);
  }

  // optional .POGOProtos.Data.Capture.CaptureAward capture_award = 3;
  if (this->has_capture_award()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->capture_award_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  return target;
}

int EncounterTutorialCompleteResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 2;
  if (this->has_pokemon_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pokemon_data_);
  }

  // optional .POGOProtos.Data.Capture.CaptureAward capture_award = 3;
  if (this->has_capture_award()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->capture_award_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncounterTutorialCompleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EncounterTutorialCompleteResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EncounterTutorialCompleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
    MergeFrom(*source);
  }
}

void EncounterTutorialCompleteResponse::MergeFrom(const EncounterTutorialCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_pokemon_data()) {
    mutable_pokemon_data()->::POGOProtos::Data::PokemonData::MergeFrom(from.pokemon_data());
  }
  if (from.has_capture_award()) {
    mutable_capture_award()->::POGOProtos::Data::Capture::CaptureAward::MergeFrom(from.capture_award());
  }
}

void EncounterTutorialCompleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncounterTutorialCompleteResponse::CopyFrom(const EncounterTutorialCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncounterTutorialCompleteResponse::IsInitialized() const {

  return true;
}

void EncounterTutorialCompleteResponse::Swap(EncounterTutorialCompleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncounterTutorialCompleteResponse::InternalSwap(EncounterTutorialCompleteResponse* other) {
  std::swap(result_, other->result_);
  std::swap(pokemon_data_, other->pokemon_data_);
  std::swap(capture_award_, other->capture_award_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncounterTutorialCompleteResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EncounterTutorialCompleteResponse_descriptor_;
  metadata.reflection = EncounterTutorialCompleteResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncounterTutorialCompleteResponse

// optional .POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.Result result = 1;
void EncounterTutorialCompleteResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::EncounterTutorialCompleteResponse_Result EncounterTutorialCompleteResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::EncounterTutorialCompleteResponse_Result >(result_);
}
 void EncounterTutorialCompleteResponse::set_result(::POGOProtos::Networking::Responses::EncounterTutorialCompleteResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.result)
}

// optional .POGOProtos.Data.PokemonData pokemon_data = 2;
bool EncounterTutorialCompleteResponse::has_pokemon_data() const {
  return !_is_default_instance_ && pokemon_data_ != NULL;
}
void EncounterTutorialCompleteResponse::clear_pokemon_data() {
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
}
const ::POGOProtos::Data::PokemonData& EncounterTutorialCompleteResponse::pokemon_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.pokemon_data)
  return pokemon_data_ != NULL ? *pokemon_data_ : *default_instance_->pokemon_data_;
}
::POGOProtos::Data::PokemonData* EncounterTutorialCompleteResponse::mutable_pokemon_data() {
  
  if (pokemon_data_ == NULL) {
    pokemon_data_ = new ::POGOProtos::Data::PokemonData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.pokemon_data)
  return pokemon_data_;
}
::POGOProtos::Data::PokemonData* EncounterTutorialCompleteResponse::release_pokemon_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.pokemon_data)
  
  ::POGOProtos::Data::PokemonData* temp = pokemon_data_;
  pokemon_data_ = NULL;
  return temp;
}
void EncounterTutorialCompleteResponse::set_allocated_pokemon_data(::POGOProtos::Data::PokemonData* pokemon_data) {
  delete pokemon_data_;
  pokemon_data_ = pokemon_data;
  if (pokemon_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.pokemon_data)
}

// optional .POGOProtos.Data.Capture.CaptureAward capture_award = 3;
bool EncounterTutorialCompleteResponse::has_capture_award() const {
  return !_is_default_instance_ && capture_award_ != NULL;
}
void EncounterTutorialCompleteResponse::clear_capture_award() {
  if (GetArenaNoVirtual() == NULL && capture_award_ != NULL) delete capture_award_;
  capture_award_ = NULL;
}
const ::POGOProtos::Data::Capture::CaptureAward& EncounterTutorialCompleteResponse::capture_award() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.capture_award)
  return capture_award_ != NULL ? *capture_award_ : *default_instance_->capture_award_;
}
::POGOProtos::Data::Capture::CaptureAward* EncounterTutorialCompleteResponse::mutable_capture_award() {
  
  if (capture_award_ == NULL) {
    capture_award_ = new ::POGOProtos::Data::Capture::CaptureAward;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.capture_award)
  return capture_award_;
}
::POGOProtos::Data::Capture::CaptureAward* EncounterTutorialCompleteResponse::release_capture_award() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.capture_award)
  
  ::POGOProtos::Data::Capture::CaptureAward* temp = capture_award_;
  capture_award_ = NULL;
  return temp;
}
void EncounterTutorialCompleteResponse::set_allocated_capture_award(::POGOProtos::Data::Capture::CaptureAward* capture_award) {
  delete capture_award_;
  capture_award_ = capture_award;
  if (capture_award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.EncounterTutorialCompleteResponse.capture_award)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
