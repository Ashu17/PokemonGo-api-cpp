// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/SfidaActionLogResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/SfidaActionLogResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* SfidaActionLogResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SfidaActionLogResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SfidaActionLogResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/SfidaActionLogResponse.proto");
  GOOGLE_CHECK(file != NULL);
  SfidaActionLogResponse_descriptor_ = file->message_type(0);
  static const int SfidaActionLogResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SfidaActionLogResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SfidaActionLogResponse, log_entries_),
  };
  SfidaActionLogResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SfidaActionLogResponse_descriptor_,
      SfidaActionLogResponse::default_instance_,
      SfidaActionLogResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SfidaActionLogResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SfidaActionLogResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SfidaActionLogResponse, _is_default_instance_));
  SfidaActionLogResponse_Result_descriptor_ = SfidaActionLogResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SfidaActionLogResponse_descriptor_, &SfidaActionLogResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() {
  delete SfidaActionLogResponse::default_instance_;
  delete SfidaActionLogResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::Logs::protobuf_AddDesc_POGOProtos_2fData_2fLogs_2fActionLogEntry_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n<POGOProtos/Networking/Responses/SfidaA"
    "ctionLogResponse.proto\022\037POGOProtos.Netwo"
    "rking.Responses\032)POGOProtos/Data/Logs/Ac"
    "tionLogEntry.proto\"\305\001\n\026SfidaActionLogRes"
    "ponse\022N\n\006result\030\001 \001(\0162>.POGOProtos.Netwo"
    "rking.Responses.SfidaActionLogResponse.R"
    "esult\0229\n\013log_entries\030\002 \003(\0132$.POGOProtos."
    "Data.Logs.ActionLogEntry\" \n\006Result\022\t\n\005UN"
    "SET\020\000\022\013\n\007SUCCESS\020\001b\006proto3", 346);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/SfidaActionLogResponse.proto", &protobuf_RegisterTypes);
  SfidaActionLogResponse::default_instance_ = new SfidaActionLogResponse();
  SfidaActionLogResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* SfidaActionLogResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SfidaActionLogResponse_Result_descriptor_;
}
bool SfidaActionLogResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SfidaActionLogResponse_Result SfidaActionLogResponse::UNSET;
const SfidaActionLogResponse_Result SfidaActionLogResponse::SUCCESS;
const SfidaActionLogResponse_Result SfidaActionLogResponse::Result_MIN;
const SfidaActionLogResponse_Result SfidaActionLogResponse::Result_MAX;
const int SfidaActionLogResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SfidaActionLogResponse::kResultFieldNumber;
const int SfidaActionLogResponse::kLogEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SfidaActionLogResponse::SfidaActionLogResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.SfidaActionLogResponse)
}

void SfidaActionLogResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SfidaActionLogResponse::SfidaActionLogResponse(const SfidaActionLogResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.SfidaActionLogResponse)
}

void SfidaActionLogResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
}

SfidaActionLogResponse::~SfidaActionLogResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  SharedDtor();
}

void SfidaActionLogResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SfidaActionLogResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SfidaActionLogResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SfidaActionLogResponse_descriptor_;
}

const SfidaActionLogResponse& SfidaActionLogResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSfidaActionLogResponse_2eproto();
  return *default_instance_;
}

SfidaActionLogResponse* SfidaActionLogResponse::default_instance_ = NULL;

SfidaActionLogResponse* SfidaActionLogResponse::New(::google::protobuf::Arena* arena) const {
  SfidaActionLogResponse* n = new SfidaActionLogResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SfidaActionLogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  result_ = 0;
  log_entries_.Clear();
}

bool SfidaActionLogResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.SfidaActionLogResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::SfidaActionLogResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_log_entries;
        break;
      }

      // repeated .POGOProtos.Data.Logs.ActionLogEntry log_entries = 2;
      case 2: {
        if (tag == 18) {
         parse_log_entries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_log_entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_log_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_log_entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  return false;
#undef DO_
}

void SfidaActionLogResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  // optional .POGOProtos.Networking.Responses.SfidaActionLogResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .POGOProtos.Data.Logs.ActionLogEntry log_entries = 2;
  for (unsigned int i = 0, n = this->log_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->log_entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.SfidaActionLogResponse)
}

::google::protobuf::uint8* SfidaActionLogResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  // optional .POGOProtos.Networking.Responses.SfidaActionLogResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .POGOProtos.Data.Logs.ActionLogEntry log_entries = 2;
  for (unsigned int i = 0, n = this->log_entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->log_entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  return target;
}

int SfidaActionLogResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.SfidaActionLogResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // repeated .POGOProtos.Data.Logs.ActionLogEntry log_entries = 2;
  total_size += 1 * this->log_entries_size();
  for (int i = 0; i < this->log_entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->log_entries(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SfidaActionLogResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SfidaActionLogResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SfidaActionLogResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.SfidaActionLogResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.SfidaActionLogResponse)
    MergeFrom(*source);
  }
}

void SfidaActionLogResponse::MergeFrom(const SfidaActionLogResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  log_entries_.MergeFrom(from.log_entries_);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void SfidaActionLogResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SfidaActionLogResponse::CopyFrom(const SfidaActionLogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.SfidaActionLogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SfidaActionLogResponse::IsInitialized() const {

  return true;
}

void SfidaActionLogResponse::Swap(SfidaActionLogResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SfidaActionLogResponse::InternalSwap(SfidaActionLogResponse* other) {
  std::swap(result_, other->result_);
  log_entries_.UnsafeArenaSwap(&other->log_entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SfidaActionLogResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SfidaActionLogResponse_descriptor_;
  metadata.reflection = SfidaActionLogResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SfidaActionLogResponse

// optional .POGOProtos.Networking.Responses.SfidaActionLogResponse.Result result = 1;
void SfidaActionLogResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::SfidaActionLogResponse_Result SfidaActionLogResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.SfidaActionLogResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::SfidaActionLogResponse_Result >(result_);
}
 void SfidaActionLogResponse::set_result(::POGOProtos::Networking::Responses::SfidaActionLogResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.SfidaActionLogResponse.result)
}

// repeated .POGOProtos.Data.Logs.ActionLogEntry log_entries = 2;
int SfidaActionLogResponse::log_entries_size() const {
  return log_entries_.size();
}
void SfidaActionLogResponse::clear_log_entries() {
  log_entries_.Clear();
}
const ::POGOProtos::Data::Logs::ActionLogEntry& SfidaActionLogResponse::log_entries(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.SfidaActionLogResponse.log_entries)
  return log_entries_.Get(index);
}
::POGOProtos::Data::Logs::ActionLogEntry* SfidaActionLogResponse::mutable_log_entries(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.SfidaActionLogResponse.log_entries)
  return log_entries_.Mutable(index);
}
::POGOProtos::Data::Logs::ActionLogEntry* SfidaActionLogResponse::add_log_entries() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Responses.SfidaActionLogResponse.log_entries)
  return log_entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Logs::ActionLogEntry >*
SfidaActionLogResponse::mutable_log_entries() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Responses.SfidaActionLogResponse.log_entries)
  return &log_entries_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::Logs::ActionLogEntry >&
SfidaActionLogResponse::log_entries() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Responses.SfidaActionLogResponse.log_entries)
  return log_entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
