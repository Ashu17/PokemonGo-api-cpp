// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/FortSearchResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/FortSearchResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* FortSearchResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FortSearchResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FortSearchResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/FortSearchResponse.proto");
  GOOGLE_CHECK(file != NULL);
  FortSearchResponse_descriptor_ = file->message_type(0);
  static const int FortSearchResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, items_awarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, gems_awarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, pokemon_data_egg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, experience_awarded_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, cooldown_complete_timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, chain_hack_sequence_number_),
  };
  FortSearchResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FortSearchResponse_descriptor_,
      FortSearchResponse::default_instance_,
      FortSearchResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(FortSearchResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortSearchResponse, _is_default_instance_));
  FortSearchResponse_Result_descriptor_ = FortSearchResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FortSearchResponse_descriptor_, &FortSearchResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() {
  delete FortSearchResponse::default_instance_;
  delete FortSearchResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPokemonData_2eproto();
  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemAward_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n8POGOProtos/Networking/Responses/FortSe"
    "archResponse.proto\022\037POGOProtos.Networkin"
    "g.Responses\032!POGOProtos/Data/PokemonData"
    ".proto\032)POGOProtos/Inventory/Item/ItemAw"
    "ard.proto\"\273\003\n\022FortSearchResponse\022J\n\006resu"
    "lt\030\001 \001(\0162:.POGOProtos.Networking.Respons"
    "es.FortSearchResponse.Result\022;\n\ritems_aw"
    "arded\030\002 \003(\0132$.POGOProtos.Inventory.Item."
    "ItemAward\022\024\n\014gems_awarded\030\003 \001(\005\0226\n\020pokem"
    "on_data_egg\030\004 \001(\0132\034.POGOProtos.Data.Poke"
    "monData\022\032\n\022experience_awarded\030\005 \001(\005\022&\n\036c"
    "ooldown_complete_timestamp_ms\030\006 \001(\003\022\"\n\032c"
    "hain_hack_sequence_number\030\007 \001(\005\"f\n\006Resul"
    "t\022\021\n\rNO_RESULT_SET\020\000\022\013\n\007SUCCESS\020\001\022\020\n\014OUT"
    "_OF_RANGE\020\002\022\026\n\022IN_COOLDOWN_PERIOD\020\003\022\022\n\016I"
    "NVENTORY_FULL\020\004b\006proto3", 623);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/FortSearchResponse.proto", &protobuf_RegisterTypes);
  FortSearchResponse::default_instance_ = new FortSearchResponse();
  FortSearchResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* FortSearchResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortSearchResponse_Result_descriptor_;
}
bool FortSearchResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FortSearchResponse_Result FortSearchResponse::NO_RESULT_SET;
const FortSearchResponse_Result FortSearchResponse::SUCCESS;
const FortSearchResponse_Result FortSearchResponse::OUT_OF_RANGE;
const FortSearchResponse_Result FortSearchResponse::IN_COOLDOWN_PERIOD;
const FortSearchResponse_Result FortSearchResponse::INVENTORY_FULL;
const FortSearchResponse_Result FortSearchResponse::Result_MIN;
const FortSearchResponse_Result FortSearchResponse::Result_MAX;
const int FortSearchResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FortSearchResponse::kResultFieldNumber;
const int FortSearchResponse::kItemsAwardedFieldNumber;
const int FortSearchResponse::kGemsAwardedFieldNumber;
const int FortSearchResponse::kPokemonDataEggFieldNumber;
const int FortSearchResponse::kExperienceAwardedFieldNumber;
const int FortSearchResponse::kCooldownCompleteTimestampMsFieldNumber;
const int FortSearchResponse::kChainHackSequenceNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FortSearchResponse::FortSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.FortSearchResponse)
}

void FortSearchResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pokemon_data_egg_ = const_cast< ::POGOProtos::Data::PokemonData*>(&::POGOProtos::Data::PokemonData::default_instance());
}

FortSearchResponse::FortSearchResponse(const FortSearchResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.FortSearchResponse)
}

void FortSearchResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  gems_awarded_ = 0;
  pokemon_data_egg_ = NULL;
  experience_awarded_ = 0;
  cooldown_complete_timestamp_ms_ = GOOGLE_LONGLONG(0);
  chain_hack_sequence_number_ = 0;
}

FortSearchResponse::~FortSearchResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.FortSearchResponse)
  SharedDtor();
}

void FortSearchResponse::SharedDtor() {
  if (this != default_instance_) {
    delete pokemon_data_egg_;
  }
}

void FortSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FortSearchResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortSearchResponse_descriptor_;
}

const FortSearchResponse& FortSearchResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortSearchResponse_2eproto();
  return *default_instance_;
}

FortSearchResponse* FortSearchResponse::default_instance_ = NULL;

FortSearchResponse* FortSearchResponse::New(::google::protobuf::Arena* arena) const {
  FortSearchResponse* n = new FortSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FortSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.FortSearchResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FortSearchResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FortSearchResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, gems_awarded_);
  ZR_(cooldown_complete_timestamp_ms_, chain_hack_sequence_number_);
  if (GetArenaNoVirtual() == NULL && pokemon_data_egg_ != NULL) delete pokemon_data_egg_;
  pokemon_data_egg_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  items_awarded_.Clear();
}

bool FortSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.FortSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.FortSearchResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::FortSearchResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_items_awarded;
        break;
      }

      // repeated .POGOProtos.Inventory.Item.ItemAward items_awarded = 2;
      case 2: {
        if (tag == 18) {
         parse_items_awarded:
          DO_(input->IncrementRecursionDepth());
         parse_loop_items_awarded:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items_awarded()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_items_awarded;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_gems_awarded;
        break;
      }

      // optional int32 gems_awarded = 3;
      case 3: {
        if (tag == 24) {
         parse_gems_awarded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gems_awarded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pokemon_data_egg;
        break;
      }

      // optional .POGOProtos.Data.PokemonData pokemon_data_egg = 4;
      case 4: {
        if (tag == 34) {
         parse_pokemon_data_egg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pokemon_data_egg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_experience_awarded;
        break;
      }

      // optional int32 experience_awarded = 5;
      case 5: {
        if (tag == 40) {
         parse_experience_awarded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &experience_awarded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_cooldown_complete_timestamp_ms;
        break;
      }

      // optional int64 cooldown_complete_timestamp_ms = 6;
      case 6: {
        if (tag == 48) {
         parse_cooldown_complete_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &cooldown_complete_timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_chain_hack_sequence_number;
        break;
      }

      // optional int32 chain_hack_sequence_number = 7;
      case 7: {
        if (tag == 56) {
         parse_chain_hack_sequence_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &chain_hack_sequence_number_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.FortSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.FortSearchResponse)
  return false;
#undef DO_
}

void FortSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.FortSearchResponse)
  // optional .POGOProtos.Networking.Responses.FortSearchResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .POGOProtos.Inventory.Item.ItemAward items_awarded = 2;
  for (unsigned int i = 0, n = this->items_awarded_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items_awarded(i), output);
  }

  // optional int32 gems_awarded = 3;
  if (this->gems_awarded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gems_awarded(), output);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data_egg = 4;
  if (this->has_pokemon_data_egg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pokemon_data_egg_, output);
  }

  // optional int32 experience_awarded = 5;
  if (this->experience_awarded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->experience_awarded(), output);
  }

  // optional int64 cooldown_complete_timestamp_ms = 6;
  if (this->cooldown_complete_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->cooldown_complete_timestamp_ms(), output);
  }

  // optional int32 chain_hack_sequence_number = 7;
  if (this->chain_hack_sequence_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->chain_hack_sequence_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.FortSearchResponse)
}

::google::protobuf::uint8* FortSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.FortSearchResponse)
  // optional .POGOProtos.Networking.Responses.FortSearchResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .POGOProtos.Inventory.Item.ItemAward items_awarded = 2;
  for (unsigned int i = 0, n = this->items_awarded_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items_awarded(i), false, target);
  }

  // optional int32 gems_awarded = 3;
  if (this->gems_awarded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gems_awarded(), target);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data_egg = 4;
  if (this->has_pokemon_data_egg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pokemon_data_egg_, false, target);
  }

  // optional int32 experience_awarded = 5;
  if (this->experience_awarded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->experience_awarded(), target);
  }

  // optional int64 cooldown_complete_timestamp_ms = 6;
  if (this->cooldown_complete_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->cooldown_complete_timestamp_ms(), target);
  }

  // optional int32 chain_hack_sequence_number = 7;
  if (this->chain_hack_sequence_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->chain_hack_sequence_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.FortSearchResponse)
  return target;
}

int FortSearchResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.FortSearchResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.FortSearchResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional int32 gems_awarded = 3;
  if (this->gems_awarded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gems_awarded());
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data_egg = 4;
  if (this->has_pokemon_data_egg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pokemon_data_egg_);
  }

  // optional int32 experience_awarded = 5;
  if (this->experience_awarded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->experience_awarded());
  }

  // optional int64 cooldown_complete_timestamp_ms = 6;
  if (this->cooldown_complete_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->cooldown_complete_timestamp_ms());
  }

  // optional int32 chain_hack_sequence_number = 7;
  if (this->chain_hack_sequence_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->chain_hack_sequence_number());
  }

  // repeated .POGOProtos.Inventory.Item.ItemAward items_awarded = 2;
  total_size += 1 * this->items_awarded_size();
  for (int i = 0; i < this->items_awarded_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items_awarded(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FortSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.FortSearchResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FortSearchResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FortSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.FortSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.FortSearchResponse)
    MergeFrom(*source);
  }
}

void FortSearchResponse::MergeFrom(const FortSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.FortSearchResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  items_awarded_.MergeFrom(from.items_awarded_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.gems_awarded() != 0) {
    set_gems_awarded(from.gems_awarded());
  }
  if (from.has_pokemon_data_egg()) {
    mutable_pokemon_data_egg()->::POGOProtos::Data::PokemonData::MergeFrom(from.pokemon_data_egg());
  }
  if (from.experience_awarded() != 0) {
    set_experience_awarded(from.experience_awarded());
  }
  if (from.cooldown_complete_timestamp_ms() != 0) {
    set_cooldown_complete_timestamp_ms(from.cooldown_complete_timestamp_ms());
  }
  if (from.chain_hack_sequence_number() != 0) {
    set_chain_hack_sequence_number(from.chain_hack_sequence_number());
  }
}

void FortSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.FortSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FortSearchResponse::CopyFrom(const FortSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.FortSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FortSearchResponse::IsInitialized() const {

  return true;
}

void FortSearchResponse::Swap(FortSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FortSearchResponse::InternalSwap(FortSearchResponse* other) {
  std::swap(result_, other->result_);
  items_awarded_.UnsafeArenaSwap(&other->items_awarded_);
  std::swap(gems_awarded_, other->gems_awarded_);
  std::swap(pokemon_data_egg_, other->pokemon_data_egg_);
  std::swap(experience_awarded_, other->experience_awarded_);
  std::swap(cooldown_complete_timestamp_ms_, other->cooldown_complete_timestamp_ms_);
  std::swap(chain_hack_sequence_number_, other->chain_hack_sequence_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FortSearchResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FortSearchResponse_descriptor_;
  metadata.reflection = FortSearchResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FortSearchResponse

// optional .POGOProtos.Networking.Responses.FortSearchResponse.Result result = 1;
void FortSearchResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::FortSearchResponse_Result FortSearchResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::FortSearchResponse_Result >(result_);
}
 void FortSearchResponse::set_result(::POGOProtos::Networking::Responses::FortSearchResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortSearchResponse.result)
}

// repeated .POGOProtos.Inventory.Item.ItemAward items_awarded = 2;
int FortSearchResponse::items_awarded_size() const {
  return items_awarded_.size();
}
void FortSearchResponse::clear_items_awarded() {
  items_awarded_.Clear();
}
const ::POGOProtos::Inventory::Item::ItemAward& FortSearchResponse::items_awarded(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.items_awarded)
  return items_awarded_.Get(index);
}
::POGOProtos::Inventory::Item::ItemAward* FortSearchResponse::mutable_items_awarded(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortSearchResponse.items_awarded)
  return items_awarded_.Mutable(index);
}
::POGOProtos::Inventory::Item::ItemAward* FortSearchResponse::add_items_awarded() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Responses.FortSearchResponse.items_awarded)
  return items_awarded_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemAward >*
FortSearchResponse::mutable_items_awarded() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Responses.FortSearchResponse.items_awarded)
  return &items_awarded_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Inventory::Item::ItemAward >&
FortSearchResponse::items_awarded() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Responses.FortSearchResponse.items_awarded)
  return items_awarded_;
}

// optional int32 gems_awarded = 3;
void FortSearchResponse::clear_gems_awarded() {
  gems_awarded_ = 0;
}
 ::google::protobuf::int32 FortSearchResponse::gems_awarded() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.gems_awarded)
  return gems_awarded_;
}
 void FortSearchResponse::set_gems_awarded(::google::protobuf::int32 value) {
  
  gems_awarded_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortSearchResponse.gems_awarded)
}

// optional .POGOProtos.Data.PokemonData pokemon_data_egg = 4;
bool FortSearchResponse::has_pokemon_data_egg() const {
  return !_is_default_instance_ && pokemon_data_egg_ != NULL;
}
void FortSearchResponse::clear_pokemon_data_egg() {
  if (GetArenaNoVirtual() == NULL && pokemon_data_egg_ != NULL) delete pokemon_data_egg_;
  pokemon_data_egg_ = NULL;
}
const ::POGOProtos::Data::PokemonData& FortSearchResponse::pokemon_data_egg() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.pokemon_data_egg)
  return pokemon_data_egg_ != NULL ? *pokemon_data_egg_ : *default_instance_->pokemon_data_egg_;
}
::POGOProtos::Data::PokemonData* FortSearchResponse::mutable_pokemon_data_egg() {
  
  if (pokemon_data_egg_ == NULL) {
    pokemon_data_egg_ = new ::POGOProtos::Data::PokemonData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortSearchResponse.pokemon_data_egg)
  return pokemon_data_egg_;
}
::POGOProtos::Data::PokemonData* FortSearchResponse::release_pokemon_data_egg() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortSearchResponse.pokemon_data_egg)
  
  ::POGOProtos::Data::PokemonData* temp = pokemon_data_egg_;
  pokemon_data_egg_ = NULL;
  return temp;
}
void FortSearchResponse::set_allocated_pokemon_data_egg(::POGOProtos::Data::PokemonData* pokemon_data_egg) {
  delete pokemon_data_egg_;
  pokemon_data_egg_ = pokemon_data_egg;
  if (pokemon_data_egg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortSearchResponse.pokemon_data_egg)
}

// optional int32 experience_awarded = 5;
void FortSearchResponse::clear_experience_awarded() {
  experience_awarded_ = 0;
}
 ::google::protobuf::int32 FortSearchResponse::experience_awarded() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.experience_awarded)
  return experience_awarded_;
}
 void FortSearchResponse::set_experience_awarded(::google::protobuf::int32 value) {
  
  experience_awarded_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortSearchResponse.experience_awarded)
}

// optional int64 cooldown_complete_timestamp_ms = 6;
void FortSearchResponse::clear_cooldown_complete_timestamp_ms() {
  cooldown_complete_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 FortSearchResponse::cooldown_complete_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.cooldown_complete_timestamp_ms)
  return cooldown_complete_timestamp_ms_;
}
 void FortSearchResponse::set_cooldown_complete_timestamp_ms(::google::protobuf::int64 value) {
  
  cooldown_complete_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortSearchResponse.cooldown_complete_timestamp_ms)
}

// optional int32 chain_hack_sequence_number = 7;
void FortSearchResponse::clear_chain_hack_sequence_number() {
  chain_hack_sequence_number_ = 0;
}
 ::google::protobuf::int32 FortSearchResponse::chain_hack_sequence_number() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortSearchResponse.chain_hack_sequence_number)
  return chain_hack_sequence_number_;
}
 void FortSearchResponse::set_chain_hack_sequence_number(::google::protobuf::int32 value) {
  
  chain_hack_sequence_number_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortSearchResponse.chain_hack_sequence_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
