// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/FortDetailsResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/FortDetailsResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* FortDetailsResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FortDetailsResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/FortDetailsResponse.proto");
  GOOGLE_CHECK(file != NULL);
  FortDetailsResponse_descriptor_ = file->message_type(0);
  static const int FortDetailsResponse_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, fort_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, team_color_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, pokemon_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, image_urls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, fp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, stamina_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, max_stamina_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, modifiers_),
  };
  FortDetailsResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FortDetailsResponse_descriptor_,
      FortDetailsResponse::default_instance_,
      FortDetailsResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(FortDetailsResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDetailsResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FortDetailsResponse_descriptor_, &FortDetailsResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() {
  delete FortDetailsResponse::default_instance_;
  delete FortDetailsResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPokemonData_2eproto();
  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fTeamColor_2eproto();
  ::POGOProtos::Map::Fort::protobuf_AddDesc_POGOProtos_2fMap_2fFort_2fFortType_2eproto();
  ::POGOProtos::Map::Fort::protobuf_AddDesc_POGOProtos_2fMap_2fFort_2fFortModifier_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n9POGOProtos/Networking/Responses/FortDe"
    "tailsResponse.proto\022\037POGOProtos.Networki"
    "ng.Responses\032!POGOProtos/Data/PokemonDat"
    "a.proto\032 POGOProtos/Enums/TeamColor.prot"
    "o\032\"POGOProtos/Map/Fort/FortType.proto\032&P"
    "OGOProtos/Map/Fort/FortModifier.proto\"\374\002"
    "\n\023FortDetailsResponse\022\017\n\007fort_id\030\001 \001(\t\022/"
    "\n\nteam_color\030\002 \001(\0162\033.POGOProtos.Enums.Te"
    "amColor\0222\n\014pokemon_data\030\003 \001(\0132\034.POGOProt"
    "os.Data.PokemonData\022\014\n\004name\030\004 \001(\t\022\022\n\nima"
    "ge_urls\030\005 \003(\t\022\n\n\002fp\030\006 \001(\005\022\017\n\007stamina\030\007 \001"
    "(\005\022\023\n\013max_stamina\030\010 \001(\005\022+\n\004type\030\t \001(\0162\035."
    "POGOProtos.Map.Fort.FortType\022\020\n\010latitude"
    "\030\n \001(\001\022\021\n\tlongitude\030\013 \001(\001\022\023\n\013description"
    "\030\014 \001(\t\0224\n\tmodifiers\030\r \003(\0132!.POGOProtos.M"
    "ap.Fort.FortModifierb\006proto3", 628);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/FortDetailsResponse.proto", &protobuf_RegisterTypes);
  FortDetailsResponse::default_instance_ = new FortDetailsResponse();
  FortDetailsResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FortDetailsResponse::kFortIdFieldNumber;
const int FortDetailsResponse::kTeamColorFieldNumber;
const int FortDetailsResponse::kPokemonDataFieldNumber;
const int FortDetailsResponse::kNameFieldNumber;
const int FortDetailsResponse::kImageUrlsFieldNumber;
const int FortDetailsResponse::kFpFieldNumber;
const int FortDetailsResponse::kStaminaFieldNumber;
const int FortDetailsResponse::kMaxStaminaFieldNumber;
const int FortDetailsResponse::kTypeFieldNumber;
const int FortDetailsResponse::kLatitudeFieldNumber;
const int FortDetailsResponse::kLongitudeFieldNumber;
const int FortDetailsResponse::kDescriptionFieldNumber;
const int FortDetailsResponse::kModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FortDetailsResponse::FortDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.FortDetailsResponse)
}

void FortDetailsResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  pokemon_data_ = const_cast< ::POGOProtos::Data::PokemonData*>(&::POGOProtos::Data::PokemonData::default_instance());
}

FortDetailsResponse::FortDetailsResponse(const FortDetailsResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.FortDetailsResponse)
}

void FortDetailsResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  fort_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_color_ = 0;
  pokemon_data_ = NULL;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fp_ = 0;
  stamina_ = 0;
  max_stamina_ = 0;
  type_ = 0;
  latitude_ = 0;
  longitude_ = 0;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FortDetailsResponse::~FortDetailsResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.FortDetailsResponse)
  SharedDtor();
}

void FortDetailsResponse::SharedDtor() {
  fort_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete pokemon_data_;
  }
}

void FortDetailsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FortDetailsResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortDetailsResponse_descriptor_;
}

const FortDetailsResponse& FortDetailsResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto();
  return *default_instance_;
}

FortDetailsResponse* FortDetailsResponse::default_instance_ = NULL;

FortDetailsResponse* FortDetailsResponse::New(::google::protobuf::Arena* arena) const {
  FortDetailsResponse* n = new FortDetailsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FortDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.FortDetailsResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FortDetailsResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FortDetailsResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(team_color_, fp_);
  ZR_(stamina_, max_stamina_);
  fort_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(latitude_, longitude_);
  type_ = 0;
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  image_urls_.Clear();
  modifiers_.Clear();
}

bool FortDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fort_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fort_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fort_id().data(), this->fort_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Responses.FortDetailsResponse.fort_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_team_color;
        break;
      }

      // optional .POGOProtos.Enums.TeamColor team_color = 2;
      case 2: {
        if (tag == 16) {
         parse_team_color:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_team_color(static_cast< ::POGOProtos::Enums::TeamColor >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pokemon_data;
        break;
      }

      // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
      case 3: {
        if (tag == 26) {
         parse_pokemon_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pokemon_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // optional string name = 4;
      case 4: {
        if (tag == 34) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Responses.FortDetailsResponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_image_urls;
        break;
      }

      // repeated string image_urls = 5;
      case 5: {
        if (tag == 42) {
         parse_image_urls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_image_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_urls(this->image_urls_size() - 1).data(),
            this->image_urls(this->image_urls_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Responses.FortDetailsResponse.image_urls"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_image_urls;
        if (input->ExpectTag(48)) goto parse_fp;
        break;
      }

      // optional int32 fp = 6;
      case 6: {
        if (tag == 48) {
         parse_fp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_stamina;
        break;
      }

      // optional int32 stamina = 7;
      case 7: {
        if (tag == 56) {
         parse_stamina:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stamina_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_max_stamina;
        break;
      }

      // optional int32 max_stamina = 8;
      case 8: {
        if (tag == 64) {
         parse_max_stamina:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_stamina_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_type;
        break;
      }

      // optional .POGOProtos.Map.Fort.FortType type = 9;
      case 9: {
        if (tag == 72) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::POGOProtos::Map::Fort::FortType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_latitude;
        break;
      }

      // optional double latitude = 10;
      case 10: {
        if (tag == 81) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_longitude;
        break;
      }

      // optional double longitude = 11;
      case 11: {
        if (tag == 89) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_description;
        break;
      }

      // optional string description = 12;
      case 12: {
        if (tag == 98) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Responses.FortDetailsResponse.description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_modifiers;
        break;
      }

      // repeated .POGOProtos.Map.Fort.FortModifier modifiers = 13;
      case 13: {
        if (tag == 106) {
         parse_modifiers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_modifiers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_modifiers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_modifiers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.FortDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.FortDetailsResponse)
  return false;
#undef DO_
}

void FortDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  // optional string fort_id = 1;
  if (this->fort_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fort_id().data(), this->fort_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.fort_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fort_id(), output);
  }

  // optional .POGOProtos.Enums.TeamColor team_color = 2;
  if (this->team_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->team_color(), output);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pokemon_data_, output);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // repeated string image_urls = 5;
  for (int i = 0; i < this->image_urls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_urls(i).data(), this->image_urls(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.image_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->image_urls(i), output);
  }

  // optional int32 fp = 6;
  if (this->fp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->fp(), output);
  }

  // optional int32 stamina = 7;
  if (this->stamina() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stamina(), output);
  }

  // optional int32 max_stamina = 8;
  if (this->max_stamina() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->max_stamina(), output);
  }

  // optional .POGOProtos.Map.Fort.FortType type = 9;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->type(), output);
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->latitude(), output);
  }

  // optional double longitude = 11;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->longitude(), output);
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->description(), output);
  }

  // repeated .POGOProtos.Map.Fort.FortModifier modifiers = 13;
  for (unsigned int i = 0, n = this->modifiers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->modifiers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.FortDetailsResponse)
}

::google::protobuf::uint8* FortDetailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  // optional string fort_id = 1;
  if (this->fort_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fort_id().data(), this->fort_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.fort_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fort_id(), target);
  }

  // optional .POGOProtos.Enums.TeamColor team_color = 2;
  if (this->team_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->team_color(), target);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pokemon_data_, false, target);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // repeated string image_urls = 5;
  for (int i = 0; i < this->image_urls_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_urls(i).data(), this->image_urls(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.image_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->image_urls(i), target);
  }

  // optional int32 fp = 6;
  if (this->fp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->fp(), target);
  }

  // optional int32 stamina = 7;
  if (this->stamina() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stamina(), target);
  }

  // optional int32 max_stamina = 8;
  if (this->max_stamina() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->max_stamina(), target);
  }

  // optional .POGOProtos.Map.Fort.FortType type = 9;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->type(), target);
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->latitude(), target);
  }

  // optional double longitude = 11;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->longitude(), target);
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.FortDetailsResponse.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->description(), target);
  }

  // repeated .POGOProtos.Map.Fort.FortModifier modifiers = 13;
  for (unsigned int i = 0, n = this->modifiers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->modifiers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.FortDetailsResponse)
  return target;
}

int FortDetailsResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  int total_size = 0;

  // optional string fort_id = 1;
  if (this->fort_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fort_id());
  }

  // optional .POGOProtos.Enums.TeamColor team_color = 2;
  if (this->team_color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->team_color());
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pokemon_data_);
  }

  // optional string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 fp = 6;
  if (this->fp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->fp());
  }

  // optional int32 stamina = 7;
  if (this->stamina() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stamina());
  }

  // optional int32 max_stamina = 8;
  if (this->max_stamina() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_stamina());
  }

  // optional .POGOProtos.Map.Fort.FortType type = 9;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional double latitude = 10;
  if (this->latitude() != 0) {
    total_size += 1 + 8;
  }

  // optional double longitude = 11;
  if (this->longitude() != 0) {
    total_size += 1 + 8;
  }

  // optional string description = 12;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // repeated string image_urls = 5;
  total_size += 1 * this->image_urls_size();
  for (int i = 0; i < this->image_urls_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->image_urls(i));
  }

  // repeated .POGOProtos.Map.Fort.FortModifier modifiers = 13;
  total_size += 1 * this->modifiers_size();
  for (int i = 0; i < this->modifiers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modifiers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FortDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FortDetailsResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FortDetailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.FortDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.FortDetailsResponse)
    MergeFrom(*source);
  }
}

void FortDetailsResponse::MergeFrom(const FortDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  image_urls_.MergeFrom(from.image_urls_);
  modifiers_.MergeFrom(from.modifiers_);
  if (from.fort_id().size() > 0) {

    fort_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fort_id_);
  }
  if (from.team_color() != 0) {
    set_team_color(from.team_color());
  }
  if (from.has_pokemon_data()) {
    mutable_pokemon_data()->::POGOProtos::Data::PokemonData::MergeFrom(from.pokemon_data());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.fp() != 0) {
    set_fp(from.fp());
  }
  if (from.stamina() != 0) {
    set_stamina(from.stamina());
  }
  if (from.max_stamina() != 0) {
    set_max_stamina(from.max_stamina());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void FortDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FortDetailsResponse::CopyFrom(const FortDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.FortDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FortDetailsResponse::IsInitialized() const {

  return true;
}

void FortDetailsResponse::Swap(FortDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FortDetailsResponse::InternalSwap(FortDetailsResponse* other) {
  fort_id_.Swap(&other->fort_id_);
  std::swap(team_color_, other->team_color_);
  std::swap(pokemon_data_, other->pokemon_data_);
  name_.Swap(&other->name_);
  image_urls_.UnsafeArenaSwap(&other->image_urls_);
  std::swap(fp_, other->fp_);
  std::swap(stamina_, other->stamina_);
  std::swap(max_stamina_, other->max_stamina_);
  std::swap(type_, other->type_);
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  description_.Swap(&other->description_);
  modifiers_.UnsafeArenaSwap(&other->modifiers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FortDetailsResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FortDetailsResponse_descriptor_;
  metadata.reflection = FortDetailsResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FortDetailsResponse

// optional string fort_id = 1;
void FortDetailsResponse::clear_fort_id() {
  fort_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FortDetailsResponse::fort_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
  return fort_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_fort_id(const ::std::string& value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
}
 void FortDetailsResponse::set_fort_id(const char* value) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
}
 void FortDetailsResponse::set_fort_id(const char* value, size_t size) {
  
  fort_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
}
 ::std::string* FortDetailsResponse::mutable_fort_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
  return fort_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FortDetailsResponse::release_fort_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
  
  return fort_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_allocated_fort_id(::std::string* fort_id) {
  if (fort_id != NULL) {
    
  } else {
    
  }
  fort_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fort_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDetailsResponse.fort_id)
}

// optional .POGOProtos.Enums.TeamColor team_color = 2;
void FortDetailsResponse::clear_team_color() {
  team_color_ = 0;
}
 ::POGOProtos::Enums::TeamColor FortDetailsResponse::team_color() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.team_color)
  return static_cast< ::POGOProtos::Enums::TeamColor >(team_color_);
}
 void FortDetailsResponse::set_team_color(::POGOProtos::Enums::TeamColor value) {
  
  team_color_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.team_color)
}

// optional .POGOProtos.Data.PokemonData pokemon_data = 3;
bool FortDetailsResponse::has_pokemon_data() const {
  return !_is_default_instance_ && pokemon_data_ != NULL;
}
void FortDetailsResponse::clear_pokemon_data() {
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
}
const ::POGOProtos::Data::PokemonData& FortDetailsResponse::pokemon_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.pokemon_data)
  return pokemon_data_ != NULL ? *pokemon_data_ : *default_instance_->pokemon_data_;
}
::POGOProtos::Data::PokemonData* FortDetailsResponse::mutable_pokemon_data() {
  
  if (pokemon_data_ == NULL) {
    pokemon_data_ = new ::POGOProtos::Data::PokemonData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.pokemon_data)
  return pokemon_data_;
}
::POGOProtos::Data::PokemonData* FortDetailsResponse::release_pokemon_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDetailsResponse.pokemon_data)
  
  ::POGOProtos::Data::PokemonData* temp = pokemon_data_;
  pokemon_data_ = NULL;
  return temp;
}
void FortDetailsResponse::set_allocated_pokemon_data(::POGOProtos::Data::PokemonData* pokemon_data) {
  delete pokemon_data_;
  pokemon_data_ = pokemon_data;
  if (pokemon_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDetailsResponse.pokemon_data)
}

// optional string name = 4;
void FortDetailsResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FortDetailsResponse::name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.name)
}
 void FortDetailsResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.FortDetailsResponse.name)
}
 void FortDetailsResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.FortDetailsResponse.name)
}
 ::std::string* FortDetailsResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FortDetailsResponse::release_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDetailsResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDetailsResponse.name)
}

// repeated string image_urls = 5;
int FortDetailsResponse::image_urls_size() const {
  return image_urls_.size();
}
void FortDetailsResponse::clear_image_urls() {
  image_urls_.Clear();
}
 const ::std::string& FortDetailsResponse::image_urls(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  return image_urls_.Get(index);
}
 ::std::string* FortDetailsResponse::mutable_image_urls(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  return image_urls_.Mutable(index);
}
 void FortDetailsResponse::set_image_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  image_urls_.Mutable(index)->assign(value);
}
 void FortDetailsResponse::set_image_urls(int index, const char* value) {
  image_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
}
 void FortDetailsResponse::set_image_urls(int index, const char* value, size_t size) {
  image_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
}
 ::std::string* FortDetailsResponse::add_image_urls() {
  // @@protoc_insertion_point(field_add_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  return image_urls_.Add();
}
 void FortDetailsResponse::add_image_urls(const ::std::string& value) {
  image_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
}
 void FortDetailsResponse::add_image_urls(const char* value) {
  image_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
}
 void FortDetailsResponse::add_image_urls(const char* value, size_t size) {
  image_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
FortDetailsResponse::image_urls() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  return image_urls_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
FortDetailsResponse::mutable_image_urls() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Responses.FortDetailsResponse.image_urls)
  return &image_urls_;
}

// optional int32 fp = 6;
void FortDetailsResponse::clear_fp() {
  fp_ = 0;
}
 ::google::protobuf::int32 FortDetailsResponse::fp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.fp)
  return fp_;
}
 void FortDetailsResponse::set_fp(::google::protobuf::int32 value) {
  
  fp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.fp)
}

// optional int32 stamina = 7;
void FortDetailsResponse::clear_stamina() {
  stamina_ = 0;
}
 ::google::protobuf::int32 FortDetailsResponse::stamina() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.stamina)
  return stamina_;
}
 void FortDetailsResponse::set_stamina(::google::protobuf::int32 value) {
  
  stamina_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.stamina)
}

// optional int32 max_stamina = 8;
void FortDetailsResponse::clear_max_stamina() {
  max_stamina_ = 0;
}
 ::google::protobuf::int32 FortDetailsResponse::max_stamina() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.max_stamina)
  return max_stamina_;
}
 void FortDetailsResponse::set_max_stamina(::google::protobuf::int32 value) {
  
  max_stamina_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.max_stamina)
}

// optional .POGOProtos.Map.Fort.FortType type = 9;
void FortDetailsResponse::clear_type() {
  type_ = 0;
}
 ::POGOProtos::Map::Fort::FortType FortDetailsResponse::type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.type)
  return static_cast< ::POGOProtos::Map::Fort::FortType >(type_);
}
 void FortDetailsResponse::set_type(::POGOProtos::Map::Fort::FortType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.type)
}

// optional double latitude = 10;
void FortDetailsResponse::clear_latitude() {
  latitude_ = 0;
}
 double FortDetailsResponse::latitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.latitude)
  return latitude_;
}
 void FortDetailsResponse::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.latitude)
}

// optional double longitude = 11;
void FortDetailsResponse::clear_longitude() {
  longitude_ = 0;
}
 double FortDetailsResponse::longitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.longitude)
  return longitude_;
}
 void FortDetailsResponse::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.longitude)
}

// optional string description = 12;
void FortDetailsResponse::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& FortDetailsResponse::description() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDetailsResponse.description)
}
 void FortDetailsResponse::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.FortDetailsResponse.description)
}
 void FortDetailsResponse::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.FortDetailsResponse.description)
}
 ::std::string* FortDetailsResponse::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FortDetailsResponse::release_description() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDetailsResponse.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FortDetailsResponse::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDetailsResponse.description)
}

// repeated .POGOProtos.Map.Fort.FortModifier modifiers = 13;
int FortDetailsResponse::modifiers_size() const {
  return modifiers_.size();
}
void FortDetailsResponse::clear_modifiers() {
  modifiers_.Clear();
}
const ::POGOProtos::Map::Fort::FortModifier& FortDetailsResponse::modifiers(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDetailsResponse.modifiers)
  return modifiers_.Get(index);
}
::POGOProtos::Map::Fort::FortModifier* FortDetailsResponse::mutable_modifiers(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDetailsResponse.modifiers)
  return modifiers_.Mutable(index);
}
::POGOProtos::Map::Fort::FortModifier* FortDetailsResponse::add_modifiers() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Responses.FortDetailsResponse.modifiers)
  return modifiers_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortModifier >*
FortDetailsResponse::mutable_modifiers() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Responses.FortDetailsResponse.modifiers)
  return &modifiers_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Map::Fort::FortModifier >&
FortDetailsResponse::modifiers() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Responses.FortDetailsResponse.modifiers)
  return modifiers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
