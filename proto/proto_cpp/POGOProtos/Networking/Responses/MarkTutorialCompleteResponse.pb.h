// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/MarkTutorialCompleteResponse.proto

#ifndef PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Data/PlayerData.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();

class MarkTutorialCompleteResponse;

// ===================================================================

class MarkTutorialCompleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse) */ {
 public:
  MarkTutorialCompleteResponse();
  virtual ~MarkTutorialCompleteResponse();

  MarkTutorialCompleteResponse(const MarkTutorialCompleteResponse& from);

  inline MarkTutorialCompleteResponse& operator=(const MarkTutorialCompleteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkTutorialCompleteResponse& default_instance();

  void Swap(MarkTutorialCompleteResponse* other);

  // implements Message ----------------------------------------------

  inline MarkTutorialCompleteResponse* New() const { return New(NULL); }

  MarkTutorialCompleteResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarkTutorialCompleteResponse& from);
  void MergeFrom(const MarkTutorialCompleteResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MarkTutorialCompleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // optional .POGOProtos.Data.PlayerData player_data = 2;
  bool has_player_data() const;
  void clear_player_data();
  static const int kPlayerDataFieldNumber = 2;
  const ::POGOProtos::Data::PlayerData& player_data() const;
  ::POGOProtos::Data::PlayerData* mutable_player_data();
  ::POGOProtos::Data::PlayerData* release_player_data();
  void set_allocated_player_data(::POGOProtos::Data::PlayerData* player_data);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::POGOProtos::Data::PlayerData* player_data_;
  bool success_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto();

  void InitAsDefaultInstance();
  static MarkTutorialCompleteResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkTutorialCompleteResponse

// optional bool success = 1;
inline void MarkTutorialCompleteResponse::clear_success() {
  success_ = false;
}
inline bool MarkTutorialCompleteResponse::success() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.success)
  return success_;
}
inline void MarkTutorialCompleteResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.success)
}

// optional .POGOProtos.Data.PlayerData player_data = 2;
inline bool MarkTutorialCompleteResponse::has_player_data() const {
  return !_is_default_instance_ && player_data_ != NULL;
}
inline void MarkTutorialCompleteResponse::clear_player_data() {
  if (GetArenaNoVirtual() == NULL && player_data_ != NULL) delete player_data_;
  player_data_ = NULL;
}
inline const ::POGOProtos::Data::PlayerData& MarkTutorialCompleteResponse::player_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.player_data)
  return player_data_ != NULL ? *player_data_ : *default_instance_->player_data_;
}
inline ::POGOProtos::Data::PlayerData* MarkTutorialCompleteResponse::mutable_player_data() {
  
  if (player_data_ == NULL) {
    player_data_ = new ::POGOProtos::Data::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.player_data)
  return player_data_;
}
inline ::POGOProtos::Data::PlayerData* MarkTutorialCompleteResponse::release_player_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.player_data)
  
  ::POGOProtos::Data::PlayerData* temp = player_data_;
  player_data_ = NULL;
  return temp;
}
inline void MarkTutorialCompleteResponse::set_allocated_player_data(::POGOProtos::Data::PlayerData* player_data) {
  delete player_data_;
  player_data_ = player_data;
  if (player_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.MarkTutorialCompleteResponse.player_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fMarkTutorialCompleteResponse_2eproto__INCLUDED
