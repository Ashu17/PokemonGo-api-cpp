// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/UseItemCaptureResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/UseItemCaptureResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* UseItemCaptureResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseItemCaptureResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/UseItemCaptureResponse.proto");
  GOOGLE_CHECK(file != NULL);
  UseItemCaptureResponse_descriptor_ = file->message_type(0);
  static const int UseItemCaptureResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, item_capture_mult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, item_flee_mult_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, stop_movement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, stop_attack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, target_max_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, target_slow_),
  };
  UseItemCaptureResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UseItemCaptureResponse_descriptor_,
      UseItemCaptureResponse::default_instance_,
      UseItemCaptureResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UseItemCaptureResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemCaptureResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UseItemCaptureResponse_descriptor_, &UseItemCaptureResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() {
  delete UseItemCaptureResponse::default_instance_;
  delete UseItemCaptureResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n<POGOProtos/Networking/Responses/UseIte"
    "mCaptureResponse.proto\022\037POGOProtos.Netwo"
    "rking.Responses\"\261\001\n\026UseItemCaptureRespon"
    "se\022\017\n\007success\030\001 \001(\010\022\031\n\021item_capture_mult"
    "\030\002 \001(\001\022\026\n\016item_flee_mult\030\003 \001(\001\022\025\n\rstop_m"
    "ovement\030\004 \001(\010\022\023\n\013stop_attack\030\005 \001(\010\022\022\n\nta"
    "rget_max\030\006 \001(\010\022\023\n\013target_slow\030\007 \001(\010b\006pro"
    "to3", 283);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/UseItemCaptureResponse.proto", &protobuf_RegisterTypes);
  UseItemCaptureResponse::default_instance_ = new UseItemCaptureResponse();
  UseItemCaptureResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseItemCaptureResponse::kSuccessFieldNumber;
const int UseItemCaptureResponse::kItemCaptureMultFieldNumber;
const int UseItemCaptureResponse::kItemFleeMultFieldNumber;
const int UseItemCaptureResponse::kStopMovementFieldNumber;
const int UseItemCaptureResponse::kStopAttackFieldNumber;
const int UseItemCaptureResponse::kTargetMaxFieldNumber;
const int UseItemCaptureResponse::kTargetSlowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseItemCaptureResponse::UseItemCaptureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.UseItemCaptureResponse)
}

void UseItemCaptureResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

UseItemCaptureResponse::UseItemCaptureResponse(const UseItemCaptureResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.UseItemCaptureResponse)
}

void UseItemCaptureResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  success_ = false;
  item_capture_mult_ = 0;
  item_flee_mult_ = 0;
  stop_movement_ = false;
  stop_attack_ = false;
  target_max_ = false;
  target_slow_ = false;
}

UseItemCaptureResponse::~UseItemCaptureResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  SharedDtor();
}

void UseItemCaptureResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UseItemCaptureResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemCaptureResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseItemCaptureResponse_descriptor_;
}

const UseItemCaptureResponse& UseItemCaptureResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fUseItemCaptureResponse_2eproto();
  return *default_instance_;
}

UseItemCaptureResponse* UseItemCaptureResponse::default_instance_ = NULL;

UseItemCaptureResponse* UseItemCaptureResponse::New(::google::protobuf::Arena* arena) const {
  UseItemCaptureResponse* n = new UseItemCaptureResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseItemCaptureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(UseItemCaptureResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<UseItemCaptureResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item_capture_mult_, target_slow_);

#undef ZR_HELPER_
#undef ZR_

}

bool UseItemCaptureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_item_capture_mult;
        break;
      }

      // optional double item_capture_mult = 2;
      case 2: {
        if (tag == 17) {
         parse_item_capture_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &item_capture_mult_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_item_flee_mult;
        break;
      }

      // optional double item_flee_mult = 3;
      case 3: {
        if (tag == 25) {
         parse_item_flee_mult:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &item_flee_mult_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_stop_movement;
        break;
      }

      // optional bool stop_movement = 4;
      case 4: {
        if (tag == 32) {
         parse_stop_movement:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_movement_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_stop_attack;
        break;
      }

      // optional bool stop_attack = 5;
      case 5: {
        if (tag == 40) {
         parse_stop_attack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_attack_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_target_max;
        break;
      }

      // optional bool target_max = 6;
      case 6: {
        if (tag == 48) {
         parse_target_max:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_max_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_target_slow;
        break;
      }

      // optional bool target_slow = 7;
      case 7: {
        if (tag == 56) {
         parse_target_slow:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &target_slow_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  return false;
#undef DO_
}

void UseItemCaptureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  // optional bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  // optional double item_capture_mult = 2;
  if (this->item_capture_mult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->item_capture_mult(), output);
  }

  // optional double item_flee_mult = 3;
  if (this->item_flee_mult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->item_flee_mult(), output);
  }

  // optional bool stop_movement = 4;
  if (this->stop_movement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->stop_movement(), output);
  }

  // optional bool stop_attack = 5;
  if (this->stop_attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stop_attack(), output);
  }

  // optional bool target_max = 6;
  if (this->target_max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->target_max(), output);
  }

  // optional bool target_slow = 7;
  if (this->target_slow() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->target_slow(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.UseItemCaptureResponse)
}

::google::protobuf::uint8* UseItemCaptureResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  // optional bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  // optional double item_capture_mult = 2;
  if (this->item_capture_mult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->item_capture_mult(), target);
  }

  // optional double item_flee_mult = 3;
  if (this->item_flee_mult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->item_flee_mult(), target);
  }

  // optional bool stop_movement = 4;
  if (this->stop_movement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->stop_movement(), target);
  }

  // optional bool stop_attack = 5;
  if (this->stop_attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stop_attack(), target);
  }

  // optional bool target_max = 6;
  if (this->target_max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->target_max(), target);
  }

  // optional bool target_slow = 7;
  if (this->target_slow() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->target_slow(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  return target;
}

int UseItemCaptureResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  int total_size = 0;

  // optional bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // optional double item_capture_mult = 2;
  if (this->item_capture_mult() != 0) {
    total_size += 1 + 8;
  }

  // optional double item_flee_mult = 3;
  if (this->item_flee_mult() != 0) {
    total_size += 1 + 8;
  }

  // optional bool stop_movement = 4;
  if (this->stop_movement() != 0) {
    total_size += 1 + 1;
  }

  // optional bool stop_attack = 5;
  if (this->stop_attack() != 0) {
    total_size += 1 + 1;
  }

  // optional bool target_max = 6;
  if (this->target_max() != 0) {
    total_size += 1 + 1;
  }

  // optional bool target_slow = 7;
  if (this->target_slow() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemCaptureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const UseItemCaptureResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UseItemCaptureResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.UseItemCaptureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.UseItemCaptureResponse)
    MergeFrom(*source);
  }
}

void UseItemCaptureResponse::MergeFrom(const UseItemCaptureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.item_capture_mult() != 0) {
    set_item_capture_mult(from.item_capture_mult());
  }
  if (from.item_flee_mult() != 0) {
    set_item_flee_mult(from.item_flee_mult());
  }
  if (from.stop_movement() != 0) {
    set_stop_movement(from.stop_movement());
  }
  if (from.stop_attack() != 0) {
    set_stop_attack(from.stop_attack());
  }
  if (from.target_max() != 0) {
    set_target_max(from.target_max());
  }
  if (from.target_slow() != 0) {
    set_target_slow(from.target_slow());
  }
}

void UseItemCaptureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemCaptureResponse::CopyFrom(const UseItemCaptureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.UseItemCaptureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemCaptureResponse::IsInitialized() const {

  return true;
}

void UseItemCaptureResponse::Swap(UseItemCaptureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseItemCaptureResponse::InternalSwap(UseItemCaptureResponse* other) {
  std::swap(success_, other->success_);
  std::swap(item_capture_mult_, other->item_capture_mult_);
  std::swap(item_flee_mult_, other->item_flee_mult_);
  std::swap(stop_movement_, other->stop_movement_);
  std::swap(stop_attack_, other->stop_attack_);
  std::swap(target_max_, other->target_max_);
  std::swap(target_slow_, other->target_slow_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseItemCaptureResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseItemCaptureResponse_descriptor_;
  metadata.reflection = UseItemCaptureResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseItemCaptureResponse

// optional bool success = 1;
void UseItemCaptureResponse::clear_success() {
  success_ = false;
}
 bool UseItemCaptureResponse::success() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.success)
  return success_;
}
 void UseItemCaptureResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.success)
}

// optional double item_capture_mult = 2;
void UseItemCaptureResponse::clear_item_capture_mult() {
  item_capture_mult_ = 0;
}
 double UseItemCaptureResponse::item_capture_mult() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.item_capture_mult)
  return item_capture_mult_;
}
 void UseItemCaptureResponse::set_item_capture_mult(double value) {
  
  item_capture_mult_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.item_capture_mult)
}

// optional double item_flee_mult = 3;
void UseItemCaptureResponse::clear_item_flee_mult() {
  item_flee_mult_ = 0;
}
 double UseItemCaptureResponse::item_flee_mult() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.item_flee_mult)
  return item_flee_mult_;
}
 void UseItemCaptureResponse::set_item_flee_mult(double value) {
  
  item_flee_mult_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.item_flee_mult)
}

// optional bool stop_movement = 4;
void UseItemCaptureResponse::clear_stop_movement() {
  stop_movement_ = false;
}
 bool UseItemCaptureResponse::stop_movement() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.stop_movement)
  return stop_movement_;
}
 void UseItemCaptureResponse::set_stop_movement(bool value) {
  
  stop_movement_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.stop_movement)
}

// optional bool stop_attack = 5;
void UseItemCaptureResponse::clear_stop_attack() {
  stop_attack_ = false;
}
 bool UseItemCaptureResponse::stop_attack() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.stop_attack)
  return stop_attack_;
}
 void UseItemCaptureResponse::set_stop_attack(bool value) {
  
  stop_attack_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.stop_attack)
}

// optional bool target_max = 6;
void UseItemCaptureResponse::clear_target_max() {
  target_max_ = false;
}
 bool UseItemCaptureResponse::target_max() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.target_max)
  return target_max_;
}
 void UseItemCaptureResponse::set_target_max(bool value) {
  
  target_max_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.target_max)
}

// optional bool target_slow = 7;
void UseItemCaptureResponse::clear_target_slow() {
  target_slow_ = false;
}
 bool UseItemCaptureResponse::target_slow() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.UseItemCaptureResponse.target_slow)
  return target_slow_;
}
 void UseItemCaptureResponse::set_target_slow(bool value) {
  
  target_slow_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.UseItemCaptureResponse.target_slow)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
