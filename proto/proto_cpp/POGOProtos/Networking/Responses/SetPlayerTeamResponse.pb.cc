// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/SetPlayerTeamResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/SetPlayerTeamResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* SetPlayerTeamResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetPlayerTeamResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SetPlayerTeamResponse_Status_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/SetPlayerTeamResponse.proto");
  GOOGLE_CHECK(file != NULL);
  SetPlayerTeamResponse_descriptor_ = file->message_type(0);
  static const int SetPlayerTeamResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerTeamResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerTeamResponse, player_data_),
  };
  SetPlayerTeamResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SetPlayerTeamResponse_descriptor_,
      SetPlayerTeamResponse::default_instance_,
      SetPlayerTeamResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SetPlayerTeamResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerTeamResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerTeamResponse, _is_default_instance_));
  SetPlayerTeamResponse_Status_descriptor_ = SetPlayerTeamResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SetPlayerTeamResponse_descriptor_, &SetPlayerTeamResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() {
  delete SetPlayerTeamResponse::default_instance_;
  delete SetPlayerTeamResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPlayerData_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n;POGOProtos/Networking/Responses/SetPla"
    "yerTeamResponse.proto\022\037POGOProtos.Networ"
    "king.Responses\032 POGOProtos/Data/PlayerDa"
    "ta.proto\"\335\001\n\025SetPlayerTeamResponse\022M\n\006st"
    "atus\030\001 \001(\0162=.POGOProtos.Networking.Respo"
    "nses.SetPlayerTeamResponse.Status\0220\n\013pla"
    "yer_data\030\002 \001(\0132\033.POGOProtos.Data.PlayerD"
    "ata\"C\n\006Status\022\t\n\005UNSET\020\000\022\013\n\007SUCCESS\020\001\022\024\n"
    "\020TEAM_ALREADY_SET\020\002\022\013\n\007FAILURE\020\003b\006proto3", 360);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/SetPlayerTeamResponse.proto", &protobuf_RegisterTypes);
  SetPlayerTeamResponse::default_instance_ = new SetPlayerTeamResponse();
  SetPlayerTeamResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* SetPlayerTeamResponse_Status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetPlayerTeamResponse_Status_descriptor_;
}
bool SetPlayerTeamResponse_Status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::UNSET;
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::SUCCESS;
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::TEAM_ALREADY_SET;
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::FAILURE;
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::Status_MIN;
const SetPlayerTeamResponse_Status SetPlayerTeamResponse::Status_MAX;
const int SetPlayerTeamResponse::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerTeamResponse::kStatusFieldNumber;
const int SetPlayerTeamResponse::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerTeamResponse::SetPlayerTeamResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
}

void SetPlayerTeamResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  player_data_ = const_cast< ::POGOProtos::Data::PlayerData*>(&::POGOProtos::Data::PlayerData::default_instance());
}

SetPlayerTeamResponse::SetPlayerTeamResponse(const SetPlayerTeamResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
}

void SetPlayerTeamResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  status_ = 0;
  player_data_ = NULL;
}

SetPlayerTeamResponse::~SetPlayerTeamResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  SharedDtor();
}

void SetPlayerTeamResponse::SharedDtor() {
  if (this != default_instance_) {
    delete player_data_;
  }
}

void SetPlayerTeamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerTeamResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetPlayerTeamResponse_descriptor_;
}

const SetPlayerTeamResponse& SetPlayerTeamResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fSetPlayerTeamResponse_2eproto();
  return *default_instance_;
}

SetPlayerTeamResponse* SetPlayerTeamResponse::default_instance_ = NULL;

SetPlayerTeamResponse* SetPlayerTeamResponse::New(::google::protobuf::Arena* arena) const {
  SetPlayerTeamResponse* n = new SetPlayerTeamResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerTeamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  status_ = 0;
  if (GetArenaNoVirtual() == NULL && player_data_ != NULL) delete player_data_;
  player_data_ = NULL;
}

bool SetPlayerTeamResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::POGOProtos::Networking::Responses::SetPlayerTeamResponse_Status >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_player_data;
        break;
      }

      // optional .POGOProtos.Data.PlayerData player_data = 2;
      case 2: {
        if (tag == 18) {
         parse_player_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  return false;
#undef DO_
}

void SetPlayerTeamResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  // optional .POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional .POGOProtos.Data.PlayerData player_data = 2;
  if (this->has_player_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->player_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
}

::google::protobuf::uint8* SetPlayerTeamResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  // optional .POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional .POGOProtos.Data.PlayerData player_data = 2;
  if (this->has_player_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->player_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  return target;
}

int SetPlayerTeamResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // optional .POGOProtos.Data.PlayerData player_data = 2;
  if (this->has_player_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_data_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerTeamResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SetPlayerTeamResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerTeamResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
    MergeFrom(*source);
  }
}

void SetPlayerTeamResponse::MergeFrom(const SetPlayerTeamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.has_player_data()) {
    mutable_player_data()->::POGOProtos::Data::PlayerData::MergeFrom(from.player_data());
  }
}

void SetPlayerTeamResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerTeamResponse::CopyFrom(const SetPlayerTeamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.SetPlayerTeamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerTeamResponse::IsInitialized() const {

  return true;
}

void SetPlayerTeamResponse::Swap(SetPlayerTeamResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerTeamResponse::InternalSwap(SetPlayerTeamResponse* other) {
  std::swap(status_, other->status_);
  std::swap(player_data_, other->player_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerTeamResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetPlayerTeamResponse_descriptor_;
  metadata.reflection = SetPlayerTeamResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerTeamResponse

// optional .POGOProtos.Networking.Responses.SetPlayerTeamResponse.Status status = 1;
void SetPlayerTeamResponse::clear_status() {
  status_ = 0;
}
 ::POGOProtos::Networking::Responses::SetPlayerTeamResponse_Status SetPlayerTeamResponse::status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.SetPlayerTeamResponse.status)
  return static_cast< ::POGOProtos::Networking::Responses::SetPlayerTeamResponse_Status >(status_);
}
 void SetPlayerTeamResponse::set_status(::POGOProtos::Networking::Responses::SetPlayerTeamResponse_Status value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.SetPlayerTeamResponse.status)
}

// optional .POGOProtos.Data.PlayerData player_data = 2;
bool SetPlayerTeamResponse::has_player_data() const {
  return !_is_default_instance_ && player_data_ != NULL;
}
void SetPlayerTeamResponse::clear_player_data() {
  if (GetArenaNoVirtual() == NULL && player_data_ != NULL) delete player_data_;
  player_data_ = NULL;
}
const ::POGOProtos::Data::PlayerData& SetPlayerTeamResponse::player_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.SetPlayerTeamResponse.player_data)
  return player_data_ != NULL ? *player_data_ : *default_instance_->player_data_;
}
::POGOProtos::Data::PlayerData* SetPlayerTeamResponse::mutable_player_data() {
  
  if (player_data_ == NULL) {
    player_data_ = new ::POGOProtos::Data::PlayerData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.SetPlayerTeamResponse.player_data)
  return player_data_;
}
::POGOProtos::Data::PlayerData* SetPlayerTeamResponse::release_player_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.SetPlayerTeamResponse.player_data)
  
  ::POGOProtos::Data::PlayerData* temp = player_data_;
  player_data_ = NULL;
  return temp;
}
void SetPlayerTeamResponse::set_allocated_player_data(::POGOProtos::Data::PlayerData* player_data) {
  delete player_data_;
  player_data_ = player_data;
  if (player_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.SetPlayerTeamResponse.player_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
