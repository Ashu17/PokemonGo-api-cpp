// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/GetPlayerProfileResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/GetPlayerProfileResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* GetPlayerProfileResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPlayerProfileResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GetPlayerProfileResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/GetPlayerProfileResponse.proto");
  GOOGLE_CHECK(file != NULL);
  GetPlayerProfileResponse_descriptor_ = file->message_type(0);
  static const int GetPlayerProfileResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerProfileResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerProfileResponse, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerProfileResponse, badges_),
  };
  GetPlayerProfileResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPlayerProfileResponse_descriptor_,
      GetPlayerProfileResponse::default_instance_,
      GetPlayerProfileResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetPlayerProfileResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerProfileResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerProfileResponse, _is_default_instance_));
  GetPlayerProfileResponse_Result_descriptor_ = GetPlayerProfileResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPlayerProfileResponse_descriptor_, &GetPlayerProfileResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() {
  delete GetPlayerProfileResponse::default_instance_;
  delete GetPlayerProfileResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPlayerBadge_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n>POGOProtos/Networking/Responses/GetPla"
    "yerProfileResponse.proto\022\037POGOProtos.Net"
    "working.Responses\032!POGOProtos/Data/Playe"
    "rBadge.proto\"\320\001\n\030GetPlayerProfileRespons"
    "e\022P\n\006result\030\001 \001(\0162@.POGOProtos.Networkin"
    "g.Responses.GetPlayerProfileResponse.Res"
    "ult\022\022\n\nstart_time\030\002 \001(\003\022,\n\006badges\030\003 \003(\0132"
    "\034.POGOProtos.Data.PlayerBadge\" \n\006Result\022"
    "\t\n\005UNSET\020\000\022\013\n\007SUCCESS\020\001b\006proto3", 351);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/GetPlayerProfileResponse.proto", &protobuf_RegisterTypes);
  GetPlayerProfileResponse::default_instance_ = new GetPlayerProfileResponse();
  GetPlayerProfileResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* GetPlayerProfileResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPlayerProfileResponse_Result_descriptor_;
}
bool GetPlayerProfileResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerProfileResponse_Result GetPlayerProfileResponse::UNSET;
const GetPlayerProfileResponse_Result GetPlayerProfileResponse::SUCCESS;
const GetPlayerProfileResponse_Result GetPlayerProfileResponse::Result_MIN;
const GetPlayerProfileResponse_Result GetPlayerProfileResponse::Result_MAX;
const int GetPlayerProfileResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerProfileResponse::kResultFieldNumber;
const int GetPlayerProfileResponse::kStartTimeFieldNumber;
const int GetPlayerProfileResponse::kBadgesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerProfileResponse::GetPlayerProfileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
}

void GetPlayerProfileResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetPlayerProfileResponse::GetPlayerProfileResponse(const GetPlayerProfileResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
}

void GetPlayerProfileResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
}

GetPlayerProfileResponse::~GetPlayerProfileResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  SharedDtor();
}

void GetPlayerProfileResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetPlayerProfileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerProfileResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPlayerProfileResponse_descriptor_;
}

const GetPlayerProfileResponse& GetPlayerProfileResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetPlayerProfileResponse_2eproto();
  return *default_instance_;
}

GetPlayerProfileResponse* GetPlayerProfileResponse::default_instance_ = NULL;

GetPlayerProfileResponse* GetPlayerProfileResponse::New(::google::protobuf::Arena* arena) const {
  GetPlayerProfileResponse* n = new GetPlayerProfileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerProfileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  result_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  badges_.Clear();
}

bool GetPlayerProfileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::GetPlayerProfileResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_start_time;
        break;
      }

      // optional int64 start_time = 2;
      case 2: {
        if (tag == 16) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_badges;
        break;
      }

      // repeated .POGOProtos.Data.PlayerBadge badges = 3;
      case 3: {
        if (tag == 26) {
         parse_badges:
          DO_(input->IncrementRecursionDepth());
         parse_loop_badges:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_badges()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_badges;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  return false;
#undef DO_
}

void GetPlayerProfileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  // optional .POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional int64 start_time = 2;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start_time(), output);
  }

  // repeated .POGOProtos.Data.PlayerBadge badges = 3;
  for (unsigned int i = 0, n = this->badges_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->badges(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
}

::google::protobuf::uint8* GetPlayerProfileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  // optional .POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional int64 start_time = 2;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start_time(), target);
  }

  // repeated .POGOProtos.Data.PlayerBadge badges = 3;
  for (unsigned int i = 0, n = this->badges_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->badges(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  return target;
}

int GetPlayerProfileResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional int64 start_time = 2;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->start_time());
  }

  // repeated .POGOProtos.Data.PlayerBadge badges = 3;
  total_size += 1 * this->badges_size();
  for (int i = 0; i < this->badges_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->badges(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerProfileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetPlayerProfileResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerProfileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
    MergeFrom(*source);
  }
}

void GetPlayerProfileResponse::MergeFrom(const GetPlayerProfileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  badges_.MergeFrom(from.badges_);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
}

void GetPlayerProfileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerProfileResponse::CopyFrom(const GetPlayerProfileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.GetPlayerProfileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerProfileResponse::IsInitialized() const {

  return true;
}

void GetPlayerProfileResponse::Swap(GetPlayerProfileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerProfileResponse::InternalSwap(GetPlayerProfileResponse* other) {
  std::swap(result_, other->result_);
  std::swap(start_time_, other->start_time_);
  badges_.UnsafeArenaSwap(&other->badges_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerProfileResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPlayerProfileResponse_descriptor_;
  metadata.reflection = GetPlayerProfileResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerProfileResponse

// optional .POGOProtos.Networking.Responses.GetPlayerProfileResponse.Result result = 1;
void GetPlayerProfileResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::GetPlayerProfileResponse_Result GetPlayerProfileResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetPlayerProfileResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::GetPlayerProfileResponse_Result >(result_);
}
 void GetPlayerProfileResponse::set_result(::POGOProtos::Networking::Responses::GetPlayerProfileResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetPlayerProfileResponse.result)
}

// optional int64 start_time = 2;
void GetPlayerProfileResponse::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 GetPlayerProfileResponse::start_time() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetPlayerProfileResponse.start_time)
  return start_time_;
}
 void GetPlayerProfileResponse::set_start_time(::google::protobuf::int64 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetPlayerProfileResponse.start_time)
}

// repeated .POGOProtos.Data.PlayerBadge badges = 3;
int GetPlayerProfileResponse::badges_size() const {
  return badges_.size();
}
void GetPlayerProfileResponse::clear_badges() {
  badges_.Clear();
}
const ::POGOProtos::Data::PlayerBadge& GetPlayerProfileResponse::badges(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetPlayerProfileResponse.badges)
  return badges_.Get(index);
}
::POGOProtos::Data::PlayerBadge* GetPlayerProfileResponse::mutable_badges(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.GetPlayerProfileResponse.badges)
  return badges_.Mutable(index);
}
::POGOProtos::Data::PlayerBadge* GetPlayerProfileResponse::add_badges() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Responses.GetPlayerProfileResponse.badges)
  return badges_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::PlayerBadge >*
GetPlayerProfileResponse::mutable_badges() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Responses.GetPlayerProfileResponse.badges)
  return &badges_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Data::PlayerBadge >&
GetPlayerProfileResponse::badges() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Responses.GetPlayerProfileResponse.badges)
  return badges_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
