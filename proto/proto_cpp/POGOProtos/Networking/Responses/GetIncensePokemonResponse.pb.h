// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/GetIncensePokemonResponse.proto

#ifndef PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/PokemonId.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();

class GetIncensePokemonResponse;

enum GetIncensePokemonResponse_Result {
  GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_UNKNOWN = 0,
  GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_AVAILABLE = 1,
  GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_NOT_AVAILABLE = 2,
  GetIncensePokemonResponse_Result_GetIncensePokemonResponse_Result_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetIncensePokemonResponse_Result_GetIncensePokemonResponse_Result_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetIncensePokemonResponse_Result_IsValid(int value);
const GetIncensePokemonResponse_Result GetIncensePokemonResponse_Result_Result_MIN = GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_UNKNOWN;
const GetIncensePokemonResponse_Result GetIncensePokemonResponse_Result_Result_MAX = GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_NOT_AVAILABLE;
const int GetIncensePokemonResponse_Result_Result_ARRAYSIZE = GetIncensePokemonResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetIncensePokemonResponse_Result_descriptor();
inline const ::std::string& GetIncensePokemonResponse_Result_Name(GetIncensePokemonResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetIncensePokemonResponse_Result_descriptor(), value);
}
inline bool GetIncensePokemonResponse_Result_Parse(
    const ::std::string& name, GetIncensePokemonResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetIncensePokemonResponse_Result>(
    GetIncensePokemonResponse_Result_descriptor(), name, value);
}
// ===================================================================

class GetIncensePokemonResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Responses.GetIncensePokemonResponse) */ {
 public:
  GetIncensePokemonResponse();
  virtual ~GetIncensePokemonResponse();

  GetIncensePokemonResponse(const GetIncensePokemonResponse& from);

  inline GetIncensePokemonResponse& operator=(const GetIncensePokemonResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIncensePokemonResponse& default_instance();

  void Swap(GetIncensePokemonResponse* other);

  // implements Message ----------------------------------------------

  inline GetIncensePokemonResponse* New() const { return New(NULL); }

  GetIncensePokemonResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetIncensePokemonResponse& from);
  void MergeFrom(const GetIncensePokemonResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetIncensePokemonResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetIncensePokemonResponse_Result Result;
  static const Result INCENSE_ENCOUNTER_UNKNOWN =
    GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_UNKNOWN;
  static const Result INCENSE_ENCOUNTER_AVAILABLE =
    GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_AVAILABLE;
  static const Result INCENSE_ENCOUNTER_NOT_AVAILABLE =
    GetIncensePokemonResponse_Result_INCENSE_ENCOUNTER_NOT_AVAILABLE;
  static inline bool Result_IsValid(int value) {
    return GetIncensePokemonResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    GetIncensePokemonResponse_Result_Result_MIN;
  static const Result Result_MAX =
    GetIncensePokemonResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    GetIncensePokemonResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return GetIncensePokemonResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return GetIncensePokemonResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return GetIncensePokemonResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .POGOProtos.Networking.Responses.GetIncensePokemonResponse.Result result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result result() const;
  void set_result(::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result value);

  // optional .POGOProtos.Enums.PokemonId pokemon_id = 2;
  void clear_pokemon_id();
  static const int kPokemonIdFieldNumber = 2;
  ::POGOProtos::Enums::PokemonId pokemon_id() const;
  void set_pokemon_id(::POGOProtos::Enums::PokemonId value);

  // optional double latitude = 3;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // optional double longitude = 4;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  double longitude() const;
  void set_longitude(double value);

  // optional string encounter_location = 5;
  void clear_encounter_location();
  static const int kEncounterLocationFieldNumber = 5;
  const ::std::string& encounter_location() const;
  void set_encounter_location(const ::std::string& value);
  void set_encounter_location(const char* value);
  void set_encounter_location(const char* value, size_t size);
  ::std::string* mutable_encounter_location();
  ::std::string* release_encounter_location();
  void set_allocated_encounter_location(::std::string* encounter_location);

  // optional fixed64 encounter_id = 6;
  void clear_encounter_id();
  static const int kEncounterIdFieldNumber = 6;
  ::google::protobuf::uint64 encounter_id() const;
  void set_encounter_id(::google::protobuf::uint64 value);

  // optional int64 disappear_timestamp_ms = 7;
  void clear_disappear_timestamp_ms();
  static const int kDisappearTimestampMsFieldNumber = 7;
  ::google::protobuf::int64 disappear_timestamp_ms() const;
  void set_disappear_timestamp_ms(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Responses.GetIncensePokemonResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int result_;
  int pokemon_id_;
  double latitude_;
  double longitude_;
  ::google::protobuf::internal::ArenaStringPtr encounter_location_;
  ::google::protobuf::uint64 encounter_id_;
  ::google::protobuf::int64 disappear_timestamp_ms_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto();

  void InitAsDefaultInstance();
  static GetIncensePokemonResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetIncensePokemonResponse

// optional .POGOProtos.Networking.Responses.GetIncensePokemonResponse.Result result = 1;
inline void GetIncensePokemonResponse::clear_result() {
  result_ = 0;
}
inline ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result GetIncensePokemonResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result >(result_);
}
inline void GetIncensePokemonResponse::set_result(::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.result)
}

// optional .POGOProtos.Enums.PokemonId pokemon_id = 2;
inline void GetIncensePokemonResponse::clear_pokemon_id() {
  pokemon_id_ = 0;
}
inline ::POGOProtos::Enums::PokemonId GetIncensePokemonResponse::pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.pokemon_id)
  return static_cast< ::POGOProtos::Enums::PokemonId >(pokemon_id_);
}
inline void GetIncensePokemonResponse::set_pokemon_id(::POGOProtos::Enums::PokemonId value) {
  
  pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.pokemon_id)
}

// optional double latitude = 3;
inline void GetIncensePokemonResponse::clear_latitude() {
  latitude_ = 0;
}
inline double GetIncensePokemonResponse::latitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.latitude)
  return latitude_;
}
inline void GetIncensePokemonResponse::set_latitude(double value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.latitude)
}

// optional double longitude = 4;
inline void GetIncensePokemonResponse::clear_longitude() {
  longitude_ = 0;
}
inline double GetIncensePokemonResponse::longitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.longitude)
  return longitude_;
}
inline void GetIncensePokemonResponse::set_longitude(double value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.longitude)
}

// optional string encounter_location = 5;
inline void GetIncensePokemonResponse::clear_encounter_location() {
  encounter_location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIncensePokemonResponse::encounter_location() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
  return encounter_location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncensePokemonResponse::set_encounter_location(const ::std::string& value) {
  
  encounter_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
}
inline void GetIncensePokemonResponse::set_encounter_location(const char* value) {
  
  encounter_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
}
inline void GetIncensePokemonResponse::set_encounter_location(const char* value, size_t size) {
  
  encounter_location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
}
inline ::std::string* GetIncensePokemonResponse::mutable_encounter_location() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
  return encounter_location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIncensePokemonResponse::release_encounter_location() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
  
  return encounter_location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIncensePokemonResponse::set_allocated_encounter_location(::std::string* encounter_location) {
  if (encounter_location != NULL) {
    
  } else {
    
  }
  encounter_location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encounter_location);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_location)
}

// optional fixed64 encounter_id = 6;
inline void GetIncensePokemonResponse::clear_encounter_id() {
  encounter_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetIncensePokemonResponse::encounter_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_id)
  return encounter_id_;
}
inline void GetIncensePokemonResponse::set_encounter_id(::google::protobuf::uint64 value) {
  
  encounter_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.encounter_id)
}

// optional int64 disappear_timestamp_ms = 7;
inline void GetIncensePokemonResponse::clear_disappear_timestamp_ms() {
  disappear_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetIncensePokemonResponse::disappear_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.GetIncensePokemonResponse.disappear_timestamp_ms)
  return disappear_timestamp_ms_;
}
inline void GetIncensePokemonResponse::set_disappear_timestamp_ms(::google::protobuf::int64 value) {
  
  disappear_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.GetIncensePokemonResponse.disappear_timestamp_ms)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result>() {
  return ::POGOProtos::Networking::Responses::GetIncensePokemonResponse_Result_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fNetworking_2fResponses_2fGetIncensePokemonResponse_2eproto__INCLUDED
