// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/FortDeployPokemonResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/FortDeployPokemonResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* FortDeployPokemonResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FortDeployPokemonResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* FortDeployPokemonResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/FortDeployPokemonResponse.proto");
  GOOGLE_CHECK(file != NULL);
  FortDeployPokemonResponse_descriptor_ = file->message_type(0);
  static const int FortDeployPokemonResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, fort_details_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, pokemon_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, gym_state_),
  };
  FortDeployPokemonResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FortDeployPokemonResponse_descriptor_,
      FortDeployPokemonResponse::default_instance_,
      FortDeployPokemonResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(FortDeployPokemonResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FortDeployPokemonResponse, _is_default_instance_));
  FortDeployPokemonResponse_Result_descriptor_ = FortDeployPokemonResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FortDeployPokemonResponse_descriptor_, &FortDeployPokemonResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() {
  delete FortDeployPokemonResponse::default_instance_;
  delete FortDeployPokemonResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::protobuf_AddDesc_POGOProtos_2fData_2fPokemonData_2eproto();
  ::POGOProtos::Data::Gym::protobuf_AddDesc_POGOProtos_2fData_2fGym_2fGymState_2eproto();
  ::POGOProtos::Networking::Responses::protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDetailsResponse_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\?POGOProtos/Networking/Responses/FortDe"
    "ployPokemonResponse.proto\022\037POGOProtos.Ne"
    "tworking.Responses\032!POGOProtos/Data/Poke"
    "monData.proto\032\"POGOProtos/Data/Gym/GymSt"
    "ate.proto\0329POGOProtos/Networking/Respons"
    "es/FortDetailsResponse.proto\"\250\004\n\031FortDep"
    "loyPokemonResponse\022Q\n\006result\030\001 \001(\0162A.POG"
    "OProtos.Networking.Responses.FortDeployP"
    "okemonResponse.Result\022J\n\014fort_details\030\002 "
    "\001(\01324.POGOProtos.Networking.Responses.Fo"
    "rtDetailsResponse\0222\n\014pokemon_data\030\003 \001(\0132"
    "\034.POGOProtos.Data.PokemonData\0220\n\tgym_sta"
    "te\030\004 \001(\0132\035.POGOProtos.Data.Gym.GymState\""
    "\205\002\n\006Result\022\021\n\rNO_RESULT_SET\020\000\022\013\n\007SUCCESS"
    "\020\001\022%\n!ERROR_ALREADY_HAS_POKEMON_ON_FORT\020"
    "\002\022!\n\035ERROR_OPPOSING_TEAM_OWNS_FORT\020\003\022\026\n\022"
    "ERROR_FORT_IS_FULL\020\004\022\026\n\022ERROR_NOT_IN_RAN"
    "GE\020\005\022\034\n\030ERROR_PLAYER_HAS_NO_TEAM\020\006\022\035\n\031ER"
    "ROR_POKEMON_NOT_FULL_HP\020\007\022$\n ERROR_PLAYE"
    "R_BELOW_MINIMUM_LEVEL\020\010b\006proto3", 791);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/FortDeployPokemonResponse.proto", &protobuf_RegisterTypes);
  FortDeployPokemonResponse::default_instance_ = new FortDeployPokemonResponse();
  FortDeployPokemonResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* FortDeployPokemonResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortDeployPokemonResponse_Result_descriptor_;
}
bool FortDeployPokemonResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::NO_RESULT_SET;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::SUCCESS;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_ALREADY_HAS_POKEMON_ON_FORT;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_OPPOSING_TEAM_OWNS_FORT;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_FORT_IS_FULL;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_NOT_IN_RANGE;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_PLAYER_HAS_NO_TEAM;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_POKEMON_NOT_FULL_HP;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::ERROR_PLAYER_BELOW_MINIMUM_LEVEL;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::Result_MIN;
const FortDeployPokemonResponse_Result FortDeployPokemonResponse::Result_MAX;
const int FortDeployPokemonResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FortDeployPokemonResponse::kResultFieldNumber;
const int FortDeployPokemonResponse::kFortDetailsFieldNumber;
const int FortDeployPokemonResponse::kPokemonDataFieldNumber;
const int FortDeployPokemonResponse::kGymStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FortDeployPokemonResponse::FortDeployPokemonResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
}

void FortDeployPokemonResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  fort_details_ = const_cast< ::POGOProtos::Networking::Responses::FortDetailsResponse*>(&::POGOProtos::Networking::Responses::FortDetailsResponse::default_instance());
  pokemon_data_ = const_cast< ::POGOProtos::Data::PokemonData*>(&::POGOProtos::Data::PokemonData::default_instance());
  gym_state_ = const_cast< ::POGOProtos::Data::Gym::GymState*>(&::POGOProtos::Data::Gym::GymState::default_instance());
}

FortDeployPokemonResponse::FortDeployPokemonResponse(const FortDeployPokemonResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
}

void FortDeployPokemonResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  fort_details_ = NULL;
  pokemon_data_ = NULL;
  gym_state_ = NULL;
}

FortDeployPokemonResponse::~FortDeployPokemonResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  SharedDtor();
}

void FortDeployPokemonResponse::SharedDtor() {
  if (this != default_instance_) {
    delete fort_details_;
    delete pokemon_data_;
    delete gym_state_;
  }
}

void FortDeployPokemonResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FortDeployPokemonResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FortDeployPokemonResponse_descriptor_;
}

const FortDeployPokemonResponse& FortDeployPokemonResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fFortDeployPokemonResponse_2eproto();
  return *default_instance_;
}

FortDeployPokemonResponse* FortDeployPokemonResponse::default_instance_ = NULL;

FortDeployPokemonResponse* FortDeployPokemonResponse::New(::google::protobuf::Arena* arena) const {
  FortDeployPokemonResponse* n = new FortDeployPokemonResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FortDeployPokemonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  result_ = 0;
  if (GetArenaNoVirtual() == NULL && fort_details_ != NULL) delete fort_details_;
  fort_details_ = NULL;
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && gym_state_ != NULL) delete gym_state_;
  gym_state_ = NULL;
}

bool FortDeployPokemonResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::FortDeployPokemonResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_fort_details;
        break;
      }

      // optional .POGOProtos.Networking.Responses.FortDetailsResponse fort_details = 2;
      case 2: {
        if (tag == 18) {
         parse_fort_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fort_details()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pokemon_data;
        break;
      }

      // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
      case 3: {
        if (tag == 26) {
         parse_pokemon_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pokemon_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_gym_state;
        break;
      }

      // optional .POGOProtos.Data.Gym.GymState gym_state = 4;
      case 4: {
        if (tag == 34) {
         parse_gym_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gym_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  return false;
#undef DO_
}

void FortDeployPokemonResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  // optional .POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional .POGOProtos.Networking.Responses.FortDetailsResponse fort_details = 2;
  if (this->has_fort_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->fort_details_, output);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pokemon_data_, output);
  }

  // optional .POGOProtos.Data.Gym.GymState gym_state = 4;
  if (this->has_gym_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->gym_state_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
}

::google::protobuf::uint8* FortDeployPokemonResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  // optional .POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional .POGOProtos.Networking.Responses.FortDetailsResponse fort_details = 2;
  if (this->has_fort_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->fort_details_, false, target);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pokemon_data_, false, target);
  }

  // optional .POGOProtos.Data.Gym.GymState gym_state = 4;
  if (this->has_gym_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->gym_state_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  return target;
}

int FortDeployPokemonResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional .POGOProtos.Networking.Responses.FortDetailsResponse fort_details = 2;
  if (this->has_fort_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fort_details_);
  }

  // optional .POGOProtos.Data.PokemonData pokemon_data = 3;
  if (this->has_pokemon_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pokemon_data_);
  }

  // optional .POGOProtos.Data.Gym.GymState gym_state = 4;
  if (this->has_gym_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gym_state_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FortDeployPokemonResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const FortDeployPokemonResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FortDeployPokemonResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
    MergeFrom(*source);
  }
}

void FortDeployPokemonResponse::MergeFrom(const FortDeployPokemonResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.has_fort_details()) {
    mutable_fort_details()->::POGOProtos::Networking::Responses::FortDetailsResponse::MergeFrom(from.fort_details());
  }
  if (from.has_pokemon_data()) {
    mutable_pokemon_data()->::POGOProtos::Data::PokemonData::MergeFrom(from.pokemon_data());
  }
  if (from.has_gym_state()) {
    mutable_gym_state()->::POGOProtos::Data::Gym::GymState::MergeFrom(from.gym_state());
  }
}

void FortDeployPokemonResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FortDeployPokemonResponse::CopyFrom(const FortDeployPokemonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.FortDeployPokemonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FortDeployPokemonResponse::IsInitialized() const {

  return true;
}

void FortDeployPokemonResponse::Swap(FortDeployPokemonResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FortDeployPokemonResponse::InternalSwap(FortDeployPokemonResponse* other) {
  std::swap(result_, other->result_);
  std::swap(fort_details_, other->fort_details_);
  std::swap(pokemon_data_, other->pokemon_data_);
  std::swap(gym_state_, other->gym_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FortDeployPokemonResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FortDeployPokemonResponse_descriptor_;
  metadata.reflection = FortDeployPokemonResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FortDeployPokemonResponse

// optional .POGOProtos.Networking.Responses.FortDeployPokemonResponse.Result result = 1;
void FortDeployPokemonResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::FortDeployPokemonResponse_Result FortDeployPokemonResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDeployPokemonResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::FortDeployPokemonResponse_Result >(result_);
}
 void FortDeployPokemonResponse::set_result(::POGOProtos::Networking::Responses::FortDeployPokemonResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.FortDeployPokemonResponse.result)
}

// optional .POGOProtos.Networking.Responses.FortDetailsResponse fort_details = 2;
bool FortDeployPokemonResponse::has_fort_details() const {
  return !_is_default_instance_ && fort_details_ != NULL;
}
void FortDeployPokemonResponse::clear_fort_details() {
  if (GetArenaNoVirtual() == NULL && fort_details_ != NULL) delete fort_details_;
  fort_details_ = NULL;
}
const ::POGOProtos::Networking::Responses::FortDetailsResponse& FortDeployPokemonResponse::fort_details() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDeployPokemonResponse.fort_details)
  return fort_details_ != NULL ? *fort_details_ : *default_instance_->fort_details_;
}
::POGOProtos::Networking::Responses::FortDetailsResponse* FortDeployPokemonResponse::mutable_fort_details() {
  
  if (fort_details_ == NULL) {
    fort_details_ = new ::POGOProtos::Networking::Responses::FortDetailsResponse;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDeployPokemonResponse.fort_details)
  return fort_details_;
}
::POGOProtos::Networking::Responses::FortDetailsResponse* FortDeployPokemonResponse::release_fort_details() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDeployPokemonResponse.fort_details)
  
  ::POGOProtos::Networking::Responses::FortDetailsResponse* temp = fort_details_;
  fort_details_ = NULL;
  return temp;
}
void FortDeployPokemonResponse::set_allocated_fort_details(::POGOProtos::Networking::Responses::FortDetailsResponse* fort_details) {
  delete fort_details_;
  fort_details_ = fort_details;
  if (fort_details) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDeployPokemonResponse.fort_details)
}

// optional .POGOProtos.Data.PokemonData pokemon_data = 3;
bool FortDeployPokemonResponse::has_pokemon_data() const {
  return !_is_default_instance_ && pokemon_data_ != NULL;
}
void FortDeployPokemonResponse::clear_pokemon_data() {
  if (GetArenaNoVirtual() == NULL && pokemon_data_ != NULL) delete pokemon_data_;
  pokemon_data_ = NULL;
}
const ::POGOProtos::Data::PokemonData& FortDeployPokemonResponse::pokemon_data() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDeployPokemonResponse.pokemon_data)
  return pokemon_data_ != NULL ? *pokemon_data_ : *default_instance_->pokemon_data_;
}
::POGOProtos::Data::PokemonData* FortDeployPokemonResponse::mutable_pokemon_data() {
  
  if (pokemon_data_ == NULL) {
    pokemon_data_ = new ::POGOProtos::Data::PokemonData;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDeployPokemonResponse.pokemon_data)
  return pokemon_data_;
}
::POGOProtos::Data::PokemonData* FortDeployPokemonResponse::release_pokemon_data() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDeployPokemonResponse.pokemon_data)
  
  ::POGOProtos::Data::PokemonData* temp = pokemon_data_;
  pokemon_data_ = NULL;
  return temp;
}
void FortDeployPokemonResponse::set_allocated_pokemon_data(::POGOProtos::Data::PokemonData* pokemon_data) {
  delete pokemon_data_;
  pokemon_data_ = pokemon_data;
  if (pokemon_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDeployPokemonResponse.pokemon_data)
}

// optional .POGOProtos.Data.Gym.GymState gym_state = 4;
bool FortDeployPokemonResponse::has_gym_state() const {
  return !_is_default_instance_ && gym_state_ != NULL;
}
void FortDeployPokemonResponse::clear_gym_state() {
  if (GetArenaNoVirtual() == NULL && gym_state_ != NULL) delete gym_state_;
  gym_state_ = NULL;
}
const ::POGOProtos::Data::Gym::GymState& FortDeployPokemonResponse::gym_state() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.FortDeployPokemonResponse.gym_state)
  return gym_state_ != NULL ? *gym_state_ : *default_instance_->gym_state_;
}
::POGOProtos::Data::Gym::GymState* FortDeployPokemonResponse::mutable_gym_state() {
  
  if (gym_state_ == NULL) {
    gym_state_ = new ::POGOProtos::Data::Gym::GymState;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.FortDeployPokemonResponse.gym_state)
  return gym_state_;
}
::POGOProtos::Data::Gym::GymState* FortDeployPokemonResponse::release_gym_state() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.FortDeployPokemonResponse.gym_state)
  
  ::POGOProtos::Data::Gym::GymState* temp = gym_state_;
  gym_state_ = NULL;
  return temp;
}
void FortDeployPokemonResponse::set_allocated_gym_state(::POGOProtos::Data::Gym::GymState* gym_state) {
  delete gym_state_;
  gym_state_ = gym_state;
  if (gym_state) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.FortDeployPokemonResponse.gym_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
