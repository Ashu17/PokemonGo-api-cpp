// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/StartGymBattleResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/StartGymBattleResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* StartGymBattleResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StartGymBattleResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* StartGymBattleResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/StartGymBattleResponse.proto");
  GOOGLE_CHECK(file != NULL);
  StartGymBattleResponse_descriptor_ = file->message_type(0);
  static const int StartGymBattleResponse_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, battle_start_timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, battle_end_timestamp_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, battle_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, defender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, battle_log_),
  };
  StartGymBattleResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StartGymBattleResponse_descriptor_,
      StartGymBattleResponse::default_instance_,
      StartGymBattleResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(StartGymBattleResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartGymBattleResponse, _is_default_instance_));
  StartGymBattleResponse_Result_descriptor_ = StartGymBattleResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StartGymBattleResponse_descriptor_, &StartGymBattleResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() {
  delete StartGymBattleResponse::default_instance_;
  delete StartGymBattleResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleLog_2eproto();
  ::POGOProtos::Data::Battle::protobuf_AddDesc_POGOProtos_2fData_2fBattle_2fBattleParticipant_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n<POGOProtos/Networking/Responses/StartG"
    "ymBattleResponse.proto\022\037POGOProtos.Netwo"
    "rking.Responses\032&POGOProtos/Data/Battle/"
    "BattleLog.proto\032.POGOProtos/Data/Battle/"
    "BattleParticipant.proto\"\257\005\n\026StartGymBatt"
    "leResponse\022N\n\006result\030\001 \001(\0162>.POGOProtos."
    "Networking.Responses.StartGymBattleRespo"
    "nse.Result\022!\n\031battle_start_timestamp_ms\030"
    "\002 \001(\003\022\037\n\027battle_end_timestamp_ms\030\003 \001(\003\022\021"
    "\n\tbattle_id\030\004 \001(\t\022;\n\010defender\030\005 \001(\0132).PO"
    "GOProtos.Data.Battle.BattleParticipant\0225"
    "\n\nbattle_log\030\006 \001(\0132!.POGOProtos.Data.Bat"
    "tle.BattleLog\"\371\002\n\006Result\022\t\n\005UNSET\020\000\022\013\n\007S"
    "UCCESS\020\001\022\027\n\023ERROR_GYM_NOT_FOUND\020\002\022\025\n\021ERR"
    "OR_GYM_NEUTRAL\020\003\022\030\n\024ERROR_GYM_WRONG_TEAM"
    "\020\004\022\023\n\017ERROR_GYM_EMPTY\020\005\022\032\n\026ERROR_INVALID"
    "_DEFENDER\020\006\022)\n%ERROR_TRAINING_INVALID_AT"
    "TACKER_COUNT\020\007\022\035\n\031ERROR_ALL_POKEMON_FAIN"
    "TED\020\010\022\032\n\026ERROR_TOO_MANY_BATTLES\020\t\022\032\n\026ERR"
    "OR_TOO_MANY_PLAYERS\020\n\022\034\n\030ERROR_GYM_BATTL"
    "E_LOCKOUT\020\013\022$\n ERROR_PLAYER_BELOW_MINIMU"
    "M_LEVEL\020\014\022\026\n\022ERROR_NOT_IN_RANGE\020\rb\006proto"
    "3", 881);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/StartGymBattleResponse.proto", &protobuf_RegisterTypes);
  StartGymBattleResponse::default_instance_ = new StartGymBattleResponse();
  StartGymBattleResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* StartGymBattleResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartGymBattleResponse_Result_descriptor_;
}
bool StartGymBattleResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const StartGymBattleResponse_Result StartGymBattleResponse::UNSET;
const StartGymBattleResponse_Result StartGymBattleResponse::SUCCESS;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_GYM_NOT_FOUND;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_GYM_NEUTRAL;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_GYM_WRONG_TEAM;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_GYM_EMPTY;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_INVALID_DEFENDER;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_TRAINING_INVALID_ATTACKER_COUNT;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_ALL_POKEMON_FAINTED;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_TOO_MANY_BATTLES;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_TOO_MANY_PLAYERS;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_GYM_BATTLE_LOCKOUT;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_PLAYER_BELOW_MINIMUM_LEVEL;
const StartGymBattleResponse_Result StartGymBattleResponse::ERROR_NOT_IN_RANGE;
const StartGymBattleResponse_Result StartGymBattleResponse::Result_MIN;
const StartGymBattleResponse_Result StartGymBattleResponse::Result_MAX;
const int StartGymBattleResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartGymBattleResponse::kResultFieldNumber;
const int StartGymBattleResponse::kBattleStartTimestampMsFieldNumber;
const int StartGymBattleResponse::kBattleEndTimestampMsFieldNumber;
const int StartGymBattleResponse::kBattleIdFieldNumber;
const int StartGymBattleResponse::kDefenderFieldNumber;
const int StartGymBattleResponse::kBattleLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartGymBattleResponse::StartGymBattleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.StartGymBattleResponse)
}

void StartGymBattleResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  defender_ = const_cast< ::POGOProtos::Data::Battle::BattleParticipant*>(&::POGOProtos::Data::Battle::BattleParticipant::default_instance());
  battle_log_ = const_cast< ::POGOProtos::Data::Battle::BattleLog*>(&::POGOProtos::Data::Battle::BattleLog::default_instance());
}

StartGymBattleResponse::StartGymBattleResponse(const StartGymBattleResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.StartGymBattleResponse)
}

void StartGymBattleResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_ = 0;
  battle_start_timestamp_ms_ = GOOGLE_LONGLONG(0);
  battle_end_timestamp_ms_ = GOOGLE_LONGLONG(0);
  battle_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  defender_ = NULL;
  battle_log_ = NULL;
}

StartGymBattleResponse::~StartGymBattleResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.StartGymBattleResponse)
  SharedDtor();
}

void StartGymBattleResponse::SharedDtor() {
  battle_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete defender_;
    delete battle_log_;
  }
}

void StartGymBattleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartGymBattleResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StartGymBattleResponse_descriptor_;
}

const StartGymBattleResponse& StartGymBattleResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fStartGymBattleResponse_2eproto();
  return *default_instance_;
}

StartGymBattleResponse* StartGymBattleResponse::default_instance_ = NULL;

StartGymBattleResponse* StartGymBattleResponse::New(::google::protobuf::Arena* arena) const {
  StartGymBattleResponse* n = new StartGymBattleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartGymBattleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StartGymBattleResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StartGymBattleResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(battle_start_timestamp_ms_, battle_end_timestamp_ms_);
  result_ = 0;
  battle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && defender_ != NULL) delete defender_;
  defender_ = NULL;
  if (GetArenaNoVirtual() == NULL && battle_log_ != NULL) delete battle_log_;
  battle_log_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool StartGymBattleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.StartGymBattleResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::StartGymBattleResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_battle_start_timestamp_ms;
        break;
      }

      // optional int64 battle_start_timestamp_ms = 2;
      case 2: {
        if (tag == 16) {
         parse_battle_start_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &battle_start_timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_battle_end_timestamp_ms;
        break;
      }

      // optional int64 battle_end_timestamp_ms = 3;
      case 3: {
        if (tag == 24) {
         parse_battle_end_timestamp_ms:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &battle_end_timestamp_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_battle_id;
        break;
      }

      // optional string battle_id = 4;
      case 4: {
        if (tag == 34) {
         parse_battle_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_battle_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->battle_id().data(), this->battle_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_defender;
        break;
      }

      // optional .POGOProtos.Data.Battle.BattleParticipant defender = 5;
      case 5: {
        if (tag == 42) {
         parse_defender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defender()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_battle_log;
        break;
      }

      // optional .POGOProtos.Data.Battle.BattleLog battle_log = 6;
      case 6: {
        if (tag == 50) {
         parse_battle_log:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_battle_log()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.StartGymBattleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.StartGymBattleResponse)
  return false;
#undef DO_
}

void StartGymBattleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  // optional .POGOProtos.Networking.Responses.StartGymBattleResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional int64 battle_start_timestamp_ms = 2;
  if (this->battle_start_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->battle_start_timestamp_ms(), output);
  }

  // optional int64 battle_end_timestamp_ms = 3;
  if (this->battle_end_timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->battle_end_timestamp_ms(), output);
  }

  // optional string battle_id = 4;
  if (this->battle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battle_id().data(), this->battle_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->battle_id(), output);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant defender = 5;
  if (this->has_defender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->defender_, output);
  }

  // optional .POGOProtos.Data.Battle.BattleLog battle_log = 6;
  if (this->has_battle_log()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->battle_log_, output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.StartGymBattleResponse)
}

::google::protobuf::uint8* StartGymBattleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  // optional .POGOProtos.Networking.Responses.StartGymBattleResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional int64 battle_start_timestamp_ms = 2;
  if (this->battle_start_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->battle_start_timestamp_ms(), target);
  }

  // optional int64 battle_end_timestamp_ms = 3;
  if (this->battle_end_timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->battle_end_timestamp_ms(), target);
  }

  // optional string battle_id = 4;
  if (this->battle_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->battle_id().data(), this->battle_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->battle_id(), target);
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant defender = 5;
  if (this->has_defender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->defender_, false, target);
  }

  // optional .POGOProtos.Data.Battle.BattleLog battle_log = 6;
  if (this->has_battle_log()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->battle_log_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.StartGymBattleResponse)
  return target;
}

int StartGymBattleResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.StartGymBattleResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional int64 battle_start_timestamp_ms = 2;
  if (this->battle_start_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->battle_start_timestamp_ms());
  }

  // optional int64 battle_end_timestamp_ms = 3;
  if (this->battle_end_timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->battle_end_timestamp_ms());
  }

  // optional string battle_id = 4;
  if (this->battle_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->battle_id());
  }

  // optional .POGOProtos.Data.Battle.BattleParticipant defender = 5;
  if (this->has_defender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->defender_);
  }

  // optional .POGOProtos.Data.Battle.BattleLog battle_log = 6;
  if (this->has_battle_log()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->battle_log_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartGymBattleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const StartGymBattleResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StartGymBattleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.StartGymBattleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.StartGymBattleResponse)
    MergeFrom(*source);
  }
}

void StartGymBattleResponse::MergeFrom(const StartGymBattleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.battle_start_timestamp_ms() != 0) {
    set_battle_start_timestamp_ms(from.battle_start_timestamp_ms());
  }
  if (from.battle_end_timestamp_ms() != 0) {
    set_battle_end_timestamp_ms(from.battle_end_timestamp_ms());
  }
  if (from.battle_id().size() > 0) {

    battle_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.battle_id_);
  }
  if (from.has_defender()) {
    mutable_defender()->::POGOProtos::Data::Battle::BattleParticipant::MergeFrom(from.defender());
  }
  if (from.has_battle_log()) {
    mutable_battle_log()->::POGOProtos::Data::Battle::BattleLog::MergeFrom(from.battle_log());
  }
}

void StartGymBattleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartGymBattleResponse::CopyFrom(const StartGymBattleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.StartGymBattleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartGymBattleResponse::IsInitialized() const {

  return true;
}

void StartGymBattleResponse::Swap(StartGymBattleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartGymBattleResponse::InternalSwap(StartGymBattleResponse* other) {
  std::swap(result_, other->result_);
  std::swap(battle_start_timestamp_ms_, other->battle_start_timestamp_ms_);
  std::swap(battle_end_timestamp_ms_, other->battle_end_timestamp_ms_);
  battle_id_.Swap(&other->battle_id_);
  std::swap(defender_, other->defender_);
  std::swap(battle_log_, other->battle_log_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartGymBattleResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StartGymBattleResponse_descriptor_;
  metadata.reflection = StartGymBattleResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartGymBattleResponse

// optional .POGOProtos.Networking.Responses.StartGymBattleResponse.Result result = 1;
void StartGymBattleResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::StartGymBattleResponse_Result StartGymBattleResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::StartGymBattleResponse_Result >(result_);
}
 void StartGymBattleResponse::set_result(::POGOProtos::Networking::Responses::StartGymBattleResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.StartGymBattleResponse.result)
}

// optional int64 battle_start_timestamp_ms = 2;
void StartGymBattleResponse::clear_battle_start_timestamp_ms() {
  battle_start_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 StartGymBattleResponse::battle_start_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_start_timestamp_ms)
  return battle_start_timestamp_ms_;
}
 void StartGymBattleResponse::set_battle_start_timestamp_ms(::google::protobuf::int64 value) {
  
  battle_start_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_start_timestamp_ms)
}

// optional int64 battle_end_timestamp_ms = 3;
void StartGymBattleResponse::clear_battle_end_timestamp_ms() {
  battle_end_timestamp_ms_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 StartGymBattleResponse::battle_end_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_end_timestamp_ms)
  return battle_end_timestamp_ms_;
}
 void StartGymBattleResponse::set_battle_end_timestamp_ms(::google::protobuf::int64 value) {
  
  battle_end_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_end_timestamp_ms)
}

// optional string battle_id = 4;
void StartGymBattleResponse::clear_battle_id() {
  battle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& StartGymBattleResponse::battle_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
  return battle_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartGymBattleResponse::set_battle_id(const ::std::string& value) {
  
  battle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
}
 void StartGymBattleResponse::set_battle_id(const char* value) {
  
  battle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
}
 void StartGymBattleResponse::set_battle_id(const char* value, size_t size) {
  
  battle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
}
 ::std::string* StartGymBattleResponse::mutable_battle_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
  return battle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* StartGymBattleResponse::release_battle_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
  
  return battle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void StartGymBattleResponse::set_allocated_battle_id(::std::string* battle_id) {
  if (battle_id != NULL) {
    
  } else {
    
  }
  battle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), battle_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_id)
}

// optional .POGOProtos.Data.Battle.BattleParticipant defender = 5;
bool StartGymBattleResponse::has_defender() const {
  return !_is_default_instance_ && defender_ != NULL;
}
void StartGymBattleResponse::clear_defender() {
  if (GetArenaNoVirtual() == NULL && defender_ != NULL) delete defender_;
  defender_ = NULL;
}
const ::POGOProtos::Data::Battle::BattleParticipant& StartGymBattleResponse::defender() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.defender)
  return defender_ != NULL ? *defender_ : *default_instance_->defender_;
}
::POGOProtos::Data::Battle::BattleParticipant* StartGymBattleResponse::mutable_defender() {
  
  if (defender_ == NULL) {
    defender_ = new ::POGOProtos::Data::Battle::BattleParticipant;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.StartGymBattleResponse.defender)
  return defender_;
}
::POGOProtos::Data::Battle::BattleParticipant* StartGymBattleResponse::release_defender() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.StartGymBattleResponse.defender)
  
  ::POGOProtos::Data::Battle::BattleParticipant* temp = defender_;
  defender_ = NULL;
  return temp;
}
void StartGymBattleResponse::set_allocated_defender(::POGOProtos::Data::Battle::BattleParticipant* defender) {
  delete defender_;
  defender_ = defender;
  if (defender) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.StartGymBattleResponse.defender)
}

// optional .POGOProtos.Data.Battle.BattleLog battle_log = 6;
bool StartGymBattleResponse::has_battle_log() const {
  return !_is_default_instance_ && battle_log_ != NULL;
}
void StartGymBattleResponse::clear_battle_log() {
  if (GetArenaNoVirtual() == NULL && battle_log_ != NULL) delete battle_log_;
  battle_log_ = NULL;
}
const ::POGOProtos::Data::Battle::BattleLog& StartGymBattleResponse::battle_log() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_log)
  return battle_log_ != NULL ? *battle_log_ : *default_instance_->battle_log_;
}
::POGOProtos::Data::Battle::BattleLog* StartGymBattleResponse::mutable_battle_log() {
  
  if (battle_log_ == NULL) {
    battle_log_ = new ::POGOProtos::Data::Battle::BattleLog;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_log)
  return battle_log_;
}
::POGOProtos::Data::Battle::BattleLog* StartGymBattleResponse::release_battle_log() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_log)
  
  ::POGOProtos::Data::Battle::BattleLog* temp = battle_log_;
  battle_log_ = NULL;
  return temp;
}
void StartGymBattleResponse::set_allocated_battle_log(::POGOProtos::Data::Battle::BattleLog* battle_log) {
  delete battle_log_;
  battle_log_ = battle_log;
  if (battle_log) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Responses.StartGymBattleResponse.battle_log)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
