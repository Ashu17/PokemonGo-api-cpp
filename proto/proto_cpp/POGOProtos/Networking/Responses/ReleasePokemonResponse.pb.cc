// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/ReleasePokemonResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Responses/ReleasePokemonResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Responses {

namespace {

const ::google::protobuf::Descriptor* ReleasePokemonResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReleasePokemonResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ReleasePokemonResponse_Result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Responses/ReleasePokemonResponse.proto");
  GOOGLE_CHECK(file != NULL);
  ReleasePokemonResponse_descriptor_ = file->message_type(0);
  static const int ReleasePokemonResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleasePokemonResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleasePokemonResponse, candy_awarded_),
  };
  ReleasePokemonResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReleasePokemonResponse_descriptor_,
      ReleasePokemonResponse::default_instance_,
      ReleasePokemonResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReleasePokemonResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleasePokemonResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReleasePokemonResponse, _is_default_instance_));
  ReleasePokemonResponse_Result_descriptor_ = ReleasePokemonResponse_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReleasePokemonResponse_descriptor_, &ReleasePokemonResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() {
  delete ReleasePokemonResponse::default_instance_;
  delete ReleasePokemonResponse_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n<POGOProtos/Networking/Responses/Releas"
    "ePokemonResponse.proto\022\037POGOProtos.Netwo"
    "rking.Responses\"\335\001\n\026ReleasePokemonRespon"
    "se\022N\n\006result\030\001 \001(\0162>.POGOProtos.Networki"
    "ng.Responses.ReleasePokemonResponse.Resu"
    "lt\022\025\n\rcandy_awarded\030\002 \001(\005\"\\\n\006Result\022\t\n\005U"
    "NSET\020\000\022\013\n\007SUCCESS\020\001\022\024\n\020POKEMON_DEPLOYED\020"
    "\002\022\n\n\006FAILED\020\003\022\030\n\024ERROR_POKEMON_IS_EGG\020\004b"
    "\006proto3", 327);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Responses/ReleasePokemonResponse.proto", &protobuf_RegisterTypes);
  ReleasePokemonResponse::default_instance_ = new ReleasePokemonResponse();
  ReleasePokemonResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* ReleasePokemonResponse_Result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReleasePokemonResponse_Result_descriptor_;
}
bool ReleasePokemonResponse_Result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReleasePokemonResponse_Result ReleasePokemonResponse::UNSET;
const ReleasePokemonResponse_Result ReleasePokemonResponse::SUCCESS;
const ReleasePokemonResponse_Result ReleasePokemonResponse::POKEMON_DEPLOYED;
const ReleasePokemonResponse_Result ReleasePokemonResponse::FAILED;
const ReleasePokemonResponse_Result ReleasePokemonResponse::ERROR_POKEMON_IS_EGG;
const ReleasePokemonResponse_Result ReleasePokemonResponse::Result_MIN;
const ReleasePokemonResponse_Result ReleasePokemonResponse::Result_MAX;
const int ReleasePokemonResponse::Result_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReleasePokemonResponse::kResultFieldNumber;
const int ReleasePokemonResponse::kCandyAwardedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReleasePokemonResponse::ReleasePokemonResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Responses.ReleasePokemonResponse)
}

void ReleasePokemonResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReleasePokemonResponse::ReleasePokemonResponse(const ReleasePokemonResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Responses.ReleasePokemonResponse)
}

void ReleasePokemonResponse::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  result_ = 0;
  candy_awarded_ = 0;
}

ReleasePokemonResponse::~ReleasePokemonResponse() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  SharedDtor();
}

void ReleasePokemonResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReleasePokemonResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReleasePokemonResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReleasePokemonResponse_descriptor_;
}

const ReleasePokemonResponse& ReleasePokemonResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fResponses_2fReleasePokemonResponse_2eproto();
  return *default_instance_;
}

ReleasePokemonResponse* ReleasePokemonResponse::default_instance_ = NULL;

ReleasePokemonResponse* ReleasePokemonResponse::New(::google::protobuf::Arena* arena) const {
  ReleasePokemonResponse* n = new ReleasePokemonResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReleasePokemonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReleasePokemonResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReleasePokemonResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(result_, candy_awarded_);

#undef ZR_HELPER_
#undef ZR_

}

bool ReleasePokemonResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Networking.Responses.ReleasePokemonResponse.Result result = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_result(static_cast< ::POGOProtos::Networking::Responses::ReleasePokemonResponse_Result >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_candy_awarded;
        break;
      }

      // optional int32 candy_awarded = 2;
      case 2: {
        if (tag == 16) {
         parse_candy_awarded:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &candy_awarded_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  return false;
#undef DO_
}

void ReleasePokemonResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  // optional .POGOProtos.Networking.Responses.ReleasePokemonResponse.Result result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional int32 candy_awarded = 2;
  if (this->candy_awarded() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->candy_awarded(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Responses.ReleasePokemonResponse)
}

::google::protobuf::uint8* ReleasePokemonResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  // optional .POGOProtos.Networking.Responses.ReleasePokemonResponse.Result result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional int32 candy_awarded = 2;
  if (this->candy_awarded() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->candy_awarded(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  return target;
}

int ReleasePokemonResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  int total_size = 0;

  // optional .POGOProtos.Networking.Responses.ReleasePokemonResponse.Result result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  // optional int32 candy_awarded = 2;
  if (this->candy_awarded() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->candy_awarded());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReleasePokemonResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReleasePokemonResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReleasePokemonResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Responses.ReleasePokemonResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Responses.ReleasePokemonResponse)
    MergeFrom(*source);
  }
}

void ReleasePokemonResponse::MergeFrom(const ReleasePokemonResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.candy_awarded() != 0) {
    set_candy_awarded(from.candy_awarded());
  }
}

void ReleasePokemonResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReleasePokemonResponse::CopyFrom(const ReleasePokemonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Responses.ReleasePokemonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReleasePokemonResponse::IsInitialized() const {

  return true;
}

void ReleasePokemonResponse::Swap(ReleasePokemonResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReleasePokemonResponse::InternalSwap(ReleasePokemonResponse* other) {
  std::swap(result_, other->result_);
  std::swap(candy_awarded_, other->candy_awarded_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReleasePokemonResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReleasePokemonResponse_descriptor_;
  metadata.reflection = ReleasePokemonResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReleasePokemonResponse

// optional .POGOProtos.Networking.Responses.ReleasePokemonResponse.Result result = 1;
void ReleasePokemonResponse::clear_result() {
  result_ = 0;
}
 ::POGOProtos::Networking::Responses::ReleasePokemonResponse_Result ReleasePokemonResponse::result() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.ReleasePokemonResponse.result)
  return static_cast< ::POGOProtos::Networking::Responses::ReleasePokemonResponse_Result >(result_);
}
 void ReleasePokemonResponse::set_result(::POGOProtos::Networking::Responses::ReleasePokemonResponse_Result value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.ReleasePokemonResponse.result)
}

// optional int32 candy_awarded = 2;
void ReleasePokemonResponse::clear_candy_awarded() {
  candy_awarded_ = 0;
}
 ::google::protobuf::int32 ReleasePokemonResponse::candy_awarded() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Responses.ReleasePokemonResponse.candy_awarded)
  return candy_awarded_;
}
 void ReleasePokemonResponse::set_candy_awarded(::google::protobuf::int32 value) {
  
  candy_awarded_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Responses.ReleasePokemonResponse.candy_awarded)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Responses
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
