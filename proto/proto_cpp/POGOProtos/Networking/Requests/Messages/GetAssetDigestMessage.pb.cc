// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/GetAssetDigestMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Requests/Messages/GetAssetDigestMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Requests {
namespace Messages {

namespace {

const ::google::protobuf::Descriptor* GetAssetDigestMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetAssetDigestMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Requests/Messages/GetAssetDigestMessage.proto");
  GOOGLE_CHECK(file != NULL);
  GetAssetDigestMessage_descriptor_ = file->message_type(0);
  static const int GetAssetDigestMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, platform_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, device_manufacturer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, device_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, locale_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, app_version_),
  };
  GetAssetDigestMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetAssetDigestMessage_descriptor_,
      GetAssetDigestMessage::default_instance_,
      GetAssetDigestMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetAssetDigestMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAssetDigestMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetAssetDigestMessage_descriptor_, &GetAssetDigestMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() {
  delete GetAssetDigestMessage::default_instance_;
  delete GetAssetDigestMessage_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Enums::protobuf_AddDesc_POGOProtos_2fEnums_2fPlatform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nCPOGOProtos/Networking/Requests/Message"
    "s/GetAssetDigestMessage.proto\022\'POGOProto"
    "s.Networking.Requests.Messages\032\037POGOProt"
    "os/Enums/Platform.proto\"\235\001\n\025GetAssetDige"
    "stMessage\022,\n\010platform\030\001 \001(\0162\032.POGOProtos"
    ".Enums.Platform\022\033\n\023device_manufacturer\030\002"
    " \001(\t\022\024\n\014device_model\030\003 \001(\t\022\016\n\006locale\030\004 \001"
    "(\t\022\023\n\013app_version\030\005 \001(\rb\006proto3", 311);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Requests/Messages/GetAssetDigestMessage.proto", &protobuf_RegisterTypes);
  GetAssetDigestMessage::default_instance_ = new GetAssetDigestMessage();
  GetAssetDigestMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAssetDigestMessage::kPlatformFieldNumber;
const int GetAssetDigestMessage::kDeviceManufacturerFieldNumber;
const int GetAssetDigestMessage::kDeviceModelFieldNumber;
const int GetAssetDigestMessage::kLocaleFieldNumber;
const int GetAssetDigestMessage::kAppVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAssetDigestMessage::GetAssetDigestMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
}

void GetAssetDigestMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetAssetDigestMessage::GetAssetDigestMessage(const GetAssetDigestMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
}

void GetAssetDigestMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  platform_ = 0;
  device_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_ = 0u;
}

GetAssetDigestMessage::~GetAssetDigestMessage() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  SharedDtor();
}

void GetAssetDigestMessage::SharedDtor() {
  device_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetAssetDigestMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAssetDigestMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetAssetDigestMessage_descriptor_;
}

const GetAssetDigestMessage& GetAssetDigestMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fGetAssetDigestMessage_2eproto();
  return *default_instance_;
}

GetAssetDigestMessage* GetAssetDigestMessage::default_instance_ = NULL;

GetAssetDigestMessage* GetAssetDigestMessage::New(::google::protobuf::Arena* arena) const {
  GetAssetDigestMessage* n = new GetAssetDigestMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAssetDigestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetAssetDigestMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetAssetDigestMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(platform_, app_version_);
  device_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetAssetDigestMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Enums.Platform platform = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_platform(static_cast< ::POGOProtos::Enums::Platform >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_device_manufacturer;
        break;
      }

      // optional string device_manufacturer = 2;
      case 2: {
        if (tag == 18) {
         parse_device_manufacturer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_manufacturer().data(), this->device_manufacturer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_device_model;
        break;
      }

      // optional string device_model = 3;
      case 3: {
        if (tag == 26) {
         parse_device_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_model().data(), this->device_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_locale;
        break;
      }

      // optional string locale = 4;
      case 4: {
        if (tag == 34) {
         parse_locale:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), this->locale().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_app_version;
        break;
      }

      // optional uint32 app_version = 5;
      case 5: {
        if (tag == 40) {
         parse_app_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_version_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  return false;
#undef DO_
}

void GetAssetDigestMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  // optional .POGOProtos.Enums.Platform platform = 1;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->platform(), output);
  }

  // optional string device_manufacturer = 2;
  if (this->device_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_manufacturer().data(), this->device_manufacturer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_manufacturer(), output);
  }

  // optional string device_model = 3;
  if (this->device_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model().data(), this->device_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_model(), output);
  }

  // optional string locale = 4;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->locale(), output);
  }

  // optional uint32 app_version = 5;
  if (this->app_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->app_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
}

::google::protobuf::uint8* GetAssetDigestMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  // optional .POGOProtos.Enums.Platform platform = 1;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->platform(), target);
  }

  // optional string device_manufacturer = 2;
  if (this->device_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_manufacturer().data(), this->device_manufacturer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_manufacturer(), target);
  }

  // optional string device_model = 3;
  if (this->device_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model().data(), this->device_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_model(), target);
  }

  // optional string locale = 4;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), this->locale().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->locale(), target);
  }

  // optional uint32 app_version = 5;
  if (this->app_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->app_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  return target;
}

int GetAssetDigestMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  int total_size = 0;

  // optional .POGOProtos.Enums.Platform platform = 1;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->platform());
  }

  // optional string device_manufacturer = 2;
  if (this->device_manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_manufacturer());
  }

  // optional string device_model = 3;
  if (this->device_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_model());
  }

  // optional string locale = 4;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // optional uint32 app_version = 5;
  if (this->app_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_version());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAssetDigestMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const GetAssetDigestMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAssetDigestMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
    MergeFrom(*source);
  }
}

void GetAssetDigestMessage::MergeFrom(const GetAssetDigestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
  if (from.device_manufacturer().size() > 0) {

    device_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_manufacturer_);
  }
  if (from.device_model().size() > 0) {

    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.app_version() != 0) {
    set_app_version(from.app_version());
  }
}

void GetAssetDigestMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAssetDigestMessage::CopyFrom(const GetAssetDigestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAssetDigestMessage::IsInitialized() const {

  return true;
}

void GetAssetDigestMessage::Swap(GetAssetDigestMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAssetDigestMessage::InternalSwap(GetAssetDigestMessage* other) {
  std::swap(platform_, other->platform_);
  device_manufacturer_.Swap(&other->device_manufacturer_);
  device_model_.Swap(&other->device_model_);
  locale_.Swap(&other->locale_);
  std::swap(app_version_, other->app_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAssetDigestMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetAssetDigestMessage_descriptor_;
  metadata.reflection = GetAssetDigestMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAssetDigestMessage

// optional .POGOProtos.Enums.Platform platform = 1;
void GetAssetDigestMessage::clear_platform() {
  platform_ = 0;
}
 ::POGOProtos::Enums::Platform GetAssetDigestMessage::platform() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.platform)
  return static_cast< ::POGOProtos::Enums::Platform >(platform_);
}
 void GetAssetDigestMessage::set_platform(::POGOProtos::Enums::Platform value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.platform)
}

// optional string device_manufacturer = 2;
void GetAssetDigestMessage::clear_device_manufacturer() {
  device_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetAssetDigestMessage::device_manufacturer() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
  return device_manufacturer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_device_manufacturer(const ::std::string& value) {
  
  device_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
}
 void GetAssetDigestMessage::set_device_manufacturer(const char* value) {
  
  device_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
}
 void GetAssetDigestMessage::set_device_manufacturer(const char* value, size_t size) {
  
  device_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
}
 ::std::string* GetAssetDigestMessage::mutable_device_manufacturer() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
  return device_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetAssetDigestMessage::release_device_manufacturer() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
  
  return device_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_allocated_device_manufacturer(::std::string* device_manufacturer) {
  if (device_manufacturer != NULL) {
    
  } else {
    
  }
  device_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_manufacturer)
}

// optional string device_model = 3;
void GetAssetDigestMessage::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetAssetDigestMessage::device_model() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
  return device_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
}
 void GetAssetDigestMessage::set_device_model(const char* value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
}
 void GetAssetDigestMessage::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
}
 ::std::string* GetAssetDigestMessage::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetAssetDigestMessage::release_device_model() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.device_model)
}

// optional string locale = 4;
void GetAssetDigestMessage::clear_locale() {
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& GetAssetDigestMessage::locale() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
  return locale_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_locale(const ::std::string& value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
}
 void GetAssetDigestMessage::set_locale(const char* value) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
}
 void GetAssetDigestMessage::set_locale(const char* value, size_t size) {
  
  locale_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
}
 ::std::string* GetAssetDigestMessage::mutable_locale() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
  return locale_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* GetAssetDigestMessage::release_locale() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
  
  return locale_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void GetAssetDigestMessage::set_allocated_locale(::std::string* locale) {
  if (locale != NULL) {
    
  } else {
    
  }
  locale_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locale);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.locale)
}

// optional uint32 app_version = 5;
void GetAssetDigestMessage::clear_app_version() {
  app_version_ = 0u;
}
 ::google::protobuf::uint32 GetAssetDigestMessage::app_version() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.app_version)
  return app_version_;
}
 void GetAssetDigestMessage::set_app_version(::google::protobuf::uint32 value) {
  
  app_version_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.GetAssetDigestMessage.app_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Requests
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
