// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/NicknamePokemonMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Requests/Messages/NicknamePokemonMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Requests {
namespace Messages {

namespace {

const ::google::protobuf::Descriptor* NicknamePokemonMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NicknamePokemonMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Requests/Messages/NicknamePokemonMessage.proto");
  GOOGLE_CHECK(file != NULL);
  NicknamePokemonMessage_descriptor_ = file->message_type(0);
  static const int NicknamePokemonMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknamePokemonMessage, pokemon_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknamePokemonMessage, nickname_),
  };
  NicknamePokemonMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NicknamePokemonMessage_descriptor_,
      NicknamePokemonMessage::default_instance_,
      NicknamePokemonMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(NicknamePokemonMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknamePokemonMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknamePokemonMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NicknamePokemonMessage_descriptor_, &NicknamePokemonMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() {
  delete NicknamePokemonMessage::default_instance_;
  delete NicknamePokemonMessage_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nDPOGOProtos/Networking/Requests/Message"
    "s/NicknamePokemonMessage.proto\022\'POGOProt"
    "os.Networking.Requests.Messages\">\n\026Nickn"
    "amePokemonMessage\022\022\n\npokemon_id\030\001 \001(\006\022\020\n"
    "\010nickname\030\002 \001(\tb\006proto3", 183);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Requests/Messages/NicknamePokemonMessage.proto", &protobuf_RegisterTypes);
  NicknamePokemonMessage::default_instance_ = new NicknamePokemonMessage();
  NicknamePokemonMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NicknamePokemonMessage::kPokemonIdFieldNumber;
const int NicknamePokemonMessage::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NicknamePokemonMessage::NicknamePokemonMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
}

void NicknamePokemonMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NicknamePokemonMessage::NicknamePokemonMessage(const NicknamePokemonMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
}

void NicknamePokemonMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pokemon_id_ = GOOGLE_ULONGLONG(0);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NicknamePokemonMessage::~NicknamePokemonMessage() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  SharedDtor();
}

void NicknamePokemonMessage::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NicknamePokemonMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NicknamePokemonMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NicknamePokemonMessage_descriptor_;
}

const NicknamePokemonMessage& NicknamePokemonMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fNicknamePokemonMessage_2eproto();
  return *default_instance_;
}

NicknamePokemonMessage* NicknamePokemonMessage::default_instance_ = NULL;

NicknamePokemonMessage* NicknamePokemonMessage::New(::google::protobuf::Arena* arena) const {
  NicknamePokemonMessage* n = new NicknamePokemonMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NicknamePokemonMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  pokemon_id_ = GOOGLE_ULONGLONG(0);
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NicknamePokemonMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 pokemon_id = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &pokemon_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nickname;
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (tag == 18) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  return false;
#undef DO_
}

void NicknamePokemonMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->pokemon_id(), output);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
}

::google::protobuf::uint8* NicknamePokemonMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->pokemon_id(), target);
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  return target;
}

int NicknamePokemonMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  int total_size = 0;

  // optional fixed64 pokemon_id = 1;
  if (this->pokemon_id() != 0) {
    total_size += 1 + 8;
  }

  // optional string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NicknamePokemonMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NicknamePokemonMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NicknamePokemonMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
    MergeFrom(*source);
  }
}

void NicknamePokemonMessage::MergeFrom(const NicknamePokemonMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.pokemon_id() != 0) {
    set_pokemon_id(from.pokemon_id());
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void NicknamePokemonMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NicknamePokemonMessage::CopyFrom(const NicknamePokemonMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NicknamePokemonMessage::IsInitialized() const {

  return true;
}

void NicknamePokemonMessage::Swap(NicknamePokemonMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NicknamePokemonMessage::InternalSwap(NicknamePokemonMessage* other) {
  std::swap(pokemon_id_, other->pokemon_id_);
  nickname_.Swap(&other->nickname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NicknamePokemonMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NicknamePokemonMessage_descriptor_;
  metadata.reflection = NicknamePokemonMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NicknamePokemonMessage

// optional fixed64 pokemon_id = 1;
void NicknamePokemonMessage::clear_pokemon_id() {
  pokemon_id_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 NicknamePokemonMessage::pokemon_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.pokemon_id)
  return pokemon_id_;
}
 void NicknamePokemonMessage::set_pokemon_id(::google::protobuf::uint64 value) {
  
  pokemon_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.pokemon_id)
}

// optional string nickname = 2;
void NicknamePokemonMessage::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NicknamePokemonMessage::nickname() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NicknamePokemonMessage::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
}
 void NicknamePokemonMessage::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
}
 void NicknamePokemonMessage::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
}
 ::std::string* NicknamePokemonMessage::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NicknamePokemonMessage::release_nickname() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NicknamePokemonMessage::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Requests.Messages.NicknamePokemonMessage.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Requests
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
