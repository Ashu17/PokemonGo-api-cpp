// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/MarkTutorialCompleteMessage.proto

#ifndef PROTOBUF_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "POGOProtos/Enums/TutorialState.pb.h"
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Requests {
namespace Messages {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();

class MarkTutorialCompleteMessage;

// ===================================================================

class MarkTutorialCompleteMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage) */ {
 public:
  MarkTutorialCompleteMessage();
  virtual ~MarkTutorialCompleteMessage();

  MarkTutorialCompleteMessage(const MarkTutorialCompleteMessage& from);

  inline MarkTutorialCompleteMessage& operator=(const MarkTutorialCompleteMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkTutorialCompleteMessage& default_instance();

  void Swap(MarkTutorialCompleteMessage* other);

  // implements Message ----------------------------------------------

  inline MarkTutorialCompleteMessage* New() const { return New(NULL); }

  MarkTutorialCompleteMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MarkTutorialCompleteMessage& from);
  void MergeFrom(const MarkTutorialCompleteMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MarkTutorialCompleteMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .POGOProtos.Enums.TutorialState tutorials_completed = 1;
  int tutorials_completed_size() const;
  void clear_tutorials_completed();
  static const int kTutorialsCompletedFieldNumber = 1;
  ::POGOProtos::Enums::TutorialState tutorials_completed(int index) const;
  void set_tutorials_completed(int index, ::POGOProtos::Enums::TutorialState value);
  void add_tutorials_completed(::POGOProtos::Enums::TutorialState value);
  const ::google::protobuf::RepeatedField<int>& tutorials_completed() const;
  ::google::protobuf::RepeatedField<int>* mutable_tutorials_completed();

  // optional bool send_marketing_emails = 2;
  void clear_send_marketing_emails();
  static const int kSendMarketingEmailsFieldNumber = 2;
  bool send_marketing_emails() const;
  void set_send_marketing_emails(bool value);

  // optional bool send_push_notifications = 3;
  void clear_send_push_notifications();
  static const int kSendPushNotificationsFieldNumber = 3;
  bool send_push_notifications() const;
  void set_send_push_notifications(bool value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField<int> tutorials_completed_;
  mutable int _tutorials_completed_cached_byte_size_;
  bool send_marketing_emails_;
  bool send_push_notifications_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto();

  void InitAsDefaultInstance();
  static MarkTutorialCompleteMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkTutorialCompleteMessage

// repeated .POGOProtos.Enums.TutorialState tutorials_completed = 1;
inline int MarkTutorialCompleteMessage::tutorials_completed_size() const {
  return tutorials_completed_.size();
}
inline void MarkTutorialCompleteMessage::clear_tutorials_completed() {
  tutorials_completed_.Clear();
}
inline ::POGOProtos::Enums::TutorialState MarkTutorialCompleteMessage::tutorials_completed(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.tutorials_completed)
  return static_cast< ::POGOProtos::Enums::TutorialState >(tutorials_completed_.Get(index));
}
inline void MarkTutorialCompleteMessage::set_tutorials_completed(int index, ::POGOProtos::Enums::TutorialState value) {
  tutorials_completed_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.tutorials_completed)
}
inline void MarkTutorialCompleteMessage::add_tutorials_completed(::POGOProtos::Enums::TutorialState value) {
  tutorials_completed_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.tutorials_completed)
}
inline const ::google::protobuf::RepeatedField<int>&
MarkTutorialCompleteMessage::tutorials_completed() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.tutorials_completed)
  return tutorials_completed_;
}
inline ::google::protobuf::RepeatedField<int>*
MarkTutorialCompleteMessage::mutable_tutorials_completed() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.tutorials_completed)
  return &tutorials_completed_;
}

// optional bool send_marketing_emails = 2;
inline void MarkTutorialCompleteMessage::clear_send_marketing_emails() {
  send_marketing_emails_ = false;
}
inline bool MarkTutorialCompleteMessage::send_marketing_emails() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.send_marketing_emails)
  return send_marketing_emails_;
}
inline void MarkTutorialCompleteMessage::set_send_marketing_emails(bool value) {
  
  send_marketing_emails_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.send_marketing_emails)
}

// optional bool send_push_notifications = 3;
inline void MarkTutorialCompleteMessage::clear_send_push_notifications() {
  send_push_notifications_ = false;
}
inline bool MarkTutorialCompleteMessage::send_push_notifications() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.send_push_notifications)
  return send_push_notifications_;
}
inline void MarkTutorialCompleteMessage::set_send_push_notifications(bool value) {
  
  send_push_notifications_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.MarkTutorialCompleteMessage.send_push_notifications)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Requests
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fNetworking_2fRequests_2fMessages_2fMarkTutorialCompleteMessage_2eproto__INCLUDED
