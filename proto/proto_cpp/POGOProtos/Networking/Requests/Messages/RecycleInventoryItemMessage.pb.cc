// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Requests/Messages/RecycleInventoryItemMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Requests/Messages/RecycleInventoryItemMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Requests {
namespace Messages {

namespace {

const ::google::protobuf::Descriptor* RecycleInventoryItemMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecycleInventoryItemMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Requests/Messages/RecycleInventoryItemMessage.proto");
  GOOGLE_CHECK(file != NULL);
  RecycleInventoryItemMessage_descriptor_ = file->message_type(0);
  static const int RecycleInventoryItemMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecycleInventoryItemMessage, item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecycleInventoryItemMessage, count_),
  };
  RecycleInventoryItemMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RecycleInventoryItemMessage_descriptor_,
      RecycleInventoryItemMessage::default_instance_,
      RecycleInventoryItemMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(RecycleInventoryItemMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecycleInventoryItemMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecycleInventoryItemMessage, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RecycleInventoryItemMessage_descriptor_, &RecycleInventoryItemMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() {
  delete RecycleInventoryItemMessage::default_instance_;
  delete RecycleInventoryItemMessage_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::POGOProtos::Inventory::Item::protobuf_AddDesc_POGOProtos_2fInventory_2fItem_2fItemId_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\nIPOGOProtos/Networking/Requests/Message"
    "s/RecycleInventoryItemMessage.proto\022\'POG"
    "OProtos.Networking.Requests.Messages\032&PO"
    "GOProtos/Inventory/Item/ItemId.proto\"`\n\033"
    "RecycleInventoryItemMessage\0222\n\007item_id\030\001"
    " \001(\0162!.POGOProtos.Inventory.Item.ItemId\022"
    "\r\n\005count\030\002 \001(\005b\006proto3", 262);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Requests/Messages/RecycleInventoryItemMessage.proto", &protobuf_RegisterTypes);
  RecycleInventoryItemMessage::default_instance_ = new RecycleInventoryItemMessage();
  RecycleInventoryItemMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecycleInventoryItemMessage::kItemIdFieldNumber;
const int RecycleInventoryItemMessage::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecycleInventoryItemMessage::RecycleInventoryItemMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
}

void RecycleInventoryItemMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

RecycleInventoryItemMessage::RecycleInventoryItemMessage(const RecycleInventoryItemMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
}

void RecycleInventoryItemMessage::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  item_id_ = 0;
  count_ = 0;
}

RecycleInventoryItemMessage::~RecycleInventoryItemMessage() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  SharedDtor();
}

void RecycleInventoryItemMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RecycleInventoryItemMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecycleInventoryItemMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecycleInventoryItemMessage_descriptor_;
}

const RecycleInventoryItemMessage& RecycleInventoryItemMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fRequests_2fMessages_2fRecycleInventoryItemMessage_2eproto();
  return *default_instance_;
}

RecycleInventoryItemMessage* RecycleInventoryItemMessage::default_instance_ = NULL;

RecycleInventoryItemMessage* RecycleInventoryItemMessage::New(::google::protobuf::Arena* arena) const {
  RecycleInventoryItemMessage* n = new RecycleInventoryItemMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecycleInventoryItemMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RecycleInventoryItemMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RecycleInventoryItemMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item_id_, count_);

#undef ZR_HELPER_
#undef ZR_

}

bool RecycleInventoryItemMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item_id(static_cast< ::POGOProtos::Inventory::Item::ItemId >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  return false;
#undef DO_
}

void RecycleInventoryItemMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->item_id(), output);
  }

  // optional int32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
}

::google::protobuf::uint8* RecycleInventoryItemMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->item_id(), target);
  }

  // optional int32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  return target;
}

int RecycleInventoryItemMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  int total_size = 0;

  // optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item_id());
  }

  // optional int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecycleInventoryItemMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const RecycleInventoryItemMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const RecycleInventoryItemMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
    MergeFrom(*source);
  }
}

void RecycleInventoryItemMessage::MergeFrom(const RecycleInventoryItemMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void RecycleInventoryItemMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecycleInventoryItemMessage::CopyFrom(const RecycleInventoryItemMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecycleInventoryItemMessage::IsInitialized() const {

  return true;
}

void RecycleInventoryItemMessage::Swap(RecycleInventoryItemMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecycleInventoryItemMessage::InternalSwap(RecycleInventoryItemMessage* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecycleInventoryItemMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecycleInventoryItemMessage_descriptor_;
  metadata.reflection = RecycleInventoryItemMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RecycleInventoryItemMessage

// optional .POGOProtos.Inventory.Item.ItemId item_id = 1;
void RecycleInventoryItemMessage::clear_item_id() {
  item_id_ = 0;
}
 ::POGOProtos::Inventory::Item::ItemId RecycleInventoryItemMessage::item_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage.item_id)
  return static_cast< ::POGOProtos::Inventory::Item::ItemId >(item_id_);
}
 void RecycleInventoryItemMessage::set_item_id(::POGOProtos::Inventory::Item::ItemId value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage.item_id)
}

// optional int32 count = 2;
void RecycleInventoryItemMessage::clear_count() {
  count_ = 0;
}
 ::google::protobuf::int32 RecycleInventoryItemMessage::count() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage.count)
  return count_;
}
 void RecycleInventoryItemMessage::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Requests.Messages.RecycleInventoryItemMessage.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace Requests
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
