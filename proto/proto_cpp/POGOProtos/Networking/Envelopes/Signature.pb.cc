// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Envelopes/Signature.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "POGOProtos/Networking/Envelopes/Signature.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Envelopes {

namespace {

const ::google::protobuf::Descriptor* Signature_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_LocationFix_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_LocationFix_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_AndroidGpsInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_AndroidGpsInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_SensorInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_SensorInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_DeviceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_DeviceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* Signature_ActivityStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Signature_ActivityStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() {
  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "POGOProtos/Networking/Envelopes/Signature.proto");
  GOOGLE_CHECK(file != NULL);
  Signature_descriptor_ = file->message_type(0);
  static const int Signature_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, timestamp_since_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, location_fix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, gps_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, sensor_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, device_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, activity_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, location_hash1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, location_hash2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, unknown22_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, request_hash_),
  };
  Signature_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_descriptor_,
      Signature::default_instance_,
      Signature_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature, _is_default_instance_));
  Signature_LocationFix_descriptor_ = Signature_descriptor_->nested_type(0);
  static const int Signature_LocationFix_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, provider_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, timestamp_since_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, longitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, horizontal_accuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, altitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, vertical_accuracy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, provider_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, floor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, location_type_),
  };
  Signature_LocationFix_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_LocationFix_descriptor_,
      Signature_LocationFix::default_instance_,
      Signature_LocationFix_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature_LocationFix),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_LocationFix, _is_default_instance_));
  Signature_AndroidGpsInfo_descriptor_ = Signature_descriptor_->nested_type(1);
  static const int Signature_AndroidGpsInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, time_to_fix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, satellites_prn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, snr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, azimuth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, elevation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, has_almanac_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, has_ephemeris_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, used_in_fix_),
  };
  Signature_AndroidGpsInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_AndroidGpsInfo_descriptor_,
      Signature_AndroidGpsInfo::default_instance_,
      Signature_AndroidGpsInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature_AndroidGpsInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_AndroidGpsInfo, _is_default_instance_));
  Signature_SensorInfo_descriptor_ = Signature_descriptor_->nested_type(2);
  static const int Signature_SensorInfo_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, timestamp_snapshot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, magnetometer_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, magnetometer_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, magnetometer_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, angle_normalized_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, angle_normalized_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, angle_normalized_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_raw_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_raw_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_raw_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, gyroscope_raw_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, gyroscope_raw_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, gyroscope_raw_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_normalized_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_normalized_y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accel_normalized_z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, accelerometer_axes_),
  };
  Signature_SensorInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_SensorInfo_descriptor_,
      Signature_SensorInfo::default_instance_,
      Signature_SensorInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature_SensorInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_SensorInfo, _is_default_instance_));
  Signature_DeviceInfo_descriptor_ = Signature_descriptor_->nested_type(3);
  static const int Signature_DeviceInfo_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, device_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, android_board_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, android_bootloader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, device_brand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, device_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, device_model_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, device_model_boot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, hardware_manufacturer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, hardware_model_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, firmware_brand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, firmware_tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, firmware_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, firmware_fingerprint_),
  };
  Signature_DeviceInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_DeviceInfo_descriptor_,
      Signature_DeviceInfo::default_instance_,
      Signature_DeviceInfo_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature_DeviceInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_DeviceInfo, _is_default_instance_));
  Signature_ActivityStatus_descriptor_ = Signature_descriptor_->nested_type(4);
  static const int Signature_ActivityStatus_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, start_time_ms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, unknown_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, walking_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, running_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, stationary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, automotive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, tilting_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, cycling_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, status_),
  };
  Signature_ActivityStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Signature_ActivityStatus_descriptor_,
      Signature_ActivityStatus::default_instance_,
      Signature_ActivityStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(Signature_ActivityStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Signature_ActivityStatus, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_descriptor_, &Signature::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_LocationFix_descriptor_, &Signature_LocationFix::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_AndroidGpsInfo_descriptor_, &Signature_AndroidGpsInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_SensorInfo_descriptor_, &Signature_SensorInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_DeviceInfo_descriptor_, &Signature_DeviceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Signature_ActivityStatus_descriptor_, &Signature_ActivityStatus::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() {
  delete Signature::default_instance_;
  delete Signature_reflection_;
  delete Signature_LocationFix::default_instance_;
  delete Signature_LocationFix_reflection_;
  delete Signature_AndroidGpsInfo::default_instance_;
  delete Signature_AndroidGpsInfo_reflection_;
  delete Signature_SensorInfo::default_instance_;
  delete Signature_SensorInfo_reflection_;
  delete Signature_DeviceInfo::default_instance_;
  delete Signature_DeviceInfo_reflection_;
  delete Signature_ActivityStatus::default_instance_;
  delete Signature_ActivityStatus_reflection_;
}

void protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n/POGOProtos/Networking/Envelopes/Signat"
    "ure.proto\022\037POGOProtos.Networking.Envelop"
    "es\"\232\017\n\tSignature\022\035\n\025timestamp_since_star"
    "t\030\002 \001(\004\022L\n\014location_fix\030\004 \003(\01326.POGOProt"
    "os.Networking.Envelopes.Signature.Locati"
    "onFix\022K\n\010gps_info\030\005 \001(\01329.POGOProtos.Net"
    "working.Envelopes.Signature.AndroidGpsIn"
    "fo\022J\n\013sensor_info\030\007 \001(\01325.POGOProtos.Net"
    "working.Envelopes.Signature.SensorInfo\022J"
    "\n\013device_info\030\010 \001(\01325.POGOProtos.Network"
    "ing.Envelopes.Signature.DeviceInfo\022R\n\017ac"
    "tivity_status\030\t \001(\01329.POGOProtos.Network"
    "ing.Envelopes.Signature.ActivityStatus\022\026"
    "\n\016location_hash1\030\n \001(\r\022\026\n\016location_hash2"
    "\030\024 \001(\r\022\021\n\tunknown22\030\026 \001(\014\022\021\n\ttimestamp\030\027"
    " \001(\004\022\024\n\014request_hash\030\030 \003(\004\032\354\001\n\013LocationF"
    "ix\022\020\n\010provider\030\001 \001(\t\022\035\n\025timestamp_since_"
    "start\030\002 \001(\004\022\020\n\010latitude\030\r \001(\002\022\021\n\tlongitu"
    "de\030\016 \001(\002\022\033\n\023horizontal_accuracy\030\024 \001(\002\022\020\n"
    "\010altitude\030\025 \001(\002\022\031\n\021vertical_accuracy\030\026 \001"
    "(\002\022\027\n\017provider_status\030\032 \001(\004\022\r\n\005floor\030\033 \001"
    "(\r\022\025\n\rlocation_type\030\034 \001(\004\032\257\001\n\016AndroidGps"
    "Info\022\023\n\013time_to_fix\030\001 \001(\004\022\026\n\016satellites_"
    "prn\030\002 \003(\005\022\013\n\003snr\030\003 \003(\002\022\017\n\007azimuth\030\004 \003(\002\022"
    "\021\n\televation\030\005 \003(\002\022\023\n\013has_almanac\030\006 \003(\010\022"
    "\025\n\rhas_ephemeris\030\007 \003(\010\022\023\n\013used_in_fix\030\010 "
    "\003(\010\032\276\003\n\nSensorInfo\022\032\n\022timestamp_snapshot"
    "\030\001 \001(\004\022\026\n\016magnetometer_x\030\003 \001(\001\022\026\n\016magnet"
    "ometer_y\030\004 \001(\001\022\026\n\016magnetometer_z\030\005 \001(\001\022\032"
    "\n\022angle_normalized_x\030\006 \001(\001\022\032\n\022angle_norm"
    "alized_y\030\007 \001(\001\022\032\n\022angle_normalized_z\030\010 \001"
    "(\001\022\023\n\013accel_raw_x\030\n \001(\001\022\023\n\013accel_raw_y\030\013"
    " \001(\001\022\023\n\013accel_raw_z\030\014 \001(\001\022\027\n\017gyroscope_r"
    "aw_x\030\r \001(\001\022\027\n\017gyroscope_raw_y\030\016 \001(\001\022\027\n\017g"
    "yroscope_raw_z\030\017 \001(\001\022\032\n\022accel_normalized"
    "_x\030\020 \001(\001\022\032\n\022accel_normalized_y\030\021 \001(\001\022\032\n\022"
    "accel_normalized_z\030\022 \001(\001\022\032\n\022acceleromete"
    "r_axes\030\023 \001(\004\032\332\002\n\nDeviceInfo\022\021\n\tdevice_id"
    "\030\001 \001(\t\022\032\n\022android_board_name\030\002 \001(\t\022\032\n\022an"
    "droid_bootloader\030\003 \001(\t\022\024\n\014device_brand\030\004"
    " \001(\t\022\024\n\014device_model\030\005 \001(\t\022\037\n\027device_mod"
    "el_identifier\030\006 \001(\t\022\031\n\021device_model_boot"
    "\030\007 \001(\t\022\035\n\025hardware_manufacturer\030\010 \001(\t\022\026\n"
    "\016hardware_model\030\t \001(\t\022\026\n\016firmware_brand\030"
    "\n \001(\t\022\025\n\rfirmware_tags\030\014 \001(\t\022\025\n\rfirmware"
    "_type\030\r \001(\t\022\034\n\024firmware_fingerprint\030\016 \001("
    "\t\032\273\001\n\016ActivityStatus\022\025\n\rstart_time_ms\030\001 "
    "\001(\004\022\026\n\016unknown_status\030\002 \001(\010\022\017\n\007walking\030\003"
    " \001(\010\022\017\n\007running\030\004 \001(\010\022\022\n\nstationary\030\005 \001("
    "\010\022\022\n\nautomotive\030\006 \001(\010\022\017\n\007tilting\030\007 \001(\010\022\017"
    "\n\007cycling\030\010 \001(\010\022\016\n\006status\030\t \001(\014b\006proto3", 2039);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "POGOProtos/Networking/Envelopes/Signature.proto", &protobuf_RegisterTypes);
  Signature::default_instance_ = new Signature();
  Signature_LocationFix::default_instance_ = new Signature_LocationFix();
  Signature_AndroidGpsInfo::default_instance_ = new Signature_AndroidGpsInfo();
  Signature_SensorInfo::default_instance_ = new Signature_SensorInfo();
  Signature_DeviceInfo::default_instance_ = new Signature_DeviceInfo();
  Signature_ActivityStatus::default_instance_ = new Signature_ActivityStatus();
  Signature::default_instance_->InitAsDefaultInstance();
  Signature_LocationFix::default_instance_->InitAsDefaultInstance();
  Signature_AndroidGpsInfo::default_instance_->InitAsDefaultInstance();
  Signature_SensorInfo::default_instance_->InitAsDefaultInstance();
  Signature_DeviceInfo::default_instance_->InitAsDefaultInstance();
  Signature_ActivityStatus::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto {
  StaticDescriptorInitializer_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto() {
    protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  }
} static_descriptor_initializer_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_LocationFix::kProviderFieldNumber;
const int Signature_LocationFix::kTimestampSinceStartFieldNumber;
const int Signature_LocationFix::kLatitudeFieldNumber;
const int Signature_LocationFix::kLongitudeFieldNumber;
const int Signature_LocationFix::kHorizontalAccuracyFieldNumber;
const int Signature_LocationFix::kAltitudeFieldNumber;
const int Signature_LocationFix::kVerticalAccuracyFieldNumber;
const int Signature_LocationFix::kProviderStatusFieldNumber;
const int Signature_LocationFix::kFloorFieldNumber;
const int Signature_LocationFix::kLocationTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_LocationFix::Signature_LocationFix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature.LocationFix)
}

void Signature_LocationFix::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Signature_LocationFix::Signature_LocationFix(const Signature_LocationFix& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature.LocationFix)
}

void Signature_LocationFix::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
  latitude_ = 0;
  longitude_ = 0;
  horizontal_accuracy_ = 0;
  altitude_ = 0;
  vertical_accuracy_ = 0;
  provider_status_ = GOOGLE_ULONGLONG(0);
  floor_ = 0u;
  location_type_ = GOOGLE_ULONGLONG(0);
}

Signature_LocationFix::~Signature_LocationFix() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  SharedDtor();
}

void Signature_LocationFix::SharedDtor() {
  provider_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Signature_LocationFix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature_LocationFix::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_LocationFix_descriptor_;
}

const Signature_LocationFix& Signature_LocationFix::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature_LocationFix* Signature_LocationFix::default_instance_ = NULL;

Signature_LocationFix* Signature_LocationFix::New(::google::protobuf::Arena* arena) const {
  Signature_LocationFix* n = new Signature_LocationFix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature_LocationFix::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Signature_LocationFix, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Signature_LocationFix*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(timestamp_since_start_, vertical_accuracy_);
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ZR_(floor_, location_type_);

#undef ZR_HELPER_
#undef ZR_

}

bool Signature_LocationFix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string provider = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provider().data(), this->provider().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.LocationFix.provider"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp_since_start;
        break;
      }

      // optional uint64 timestamp_since_start = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp_since_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_since_start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(109)) goto parse_latitude;
        break;
      }

      // optional float latitude = 13;
      case 13: {
        if (tag == 109) {
         parse_latitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(117)) goto parse_longitude;
        break;
      }

      // optional float longitude = 14;
      case 14: {
        if (tag == 117) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(165)) goto parse_horizontal_accuracy;
        break;
      }

      // optional float horizontal_accuracy = 20;
      case 20: {
        if (tag == 165) {
         parse_horizontal_accuracy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &horizontal_accuracy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(173)) goto parse_altitude;
        break;
      }

      // optional float altitude = 21;
      case 21: {
        if (tag == 173) {
         parse_altitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &altitude_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(181)) goto parse_vertical_accuracy;
        break;
      }

      // optional float vertical_accuracy = 22;
      case 22: {
        if (tag == 181) {
         parse_vertical_accuracy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vertical_accuracy_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(208)) goto parse_provider_status;
        break;
      }

      // optional uint64 provider_status = 26;
      case 26: {
        if (tag == 208) {
         parse_provider_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &provider_status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(216)) goto parse_floor;
        break;
      }

      // optional uint32 floor = 27;
      case 27: {
        if (tag == 216) {
         parse_floor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &floor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(224)) goto parse_location_type;
        break;
      }

      // optional uint64 location_type = 28;
      case 28: {
        if (tag == 224) {
         parse_location_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &location_type_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  return false;
#undef DO_
}

void Signature_LocationFix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  // optional string provider = 1;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), this->provider().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.LocationFix.provider");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->provider(), output);
  }

  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_since_start(), output);
  }

  // optional float latitude = 13;
  if (this->latitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->latitude(), output);
  }

  // optional float longitude = 14;
  if (this->longitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(14, this->longitude(), output);
  }

  // optional float horizontal_accuracy = 20;
  if (this->horizontal_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(20, this->horizontal_accuracy(), output);
  }

  // optional float altitude = 21;
  if (this->altitude() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(21, this->altitude(), output);
  }

  // optional float vertical_accuracy = 22;
  if (this->vertical_accuracy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(22, this->vertical_accuracy(), output);
  }

  // optional uint64 provider_status = 26;
  if (this->provider_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(26, this->provider_status(), output);
  }

  // optional uint32 floor = 27;
  if (this->floor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->floor(), output);
  }

  // optional uint64 location_type = 28;
  if (this->location_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(28, this->location_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature.LocationFix)
}

::google::protobuf::uint8* Signature_LocationFix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  // optional string provider = 1;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), this->provider().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.LocationFix.provider");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->provider(), target);
  }

  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp_since_start(), target);
  }

  // optional float latitude = 13;
  if (this->latitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->latitude(), target);
  }

  // optional float longitude = 14;
  if (this->longitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(14, this->longitude(), target);
  }

  // optional float horizontal_accuracy = 20;
  if (this->horizontal_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(20, this->horizontal_accuracy(), target);
  }

  // optional float altitude = 21;
  if (this->altitude() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(21, this->altitude(), target);
  }

  // optional float vertical_accuracy = 22;
  if (this->vertical_accuracy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(22, this->vertical_accuracy(), target);
  }

  // optional uint64 provider_status = 26;
  if (this->provider_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(26, this->provider_status(), target);
  }

  // optional uint32 floor = 27;
  if (this->floor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->floor(), target);
  }

  // optional uint64 location_type = 28;
  if (this->location_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(28, this->location_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  return target;
}

int Signature_LocationFix::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  int total_size = 0;

  // optional string provider = 1;
  if (this->provider().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provider());
  }

  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_since_start());
  }

  // optional float latitude = 13;
  if (this->latitude() != 0) {
    total_size += 1 + 4;
  }

  // optional float longitude = 14;
  if (this->longitude() != 0) {
    total_size += 1 + 4;
  }

  // optional float horizontal_accuracy = 20;
  if (this->horizontal_accuracy() != 0) {
    total_size += 2 + 4;
  }

  // optional float altitude = 21;
  if (this->altitude() != 0) {
    total_size += 2 + 4;
  }

  // optional float vertical_accuracy = 22;
  if (this->vertical_accuracy() != 0) {
    total_size += 2 + 4;
  }

  // optional uint64 provider_status = 26;
  if (this->provider_status() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->provider_status());
  }

  // optional uint32 floor = 27;
  if (this->floor() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->floor());
  }

  // optional uint64 location_type = 28;
  if (this->location_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->location_type());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature_LocationFix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature_LocationFix* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_LocationFix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature.LocationFix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature.LocationFix)
    MergeFrom(*source);
  }
}

void Signature_LocationFix::MergeFrom(const Signature_LocationFix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.provider().size() > 0) {

    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  if (from.timestamp_since_start() != 0) {
    set_timestamp_since_start(from.timestamp_since_start());
  }
  if (from.latitude() != 0) {
    set_latitude(from.latitude());
  }
  if (from.longitude() != 0) {
    set_longitude(from.longitude());
  }
  if (from.horizontal_accuracy() != 0) {
    set_horizontal_accuracy(from.horizontal_accuracy());
  }
  if (from.altitude() != 0) {
    set_altitude(from.altitude());
  }
  if (from.vertical_accuracy() != 0) {
    set_vertical_accuracy(from.vertical_accuracy());
  }
  if (from.provider_status() != 0) {
    set_provider_status(from.provider_status());
  }
  if (from.floor() != 0) {
    set_floor(from.floor());
  }
  if (from.location_type() != 0) {
    set_location_type(from.location_type());
  }
}

void Signature_LocationFix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_LocationFix::CopyFrom(const Signature_LocationFix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature.LocationFix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_LocationFix::IsInitialized() const {

  return true;
}

void Signature_LocationFix::Swap(Signature_LocationFix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_LocationFix::InternalSwap(Signature_LocationFix* other) {
  provider_.Swap(&other->provider_);
  std::swap(timestamp_since_start_, other->timestamp_since_start_);
  std::swap(latitude_, other->latitude_);
  std::swap(longitude_, other->longitude_);
  std::swap(horizontal_accuracy_, other->horizontal_accuracy_);
  std::swap(altitude_, other->altitude_);
  std::swap(vertical_accuracy_, other->vertical_accuracy_);
  std::swap(provider_status_, other->provider_status_);
  std::swap(floor_, other->floor_);
  std::swap(location_type_, other->location_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature_LocationFix::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_LocationFix_descriptor_;
  metadata.reflection = Signature_LocationFix_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_AndroidGpsInfo::kTimeToFixFieldNumber;
const int Signature_AndroidGpsInfo::kSatellitesPrnFieldNumber;
const int Signature_AndroidGpsInfo::kSnrFieldNumber;
const int Signature_AndroidGpsInfo::kAzimuthFieldNumber;
const int Signature_AndroidGpsInfo::kElevationFieldNumber;
const int Signature_AndroidGpsInfo::kHasAlmanacFieldNumber;
const int Signature_AndroidGpsInfo::kHasEphemerisFieldNumber;
const int Signature_AndroidGpsInfo::kUsedInFixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_AndroidGpsInfo::Signature_AndroidGpsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
}

void Signature_AndroidGpsInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Signature_AndroidGpsInfo::Signature_AndroidGpsInfo(const Signature_AndroidGpsInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
}

void Signature_AndroidGpsInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  time_to_fix_ = GOOGLE_ULONGLONG(0);
}

Signature_AndroidGpsInfo::~Signature_AndroidGpsInfo() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  SharedDtor();
}

void Signature_AndroidGpsInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Signature_AndroidGpsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature_AndroidGpsInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_AndroidGpsInfo_descriptor_;
}

const Signature_AndroidGpsInfo& Signature_AndroidGpsInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature_AndroidGpsInfo* Signature_AndroidGpsInfo::default_instance_ = NULL;

Signature_AndroidGpsInfo* Signature_AndroidGpsInfo::New(::google::protobuf::Arena* arena) const {
  Signature_AndroidGpsInfo* n = new Signature_AndroidGpsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature_AndroidGpsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  time_to_fix_ = GOOGLE_ULONGLONG(0);
  satellites_prn_.Clear();
  snr_.Clear();
  azimuth_.Clear();
  elevation_.Clear();
  has_almanac_.Clear();
  has_ephemeris_.Clear();
  used_in_fix_.Clear();
}

bool Signature_AndroidGpsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 time_to_fix = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_to_fix_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_satellites_prn;
        break;
      }

      // repeated int32 satellites_prn = 2;
      case 2: {
        if (tag == 18) {
         parse_satellites_prn:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_satellites_prn())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18, input, this->mutable_satellites_prn())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_snr;
        break;
      }

      // repeated float snr = 3;
      case 3: {
        if (tag == 26) {
         parse_snr:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_snr())));
        } else if (tag == 29) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26, input, this->mutable_snr())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_azimuth;
        break;
      }

      // repeated float azimuth = 4;
      case 4: {
        if (tag == 34) {
         parse_azimuth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_azimuth())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_azimuth())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_elevation;
        break;
      }

      // repeated float elevation = 5;
      case 5: {
        if (tag == 42) {
         parse_elevation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_elevation())));
        } else if (tag == 45) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 42, input, this->mutable_elevation())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_has_almanac;
        break;
      }

      // repeated bool has_almanac = 6;
      case 6: {
        if (tag == 50) {
         parse_has_almanac:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_has_almanac())));
        } else if (tag == 48) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 50, input, this->mutable_has_almanac())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_has_ephemeris;
        break;
      }

      // repeated bool has_ephemeris = 7;
      case 7: {
        if (tag == 58) {
         parse_has_ephemeris:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_has_ephemeris())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 58, input, this->mutable_has_ephemeris())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_used_in_fix;
        break;
      }

      // repeated bool used_in_fix = 8;
      case 8: {
        if (tag == 66) {
         parse_used_in_fix:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_used_in_fix())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 66, input, this->mutable_used_in_fix())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  return false;
#undef DO_
}

void Signature_AndroidGpsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  // optional uint64 time_to_fix = 1;
  if (this->time_to_fix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->time_to_fix(), output);
  }

  // repeated int32 satellites_prn = 2;
  if (this->satellites_prn_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_satellites_prn_cached_byte_size_);
  }
  for (int i = 0; i < this->satellites_prn_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->satellites_prn(i), output);
  }

  // repeated float snr = 3;
  if (this->snr_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_snr_cached_byte_size_);
  }
  for (int i = 0; i < this->snr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->snr(i), output);
  }

  // repeated float azimuth = 4;
  if (this->azimuth_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_azimuth_cached_byte_size_);
  }
  for (int i = 0; i < this->azimuth_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->azimuth(i), output);
  }

  // repeated float elevation = 5;
  if (this->elevation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_elevation_cached_byte_size_);
  }
  for (int i = 0; i < this->elevation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->elevation(i), output);
  }

  // repeated bool has_almanac = 6;
  if (this->has_almanac_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_has_almanac_cached_byte_size_);
  }
  for (int i = 0; i < this->has_almanac_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->has_almanac(i), output);
  }

  // repeated bool has_ephemeris = 7;
  if (this->has_ephemeris_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_has_ephemeris_cached_byte_size_);
  }
  for (int i = 0; i < this->has_ephemeris_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->has_ephemeris(i), output);
  }

  // repeated bool used_in_fix = 8;
  if (this->used_in_fix_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_used_in_fix_cached_byte_size_);
  }
  for (int i = 0; i < this->used_in_fix_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBoolNoTag(
      this->used_in_fix(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
}

::google::protobuf::uint8* Signature_AndroidGpsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  // optional uint64 time_to_fix = 1;
  if (this->time_to_fix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->time_to_fix(), target);
  }

  // repeated int32 satellites_prn = 2;
  if (this->satellites_prn_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _satellites_prn_cached_byte_size_, target);
  }
  for (int i = 0; i < this->satellites_prn_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->satellites_prn(i), target);
  }

  // repeated float snr = 3;
  if (this->snr_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _snr_cached_byte_size_, target);
  }
  for (int i = 0; i < this->snr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->snr(i), target);
  }

  // repeated float azimuth = 4;
  if (this->azimuth_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _azimuth_cached_byte_size_, target);
  }
  for (int i = 0; i < this->azimuth_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->azimuth(i), target);
  }

  // repeated float elevation = 5;
  if (this->elevation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _elevation_cached_byte_size_, target);
  }
  for (int i = 0; i < this->elevation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->elevation(i), target);
  }

  // repeated bool has_almanac = 6;
  if (this->has_almanac_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _has_almanac_cached_byte_size_, target);
  }
  for (int i = 0; i < this->has_almanac_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->has_almanac(i), target);
  }

  // repeated bool has_ephemeris = 7;
  if (this->has_ephemeris_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _has_ephemeris_cached_byte_size_, target);
  }
  for (int i = 0; i < this->has_ephemeris_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->has_ephemeris(i), target);
  }

  // repeated bool used_in_fix = 8;
  if (this->used_in_fix_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _used_in_fix_cached_byte_size_, target);
  }
  for (int i = 0; i < this->used_in_fix_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->used_in_fix(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  return target;
}

int Signature_AndroidGpsInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  int total_size = 0;

  // optional uint64 time_to_fix = 1;
  if (this->time_to_fix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time_to_fix());
  }

  // repeated int32 satellites_prn = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->satellites_prn_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->satellites_prn(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _satellites_prn_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float snr = 3;
  {
    int data_size = 0;
    data_size = 4 * this->snr_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _snr_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float azimuth = 4;
  {
    int data_size = 0;
    data_size = 4 * this->azimuth_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _azimuth_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float elevation = 5;
  {
    int data_size = 0;
    data_size = 4 * this->elevation_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _elevation_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool has_almanac = 6;
  {
    int data_size = 0;
    data_size = 1 * this->has_almanac_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _has_almanac_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool has_ephemeris = 7;
  {
    int data_size = 0;
    data_size = 1 * this->has_ephemeris_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _has_ephemeris_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool used_in_fix = 8;
  {
    int data_size = 0;
    data_size = 1 * this->used_in_fix_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _used_in_fix_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature_AndroidGpsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature_AndroidGpsInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_AndroidGpsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
    MergeFrom(*source);
  }
}

void Signature_AndroidGpsInfo::MergeFrom(const Signature_AndroidGpsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  satellites_prn_.MergeFrom(from.satellites_prn_);
  snr_.MergeFrom(from.snr_);
  azimuth_.MergeFrom(from.azimuth_);
  elevation_.MergeFrom(from.elevation_);
  has_almanac_.MergeFrom(from.has_almanac_);
  has_ephemeris_.MergeFrom(from.has_ephemeris_);
  used_in_fix_.MergeFrom(from.used_in_fix_);
  if (from.time_to_fix() != 0) {
    set_time_to_fix(from.time_to_fix());
  }
}

void Signature_AndroidGpsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_AndroidGpsInfo::CopyFrom(const Signature_AndroidGpsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_AndroidGpsInfo::IsInitialized() const {

  return true;
}

void Signature_AndroidGpsInfo::Swap(Signature_AndroidGpsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_AndroidGpsInfo::InternalSwap(Signature_AndroidGpsInfo* other) {
  std::swap(time_to_fix_, other->time_to_fix_);
  satellites_prn_.UnsafeArenaSwap(&other->satellites_prn_);
  snr_.UnsafeArenaSwap(&other->snr_);
  azimuth_.UnsafeArenaSwap(&other->azimuth_);
  elevation_.UnsafeArenaSwap(&other->elevation_);
  has_almanac_.UnsafeArenaSwap(&other->has_almanac_);
  has_ephemeris_.UnsafeArenaSwap(&other->has_ephemeris_);
  used_in_fix_.UnsafeArenaSwap(&other->used_in_fix_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature_AndroidGpsInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_AndroidGpsInfo_descriptor_;
  metadata.reflection = Signature_AndroidGpsInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_SensorInfo::kTimestampSnapshotFieldNumber;
const int Signature_SensorInfo::kMagnetometerXFieldNumber;
const int Signature_SensorInfo::kMagnetometerYFieldNumber;
const int Signature_SensorInfo::kMagnetometerZFieldNumber;
const int Signature_SensorInfo::kAngleNormalizedXFieldNumber;
const int Signature_SensorInfo::kAngleNormalizedYFieldNumber;
const int Signature_SensorInfo::kAngleNormalizedZFieldNumber;
const int Signature_SensorInfo::kAccelRawXFieldNumber;
const int Signature_SensorInfo::kAccelRawYFieldNumber;
const int Signature_SensorInfo::kAccelRawZFieldNumber;
const int Signature_SensorInfo::kGyroscopeRawXFieldNumber;
const int Signature_SensorInfo::kGyroscopeRawYFieldNumber;
const int Signature_SensorInfo::kGyroscopeRawZFieldNumber;
const int Signature_SensorInfo::kAccelNormalizedXFieldNumber;
const int Signature_SensorInfo::kAccelNormalizedYFieldNumber;
const int Signature_SensorInfo::kAccelNormalizedZFieldNumber;
const int Signature_SensorInfo::kAccelerometerAxesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_SensorInfo::Signature_SensorInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
}

void Signature_SensorInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Signature_SensorInfo::Signature_SensorInfo(const Signature_SensorInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
}

void Signature_SensorInfo::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  timestamp_snapshot_ = GOOGLE_ULONGLONG(0);
  magnetometer_x_ = 0;
  magnetometer_y_ = 0;
  magnetometer_z_ = 0;
  angle_normalized_x_ = 0;
  angle_normalized_y_ = 0;
  angle_normalized_z_ = 0;
  accel_raw_x_ = 0;
  accel_raw_y_ = 0;
  accel_raw_z_ = 0;
  gyroscope_raw_x_ = 0;
  gyroscope_raw_y_ = 0;
  gyroscope_raw_z_ = 0;
  accel_normalized_x_ = 0;
  accel_normalized_y_ = 0;
  accel_normalized_z_ = 0;
  accelerometer_axes_ = GOOGLE_ULONGLONG(0);
}

Signature_SensorInfo::~Signature_SensorInfo() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  SharedDtor();
}

void Signature_SensorInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Signature_SensorInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature_SensorInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_SensorInfo_descriptor_;
}

const Signature_SensorInfo& Signature_SensorInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature_SensorInfo* Signature_SensorInfo::default_instance_ = NULL;

Signature_SensorInfo* Signature_SensorInfo::New(::google::protobuf::Arena* arena) const {
  Signature_SensorInfo* n = new Signature_SensorInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature_SensorInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Signature_SensorInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Signature_SensorInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(timestamp_snapshot_, accel_raw_x_);
  ZR_(accel_raw_y_, accel_normalized_z_);
  accelerometer_axes_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

}

bool Signature_SensorInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp_snapshot = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_snapshot_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_magnetometer_x;
        break;
      }

      // optional double magnetometer_x = 3;
      case 3: {
        if (tag == 25) {
         parse_magnetometer_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &magnetometer_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_magnetometer_y;
        break;
      }

      // optional double magnetometer_y = 4;
      case 4: {
        if (tag == 33) {
         parse_magnetometer_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &magnetometer_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_magnetometer_z;
        break;
      }

      // optional double magnetometer_z = 5;
      case 5: {
        if (tag == 41) {
         parse_magnetometer_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &magnetometer_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_angle_normalized_x;
        break;
      }

      // optional double angle_normalized_x = 6;
      case 6: {
        if (tag == 49) {
         parse_angle_normalized_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_normalized_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_angle_normalized_y;
        break;
      }

      // optional double angle_normalized_y = 7;
      case 7: {
        if (tag == 57) {
         parse_angle_normalized_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_normalized_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_angle_normalized_z;
        break;
      }

      // optional double angle_normalized_z = 8;
      case 8: {
        if (tag == 65) {
         parse_angle_normalized_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &angle_normalized_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(81)) goto parse_accel_raw_x;
        break;
      }

      // optional double accel_raw_x = 10;
      case 10: {
        if (tag == 81) {
         parse_accel_raw_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_raw_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(89)) goto parse_accel_raw_y;
        break;
      }

      // optional double accel_raw_y = 11;
      case 11: {
        if (tag == 89) {
         parse_accel_raw_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_raw_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(97)) goto parse_accel_raw_z;
        break;
      }

      // optional double accel_raw_z = 12;
      case 12: {
        if (tag == 97) {
         parse_accel_raw_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_raw_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(105)) goto parse_gyroscope_raw_x;
        break;
      }

      // optional double gyroscope_raw_x = 13;
      case 13: {
        if (tag == 105) {
         parse_gyroscope_raw_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gyroscope_raw_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(113)) goto parse_gyroscope_raw_y;
        break;
      }

      // optional double gyroscope_raw_y = 14;
      case 14: {
        if (tag == 113) {
         parse_gyroscope_raw_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gyroscope_raw_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(121)) goto parse_gyroscope_raw_z;
        break;
      }

      // optional double gyroscope_raw_z = 15;
      case 15: {
        if (tag == 121) {
         parse_gyroscope_raw_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gyroscope_raw_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(129)) goto parse_accel_normalized_x;
        break;
      }

      // optional double accel_normalized_x = 16;
      case 16: {
        if (tag == 129) {
         parse_accel_normalized_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_normalized_x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(137)) goto parse_accel_normalized_y;
        break;
      }

      // optional double accel_normalized_y = 17;
      case 17: {
        if (tag == 137) {
         parse_accel_normalized_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_normalized_y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(145)) goto parse_accel_normalized_z;
        break;
      }

      // optional double accel_normalized_z = 18;
      case 18: {
        if (tag == 145) {
         parse_accel_normalized_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &accel_normalized_z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_accelerometer_axes;
        break;
      }

      // optional uint64 accelerometer_axes = 19;
      case 19: {
        if (tag == 152) {
         parse_accelerometer_axes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accelerometer_axes_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  return false;
#undef DO_
}

void Signature_SensorInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  // optional uint64 timestamp_snapshot = 1;
  if (this->timestamp_snapshot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->timestamp_snapshot(), output);
  }

  // optional double magnetometer_x = 3;
  if (this->magnetometer_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->magnetometer_x(), output);
  }

  // optional double magnetometer_y = 4;
  if (this->magnetometer_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->magnetometer_y(), output);
  }

  // optional double magnetometer_z = 5;
  if (this->magnetometer_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->magnetometer_z(), output);
  }

  // optional double angle_normalized_x = 6;
  if (this->angle_normalized_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->angle_normalized_x(), output);
  }

  // optional double angle_normalized_y = 7;
  if (this->angle_normalized_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->angle_normalized_y(), output);
  }

  // optional double angle_normalized_z = 8;
  if (this->angle_normalized_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->angle_normalized_z(), output);
  }

  // optional double accel_raw_x = 10;
  if (this->accel_raw_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->accel_raw_x(), output);
  }

  // optional double accel_raw_y = 11;
  if (this->accel_raw_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(11, this->accel_raw_y(), output);
  }

  // optional double accel_raw_z = 12;
  if (this->accel_raw_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->accel_raw_z(), output);
  }

  // optional double gyroscope_raw_x = 13;
  if (this->gyroscope_raw_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->gyroscope_raw_x(), output);
  }

  // optional double gyroscope_raw_y = 14;
  if (this->gyroscope_raw_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->gyroscope_raw_y(), output);
  }

  // optional double gyroscope_raw_z = 15;
  if (this->gyroscope_raw_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->gyroscope_raw_z(), output);
  }

  // optional double accel_normalized_x = 16;
  if (this->accel_normalized_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->accel_normalized_x(), output);
  }

  // optional double accel_normalized_y = 17;
  if (this->accel_normalized_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->accel_normalized_y(), output);
  }

  // optional double accel_normalized_z = 18;
  if (this->accel_normalized_z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->accel_normalized_z(), output);
  }

  // optional uint64 accelerometer_axes = 19;
  if (this->accelerometer_axes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->accelerometer_axes(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
}

::google::protobuf::uint8* Signature_SensorInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  // optional uint64 timestamp_snapshot = 1;
  if (this->timestamp_snapshot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->timestamp_snapshot(), target);
  }

  // optional double magnetometer_x = 3;
  if (this->magnetometer_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->magnetometer_x(), target);
  }

  // optional double magnetometer_y = 4;
  if (this->magnetometer_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->magnetometer_y(), target);
  }

  // optional double magnetometer_z = 5;
  if (this->magnetometer_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->magnetometer_z(), target);
  }

  // optional double angle_normalized_x = 6;
  if (this->angle_normalized_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->angle_normalized_x(), target);
  }

  // optional double angle_normalized_y = 7;
  if (this->angle_normalized_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->angle_normalized_y(), target);
  }

  // optional double angle_normalized_z = 8;
  if (this->angle_normalized_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->angle_normalized_z(), target);
  }

  // optional double accel_raw_x = 10;
  if (this->accel_raw_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->accel_raw_x(), target);
  }

  // optional double accel_raw_y = 11;
  if (this->accel_raw_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(11, this->accel_raw_y(), target);
  }

  // optional double accel_raw_z = 12;
  if (this->accel_raw_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->accel_raw_z(), target);
  }

  // optional double gyroscope_raw_x = 13;
  if (this->gyroscope_raw_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->gyroscope_raw_x(), target);
  }

  // optional double gyroscope_raw_y = 14;
  if (this->gyroscope_raw_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->gyroscope_raw_y(), target);
  }

  // optional double gyroscope_raw_z = 15;
  if (this->gyroscope_raw_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->gyroscope_raw_z(), target);
  }

  // optional double accel_normalized_x = 16;
  if (this->accel_normalized_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->accel_normalized_x(), target);
  }

  // optional double accel_normalized_y = 17;
  if (this->accel_normalized_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->accel_normalized_y(), target);
  }

  // optional double accel_normalized_z = 18;
  if (this->accel_normalized_z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->accel_normalized_z(), target);
  }

  // optional uint64 accelerometer_axes = 19;
  if (this->accelerometer_axes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->accelerometer_axes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  return target;
}

int Signature_SensorInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  int total_size = 0;

  // optional uint64 timestamp_snapshot = 1;
  if (this->timestamp_snapshot() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_snapshot());
  }

  // optional double magnetometer_x = 3;
  if (this->magnetometer_x() != 0) {
    total_size += 1 + 8;
  }

  // optional double magnetometer_y = 4;
  if (this->magnetometer_y() != 0) {
    total_size += 1 + 8;
  }

  // optional double magnetometer_z = 5;
  if (this->magnetometer_z() != 0) {
    total_size += 1 + 8;
  }

  // optional double angle_normalized_x = 6;
  if (this->angle_normalized_x() != 0) {
    total_size += 1 + 8;
  }

  // optional double angle_normalized_y = 7;
  if (this->angle_normalized_y() != 0) {
    total_size += 1 + 8;
  }

  // optional double angle_normalized_z = 8;
  if (this->angle_normalized_z() != 0) {
    total_size += 1 + 8;
  }

  // optional double accel_raw_x = 10;
  if (this->accel_raw_x() != 0) {
    total_size += 1 + 8;
  }

  // optional double accel_raw_y = 11;
  if (this->accel_raw_y() != 0) {
    total_size += 1 + 8;
  }

  // optional double accel_raw_z = 12;
  if (this->accel_raw_z() != 0) {
    total_size += 1 + 8;
  }

  // optional double gyroscope_raw_x = 13;
  if (this->gyroscope_raw_x() != 0) {
    total_size += 1 + 8;
  }

  // optional double gyroscope_raw_y = 14;
  if (this->gyroscope_raw_y() != 0) {
    total_size += 1 + 8;
  }

  // optional double gyroscope_raw_z = 15;
  if (this->gyroscope_raw_z() != 0) {
    total_size += 1 + 8;
  }

  // optional double accel_normalized_x = 16;
  if (this->accel_normalized_x() != 0) {
    total_size += 2 + 8;
  }

  // optional double accel_normalized_y = 17;
  if (this->accel_normalized_y() != 0) {
    total_size += 2 + 8;
  }

  // optional double accel_normalized_z = 18;
  if (this->accel_normalized_z() != 0) {
    total_size += 2 + 8;
  }

  // optional uint64 accelerometer_axes = 19;
  if (this->accelerometer_axes() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accelerometer_axes());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature_SensorInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature_SensorInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_SensorInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
    MergeFrom(*source);
  }
}

void Signature_SensorInfo::MergeFrom(const Signature_SensorInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.timestamp_snapshot() != 0) {
    set_timestamp_snapshot(from.timestamp_snapshot());
  }
  if (from.magnetometer_x() != 0) {
    set_magnetometer_x(from.magnetometer_x());
  }
  if (from.magnetometer_y() != 0) {
    set_magnetometer_y(from.magnetometer_y());
  }
  if (from.magnetometer_z() != 0) {
    set_magnetometer_z(from.magnetometer_z());
  }
  if (from.angle_normalized_x() != 0) {
    set_angle_normalized_x(from.angle_normalized_x());
  }
  if (from.angle_normalized_y() != 0) {
    set_angle_normalized_y(from.angle_normalized_y());
  }
  if (from.angle_normalized_z() != 0) {
    set_angle_normalized_z(from.angle_normalized_z());
  }
  if (from.accel_raw_x() != 0) {
    set_accel_raw_x(from.accel_raw_x());
  }
  if (from.accel_raw_y() != 0) {
    set_accel_raw_y(from.accel_raw_y());
  }
  if (from.accel_raw_z() != 0) {
    set_accel_raw_z(from.accel_raw_z());
  }
  if (from.gyroscope_raw_x() != 0) {
    set_gyroscope_raw_x(from.gyroscope_raw_x());
  }
  if (from.gyroscope_raw_y() != 0) {
    set_gyroscope_raw_y(from.gyroscope_raw_y());
  }
  if (from.gyroscope_raw_z() != 0) {
    set_gyroscope_raw_z(from.gyroscope_raw_z());
  }
  if (from.accel_normalized_x() != 0) {
    set_accel_normalized_x(from.accel_normalized_x());
  }
  if (from.accel_normalized_y() != 0) {
    set_accel_normalized_y(from.accel_normalized_y());
  }
  if (from.accel_normalized_z() != 0) {
    set_accel_normalized_z(from.accel_normalized_z());
  }
  if (from.accelerometer_axes() != 0) {
    set_accelerometer_axes(from.accelerometer_axes());
  }
}

void Signature_SensorInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_SensorInfo::CopyFrom(const Signature_SensorInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_SensorInfo::IsInitialized() const {

  return true;
}

void Signature_SensorInfo::Swap(Signature_SensorInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_SensorInfo::InternalSwap(Signature_SensorInfo* other) {
  std::swap(timestamp_snapshot_, other->timestamp_snapshot_);
  std::swap(magnetometer_x_, other->magnetometer_x_);
  std::swap(magnetometer_y_, other->magnetometer_y_);
  std::swap(magnetometer_z_, other->magnetometer_z_);
  std::swap(angle_normalized_x_, other->angle_normalized_x_);
  std::swap(angle_normalized_y_, other->angle_normalized_y_);
  std::swap(angle_normalized_z_, other->angle_normalized_z_);
  std::swap(accel_raw_x_, other->accel_raw_x_);
  std::swap(accel_raw_y_, other->accel_raw_y_);
  std::swap(accel_raw_z_, other->accel_raw_z_);
  std::swap(gyroscope_raw_x_, other->gyroscope_raw_x_);
  std::swap(gyroscope_raw_y_, other->gyroscope_raw_y_);
  std::swap(gyroscope_raw_z_, other->gyroscope_raw_z_);
  std::swap(accel_normalized_x_, other->accel_normalized_x_);
  std::swap(accel_normalized_y_, other->accel_normalized_y_);
  std::swap(accel_normalized_z_, other->accel_normalized_z_);
  std::swap(accelerometer_axes_, other->accelerometer_axes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature_SensorInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_SensorInfo_descriptor_;
  metadata.reflection = Signature_SensorInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_DeviceInfo::kDeviceIdFieldNumber;
const int Signature_DeviceInfo::kAndroidBoardNameFieldNumber;
const int Signature_DeviceInfo::kAndroidBootloaderFieldNumber;
const int Signature_DeviceInfo::kDeviceBrandFieldNumber;
const int Signature_DeviceInfo::kDeviceModelFieldNumber;
const int Signature_DeviceInfo::kDeviceModelIdentifierFieldNumber;
const int Signature_DeviceInfo::kDeviceModelBootFieldNumber;
const int Signature_DeviceInfo::kHardwareManufacturerFieldNumber;
const int Signature_DeviceInfo::kHardwareModelFieldNumber;
const int Signature_DeviceInfo::kFirmwareBrandFieldNumber;
const int Signature_DeviceInfo::kFirmwareTagsFieldNumber;
const int Signature_DeviceInfo::kFirmwareTypeFieldNumber;
const int Signature_DeviceInfo::kFirmwareFingerprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_DeviceInfo::Signature_DeviceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
}

void Signature_DeviceInfo::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Signature_DeviceInfo::Signature_DeviceInfo(const Signature_DeviceInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
}

void Signature_DeviceInfo::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_board_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_bootloader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_boot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_tags_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_fingerprint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Signature_DeviceInfo::~Signature_DeviceInfo() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  SharedDtor();
}

void Signature_DeviceInfo::SharedDtor() {
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_board_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_bootloader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_brand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_boot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_brand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_tags_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_fingerprint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Signature_DeviceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature_DeviceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_DeviceInfo_descriptor_;
}

const Signature_DeviceInfo& Signature_DeviceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature_DeviceInfo* Signature_DeviceInfo::default_instance_ = NULL;

Signature_DeviceInfo* Signature_DeviceInfo::New(::google::protobuf::Arena* arena) const {
  Signature_DeviceInfo* n = new Signature_DeviceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature_DeviceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_board_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  android_bootloader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_boot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hardware_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_tags_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  firmware_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Signature_DeviceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_android_board_name;
        break;
      }

      // optional string android_board_name = 2;
      case 2: {
        if (tag == 18) {
         parse_android_board_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_board_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->android_board_name().data(), this->android_board_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_android_bootloader;
        break;
      }

      // optional string android_bootloader = 3;
      case 3: {
        if (tag == 26) {
         parse_android_bootloader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_android_bootloader()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->android_bootloader().data(), this->android_bootloader().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_brand;
        break;
      }

      // optional string device_brand = 4;
      case 4: {
        if (tag == 34) {
         parse_device_brand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_brand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_brand().data(), this->device_brand().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_device_model;
        break;
      }

      // optional string device_model = 5;
      case 5: {
        if (tag == 42) {
         parse_device_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_model().data(), this->device_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_device_model_identifier;
        break;
      }

      // optional string device_model_identifier = 6;
      case 6: {
        if (tag == 50) {
         parse_device_model_identifier:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_model_identifier().data(), this->device_model_identifier().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_device_model_boot;
        break;
      }

      // optional string device_model_boot = 7;
      case 7: {
        if (tag == 58) {
         parse_device_model_boot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_model_boot()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_model_boot().data(), this->device_model_boot().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_hardware_manufacturer;
        break;
      }

      // optional string hardware_manufacturer = 8;
      case 8: {
        if (tag == 66) {
         parse_hardware_manufacturer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hardware_manufacturer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hardware_manufacturer().data(), this->hardware_manufacturer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_hardware_model;
        break;
      }

      // optional string hardware_model = 9;
      case 9: {
        if (tag == 74) {
         parse_hardware_model:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hardware_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hardware_model().data(), this->hardware_model().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_firmware_brand;
        break;
      }

      // optional string firmware_brand = 10;
      case 10: {
        if (tag == 82) {
         parse_firmware_brand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firmware_brand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firmware_brand().data(), this->firmware_brand().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_firmware_tags;
        break;
      }

      // optional string firmware_tags = 12;
      case 12: {
        if (tag == 98) {
         parse_firmware_tags:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firmware_tags()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firmware_tags().data(), this->firmware_tags().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_firmware_type;
        break;
      }

      // optional string firmware_type = 13;
      case 13: {
        if (tag == 106) {
         parse_firmware_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firmware_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firmware_type().data(), this->firmware_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_firmware_fingerprint;
        break;
      }

      // optional string firmware_fingerprint = 14;
      case 14: {
        if (tag == 114) {
         parse_firmware_fingerprint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firmware_fingerprint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->firmware_fingerprint().data(), this->firmware_fingerprint().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  return false;
#undef DO_
}

void Signature_DeviceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  // optional string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_id(), output);
  }

  // optional string android_board_name = 2;
  if (this->android_board_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_board_name().data(), this->android_board_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->android_board_name(), output);
  }

  // optional string android_bootloader = 3;
  if (this->android_bootloader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_bootloader().data(), this->android_bootloader().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->android_bootloader(), output);
  }

  // optional string device_brand = 4;
  if (this->device_brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_brand().data(), this->device_brand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_brand(), output);
  }

  // optional string device_model = 5;
  if (this->device_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model().data(), this->device_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device_model(), output);
  }

  // optional string device_model_identifier = 6;
  if (this->device_model_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_identifier().data(), this->device_model_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->device_model_identifier(), output);
  }

  // optional string device_model_boot = 7;
  if (this->device_model_boot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_boot().data(), this->device_model_boot().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->device_model_boot(), output);
  }

  // optional string hardware_manufacturer = 8;
  if (this->hardware_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_manufacturer().data(), this->hardware_manufacturer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->hardware_manufacturer(), output);
  }

  // optional string hardware_model = 9;
  if (this->hardware_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_model().data(), this->hardware_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->hardware_model(), output);
  }

  // optional string firmware_brand = 10;
  if (this->firmware_brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_brand().data(), this->firmware_brand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->firmware_brand(), output);
  }

  // optional string firmware_tags = 12;
  if (this->firmware_tags().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_tags().data(), this->firmware_tags().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->firmware_tags(), output);
  }

  // optional string firmware_type = 13;
  if (this->firmware_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_type().data(), this->firmware_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->firmware_type(), output);
  }

  // optional string firmware_fingerprint = 14;
  if (this->firmware_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_fingerprint().data(), this->firmware_fingerprint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->firmware_fingerprint(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
}

::google::protobuf::uint8* Signature_DeviceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  // optional string device_id = 1;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_id(), target);
  }

  // optional string android_board_name = 2;
  if (this->android_board_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_board_name().data(), this->android_board_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->android_board_name(), target);
  }

  // optional string android_bootloader = 3;
  if (this->android_bootloader().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->android_bootloader().data(), this->android_bootloader().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->android_bootloader(), target);
  }

  // optional string device_brand = 4;
  if (this->device_brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_brand().data(), this->device_brand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_brand(), target);
  }

  // optional string device_model = 5;
  if (this->device_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model().data(), this->device_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device_model(), target);
  }

  // optional string device_model_identifier = 6;
  if (this->device_model_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_identifier().data(), this->device_model_identifier().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->device_model_identifier(), target);
  }

  // optional string device_model_boot = 7;
  if (this->device_model_boot().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_model_boot().data(), this->device_model_boot().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->device_model_boot(), target);
  }

  // optional string hardware_manufacturer = 8;
  if (this->hardware_manufacturer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_manufacturer().data(), this->hardware_manufacturer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->hardware_manufacturer(), target);
  }

  // optional string hardware_model = 9;
  if (this->hardware_model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hardware_model().data(), this->hardware_model().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->hardware_model(), target);
  }

  // optional string firmware_brand = 10;
  if (this->firmware_brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_brand().data(), this->firmware_brand().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->firmware_brand(), target);
  }

  // optional string firmware_tags = 12;
  if (this->firmware_tags().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_tags().data(), this->firmware_tags().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->firmware_tags(), target);
  }

  // optional string firmware_type = 13;
  if (this->firmware_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_type().data(), this->firmware_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->firmware_type(), target);
  }

  // optional string firmware_fingerprint = 14;
  if (this->firmware_fingerprint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->firmware_fingerprint().data(), this->firmware_fingerprint().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->firmware_fingerprint(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  return target;
}

int Signature_DeviceInfo::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  int total_size = 0;

  // optional string device_id = 1;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // optional string android_board_name = 2;
  if (this->android_board_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->android_board_name());
  }

  // optional string android_bootloader = 3;
  if (this->android_bootloader().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->android_bootloader());
  }

  // optional string device_brand = 4;
  if (this->device_brand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_brand());
  }

  // optional string device_model = 5;
  if (this->device_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_model());
  }

  // optional string device_model_identifier = 6;
  if (this->device_model_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_model_identifier());
  }

  // optional string device_model_boot = 7;
  if (this->device_model_boot().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_model_boot());
  }

  // optional string hardware_manufacturer = 8;
  if (this->hardware_manufacturer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hardware_manufacturer());
  }

  // optional string hardware_model = 9;
  if (this->hardware_model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hardware_model());
  }

  // optional string firmware_brand = 10;
  if (this->firmware_brand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firmware_brand());
  }

  // optional string firmware_tags = 12;
  if (this->firmware_tags().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firmware_tags());
  }

  // optional string firmware_type = 13;
  if (this->firmware_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firmware_type());
  }

  // optional string firmware_fingerprint = 14;
  if (this->firmware_fingerprint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->firmware_fingerprint());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature_DeviceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature_DeviceInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_DeviceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
    MergeFrom(*source);
  }
}

void Signature_DeviceInfo::MergeFrom(const Signature_DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.android_board_name().size() > 0) {

    android_board_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_board_name_);
  }
  if (from.android_bootloader().size() > 0) {

    android_bootloader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.android_bootloader_);
  }
  if (from.device_brand().size() > 0) {

    device_brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_brand_);
  }
  if (from.device_model().size() > 0) {

    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  if (from.device_model_identifier().size() > 0) {

    device_model_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_identifier_);
  }
  if (from.device_model_boot().size() > 0) {

    device_model_boot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_boot_);
  }
  if (from.hardware_manufacturer().size() > 0) {

    hardware_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_manufacturer_);
  }
  if (from.hardware_model().size() > 0) {

    hardware_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hardware_model_);
  }
  if (from.firmware_brand().size() > 0) {

    firmware_brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firmware_brand_);
  }
  if (from.firmware_tags().size() > 0) {

    firmware_tags_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firmware_tags_);
  }
  if (from.firmware_type().size() > 0) {

    firmware_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firmware_type_);
  }
  if (from.firmware_fingerprint().size() > 0) {

    firmware_fingerprint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.firmware_fingerprint_);
  }
}

void Signature_DeviceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_DeviceInfo::CopyFrom(const Signature_DeviceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_DeviceInfo::IsInitialized() const {

  return true;
}

void Signature_DeviceInfo::Swap(Signature_DeviceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_DeviceInfo::InternalSwap(Signature_DeviceInfo* other) {
  device_id_.Swap(&other->device_id_);
  android_board_name_.Swap(&other->android_board_name_);
  android_bootloader_.Swap(&other->android_bootloader_);
  device_brand_.Swap(&other->device_brand_);
  device_model_.Swap(&other->device_model_);
  device_model_identifier_.Swap(&other->device_model_identifier_);
  device_model_boot_.Swap(&other->device_model_boot_);
  hardware_manufacturer_.Swap(&other->hardware_manufacturer_);
  hardware_model_.Swap(&other->hardware_model_);
  firmware_brand_.Swap(&other->firmware_brand_);
  firmware_tags_.Swap(&other->firmware_tags_);
  firmware_type_.Swap(&other->firmware_type_);
  firmware_fingerprint_.Swap(&other->firmware_fingerprint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature_DeviceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_DeviceInfo_descriptor_;
  metadata.reflection = Signature_DeviceInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature_ActivityStatus::kStartTimeMsFieldNumber;
const int Signature_ActivityStatus::kUnknownStatusFieldNumber;
const int Signature_ActivityStatus::kWalkingFieldNumber;
const int Signature_ActivityStatus::kRunningFieldNumber;
const int Signature_ActivityStatus::kStationaryFieldNumber;
const int Signature_ActivityStatus::kAutomotiveFieldNumber;
const int Signature_ActivityStatus::kTiltingFieldNumber;
const int Signature_ActivityStatus::kCyclingFieldNumber;
const int Signature_ActivityStatus::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature_ActivityStatus::Signature_ActivityStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
}

void Signature_ActivityStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Signature_ActivityStatus::Signature_ActivityStatus(const Signature_ActivityStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
}

void Signature_ActivityStatus::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  start_time_ms_ = GOOGLE_ULONGLONG(0);
  unknown_status_ = false;
  walking_ = false;
  running_ = false;
  stationary_ = false;
  automotive_ = false;
  tilting_ = false;
  cycling_ = false;
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Signature_ActivityStatus::~Signature_ActivityStatus() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  SharedDtor();
}

void Signature_ActivityStatus::SharedDtor() {
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Signature_ActivityStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature_ActivityStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_ActivityStatus_descriptor_;
}

const Signature_ActivityStatus& Signature_ActivityStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature_ActivityStatus* Signature_ActivityStatus::default_instance_ = NULL;

Signature_ActivityStatus* Signature_ActivityStatus::New(::google::protobuf::Arena* arena) const {
  Signature_ActivityStatus* n = new Signature_ActivityStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature_ActivityStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Signature_ActivityStatus, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Signature_ActivityStatus*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(start_time_ms_, cycling_);
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool Signature_ActivityStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 start_time_ms = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_time_ms_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_unknown_status;
        break;
      }

      // optional bool unknown_status = 2;
      case 2: {
        if (tag == 16) {
         parse_unknown_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unknown_status_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_walking;
        break;
      }

      // optional bool walking = 3;
      case 3: {
        if (tag == 24) {
         parse_walking:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &walking_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_running;
        break;
      }

      // optional bool running = 4;
      case 4: {
        if (tag == 32) {
         parse_running:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &running_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_stationary;
        break;
      }

      // optional bool stationary = 5;
      case 5: {
        if (tag == 40) {
         parse_stationary:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stationary_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_automotive;
        break;
      }

      // optional bool automotive = 6;
      case 6: {
        if (tag == 48) {
         parse_automotive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &automotive_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_tilting;
        break;
      }

      // optional bool tilting = 7;
      case 7: {
        if (tag == 56) {
         parse_tilting:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &tilting_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_cycling;
        break;
      }

      // optional bool cycling = 8;
      case 8: {
        if (tag == 64) {
         parse_cycling:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cycling_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_status;
        break;
      }

      // optional bytes status = 9;
      case 9: {
        if (tag == 74) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  return false;
#undef DO_
}

void Signature_ActivityStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  // optional uint64 start_time_ms = 1;
  if (this->start_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->start_time_ms(), output);
  }

  // optional bool unknown_status = 2;
  if (this->unknown_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->unknown_status(), output);
  }

  // optional bool walking = 3;
  if (this->walking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->walking(), output);
  }

  // optional bool running = 4;
  if (this->running() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->running(), output);
  }

  // optional bool stationary = 5;
  if (this->stationary() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stationary(), output);
  }

  // optional bool automotive = 6;
  if (this->automotive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->automotive(), output);
  }

  // optional bool tilting = 7;
  if (this->tilting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->tilting(), output);
  }

  // optional bool cycling = 8;
  if (this->cycling() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->cycling(), output);
  }

  // optional bytes status = 9;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
}

::google::protobuf::uint8* Signature_ActivityStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  // optional uint64 start_time_ms = 1;
  if (this->start_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->start_time_ms(), target);
  }

  // optional bool unknown_status = 2;
  if (this->unknown_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->unknown_status(), target);
  }

  // optional bool walking = 3;
  if (this->walking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->walking(), target);
  }

  // optional bool running = 4;
  if (this->running() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->running(), target);
  }

  // optional bool stationary = 5;
  if (this->stationary() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->stationary(), target);
  }

  // optional bool automotive = 6;
  if (this->automotive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->automotive(), target);
  }

  // optional bool tilting = 7;
  if (this->tilting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->tilting(), target);
  }

  // optional bool cycling = 8;
  if (this->cycling() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->cycling(), target);
  }

  // optional bytes status = 9;
  if (this->status().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  return target;
}

int Signature_ActivityStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  int total_size = 0;

  // optional uint64 start_time_ms = 1;
  if (this->start_time_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_time_ms());
  }

  // optional bool unknown_status = 2;
  if (this->unknown_status() != 0) {
    total_size += 1 + 1;
  }

  // optional bool walking = 3;
  if (this->walking() != 0) {
    total_size += 1 + 1;
  }

  // optional bool running = 4;
  if (this->running() != 0) {
    total_size += 1 + 1;
  }

  // optional bool stationary = 5;
  if (this->stationary() != 0) {
    total_size += 1 + 1;
  }

  // optional bool automotive = 6;
  if (this->automotive() != 0) {
    total_size += 1 + 1;
  }

  // optional bool tilting = 7;
  if (this->tilting() != 0) {
    total_size += 1 + 1;
  }

  // optional bool cycling = 8;
  if (this->cycling() != 0) {
    total_size += 1 + 1;
  }

  // optional bytes status = 9;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->status());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature_ActivityStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature_ActivityStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature_ActivityStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
    MergeFrom(*source);
  }
}

void Signature_ActivityStatus::MergeFrom(const Signature_ActivityStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.start_time_ms() != 0) {
    set_start_time_ms(from.start_time_ms());
  }
  if (from.unknown_status() != 0) {
    set_unknown_status(from.unknown_status());
  }
  if (from.walking() != 0) {
    set_walking(from.walking());
  }
  if (from.running() != 0) {
    set_running(from.running());
  }
  if (from.stationary() != 0) {
    set_stationary(from.stationary());
  }
  if (from.automotive() != 0) {
    set_automotive(from.automotive());
  }
  if (from.tilting() != 0) {
    set_tilting(from.tilting());
  }
  if (from.cycling() != 0) {
    set_cycling(from.cycling());
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
}

void Signature_ActivityStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature_ActivityStatus::CopyFrom(const Signature_ActivityStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature_ActivityStatus::IsInitialized() const {

  return true;
}

void Signature_ActivityStatus::Swap(Signature_ActivityStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature_ActivityStatus::InternalSwap(Signature_ActivityStatus* other) {
  std::swap(start_time_ms_, other->start_time_ms_);
  std::swap(unknown_status_, other->unknown_status_);
  std::swap(walking_, other->walking_);
  std::swap(running_, other->running_);
  std::swap(stationary_, other->stationary_);
  std::swap(automotive_, other->automotive_);
  std::swap(tilting_, other->tilting_);
  std::swap(cycling_, other->cycling_);
  status_.Swap(&other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature_ActivityStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_ActivityStatus_descriptor_;
  metadata.reflection = Signature_ActivityStatus_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Signature::kTimestampSinceStartFieldNumber;
const int Signature::kLocationFixFieldNumber;
const int Signature::kGpsInfoFieldNumber;
const int Signature::kSensorInfoFieldNumber;
const int Signature::kDeviceInfoFieldNumber;
const int Signature::kActivityStatusFieldNumber;
const int Signature::kLocationHash1FieldNumber;
const int Signature::kLocationHash2FieldNumber;
const int Signature::kUnknown22FieldNumber;
const int Signature::kTimestampFieldNumber;
const int Signature::kRequestHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Signature::Signature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:POGOProtos.Networking.Envelopes.Signature)
}

void Signature::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  gps_info_ = const_cast< ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo*>(&::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo::default_instance());
  sensor_info_ = const_cast< ::POGOProtos::Networking::Envelopes::Signature_SensorInfo*>(&::POGOProtos::Networking::Envelopes::Signature_SensorInfo::default_instance());
  device_info_ = const_cast< ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo*>(&::POGOProtos::Networking::Envelopes::Signature_DeviceInfo::default_instance());
  activity_status_ = const_cast< ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus*>(&::POGOProtos::Networking::Envelopes::Signature_ActivityStatus::default_instance());
}

Signature::Signature(const Signature& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:POGOProtos.Networking.Envelopes.Signature)
}

void Signature::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
  gps_info_ = NULL;
  sensor_info_ = NULL;
  device_info_ = NULL;
  activity_status_ = NULL;
  location_hash1_ = 0u;
  location_hash2_ = 0u;
  unknown22_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
}

Signature::~Signature() {
  // @@protoc_insertion_point(destructor:POGOProtos.Networking.Envelopes.Signature)
  SharedDtor();
}

void Signature::SharedDtor() {
  unknown22_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete gps_info_;
    delete sensor_info_;
    delete device_info_;
    delete activity_status_;
  }
}

void Signature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Signature::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Signature_descriptor_;
}

const Signature& Signature::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  return *default_instance_;
}

Signature* Signature::default_instance_ = NULL;

Signature* Signature::New(::google::protobuf::Arena* arena) const {
  Signature* n = new Signature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Signature::Clear() {
// @@protoc_insertion_point(message_clear_start:POGOProtos.Networking.Envelopes.Signature)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Signature, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Signature*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(location_hash1_, location_hash2_);
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
  if (GetArenaNoVirtual() == NULL && gps_info_ != NULL) delete gps_info_;
  gps_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && sensor_info_ != NULL) delete sensor_info_;
  sensor_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) delete device_info_;
  device_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && activity_status_ != NULL) delete activity_status_;
  activity_status_ = NULL;
  unknown22_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);

#undef ZR_HELPER_
#undef ZR_

  location_fix_.Clear();
  request_hash_.Clear();
}

bool Signature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:POGOProtos.Networking.Envelopes.Signature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 timestamp_since_start = 2;
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_since_start_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_location_fix;
        break;
      }

      // repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
      case 4: {
        if (tag == 34) {
         parse_location_fix:
          DO_(input->IncrementRecursionDepth());
         parse_loop_location_fix:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_location_fix()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_location_fix;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(42)) goto parse_gps_info;
        break;
      }

      // optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
      case 5: {
        if (tag == 42) {
         parse_gps_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gps_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sensor_info;
        break;
      }

      // optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
      case 7: {
        if (tag == 58) {
         parse_sensor_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sensor_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_device_info;
        break;
      }

      // optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
      case 8: {
        if (tag == 66) {
         parse_device_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_device_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_activity_status;
        break;
      }

      // optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
      case 9: {
        if (tag == 74) {
         parse_activity_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_activity_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_location_hash1;
        break;
      }

      // optional uint32 location_hash1 = 10;
      case 10: {
        if (tag == 80) {
         parse_location_hash1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_hash1_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_location_hash2;
        break;
      }

      // optional uint32 location_hash2 = 20;
      case 20: {
        if (tag == 160) {
         parse_location_hash2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_hash2_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(178)) goto parse_unknown22;
        break;
      }

      // optional bytes unknown22 = 22;
      case 22: {
        if (tag == 178) {
         parse_unknown22:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_unknown22()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(184)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 23;
      case 23: {
        if (tag == 184) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(194)) goto parse_request_hash;
        break;
      }

      // repeated uint64 request_hash = 24;
      case 24: {
        if (tag == 194) {
         parse_request_hash:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_request_hash())));
        } else if (tag == 192) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 194, input, this->mutable_request_hash())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:POGOProtos.Networking.Envelopes.Signature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:POGOProtos.Networking.Envelopes.Signature)
  return false;
#undef DO_
}

void Signature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:POGOProtos.Networking.Envelopes.Signature)
  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp_since_start(), output);
  }

  // repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
  for (unsigned int i = 0, n = this->location_fix_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->location_fix(i), output);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
  if (this->has_gps_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->gps_info_, output);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
  if (this->has_sensor_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->sensor_info_, output);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->device_info_, output);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
  if (this->has_activity_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->activity_status_, output);
  }

  // optional uint32 location_hash1 = 10;
  if (this->location_hash1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->location_hash1(), output);
  }

  // optional uint32 location_hash2 = 20;
  if (this->location_hash2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->location_hash2(), output);
  }

  // optional bytes unknown22 = 22;
  if (this->unknown22().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      22, this->unknown22(), output);
  }

  // optional uint64 timestamp = 23;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(23, this->timestamp(), output);
  }

  // repeated uint64 request_hash = 24;
  if (this->request_hash_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_request_hash_cached_byte_size_);
  }
  for (int i = 0; i < this->request_hash_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->request_hash(i), output);
  }

  // @@protoc_insertion_point(serialize_end:POGOProtos.Networking.Envelopes.Signature)
}

::google::protobuf::uint8* Signature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:POGOProtos.Networking.Envelopes.Signature)
  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp_since_start(), target);
  }

  // repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
  for (unsigned int i = 0, n = this->location_fix_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->location_fix(i), false, target);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
  if (this->has_gps_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->gps_info_, false, target);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
  if (this->has_sensor_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->sensor_info_, false, target);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->device_info_, false, target);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
  if (this->has_activity_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->activity_status_, false, target);
  }

  // optional uint32 location_hash1 = 10;
  if (this->location_hash1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->location_hash1(), target);
  }

  // optional uint32 location_hash2 = 20;
  if (this->location_hash2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->location_hash2(), target);
  }

  // optional bytes unknown22 = 22;
  if (this->unknown22().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        22, this->unknown22(), target);
  }

  // optional uint64 timestamp = 23;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(23, this->timestamp(), target);
  }

  // repeated uint64 request_hash = 24;
  if (this->request_hash_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _request_hash_cached_byte_size_, target);
  }
  for (int i = 0; i < this->request_hash_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->request_hash(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:POGOProtos.Networking.Envelopes.Signature)
  return target;
}

int Signature::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:POGOProtos.Networking.Envelopes.Signature)
  int total_size = 0;

  // optional uint64 timestamp_since_start = 2;
  if (this->timestamp_since_start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp_since_start());
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
  if (this->has_gps_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->gps_info_);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
  if (this->has_sensor_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sensor_info_);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
  if (this->has_device_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->device_info_);
  }

  // optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
  if (this->has_activity_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->activity_status_);
  }

  // optional uint32 location_hash1 = 10;
  if (this->location_hash1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->location_hash1());
  }

  // optional uint32 location_hash2 = 20;
  if (this->location_hash2() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->location_hash2());
  }

  // optional bytes unknown22 = 22;
  if (this->unknown22().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->unknown22());
  }

  // optional uint64 timestamp = 23;
  if (this->timestamp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
  total_size += 1 * this->location_fix_size();
  for (int i = 0; i < this->location_fix_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->location_fix(i));
  }

  // repeated uint64 request_hash = 24;
  {
    int data_size = 0;
    for (int i = 0; i < this->request_hash_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->request_hash(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _request_hash_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Signature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:POGOProtos.Networking.Envelopes.Signature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Signature* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Signature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:POGOProtos.Networking.Envelopes.Signature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:POGOProtos.Networking.Envelopes.Signature)
    MergeFrom(*source);
  }
}

void Signature::MergeFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:POGOProtos.Networking.Envelopes.Signature)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  location_fix_.MergeFrom(from.location_fix_);
  request_hash_.MergeFrom(from.request_hash_);
  if (from.timestamp_since_start() != 0) {
    set_timestamp_since_start(from.timestamp_since_start());
  }
  if (from.has_gps_info()) {
    mutable_gps_info()->::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo::MergeFrom(from.gps_info());
  }
  if (from.has_sensor_info()) {
    mutable_sensor_info()->::POGOProtos::Networking::Envelopes::Signature_SensorInfo::MergeFrom(from.sensor_info());
  }
  if (from.has_device_info()) {
    mutable_device_info()->::POGOProtos::Networking::Envelopes::Signature_DeviceInfo::MergeFrom(from.device_info());
  }
  if (from.has_activity_status()) {
    mutable_activity_status()->::POGOProtos::Networking::Envelopes::Signature_ActivityStatus::MergeFrom(from.activity_status());
  }
  if (from.location_hash1() != 0) {
    set_location_hash1(from.location_hash1());
  }
  if (from.location_hash2() != 0) {
    set_location_hash2(from.location_hash2());
  }
  if (from.unknown22().size() > 0) {

    unknown22_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unknown22_);
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Signature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:POGOProtos.Networking.Envelopes.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Signature::CopyFrom(const Signature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:POGOProtos.Networking.Envelopes.Signature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Signature::IsInitialized() const {

  return true;
}

void Signature::Swap(Signature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Signature::InternalSwap(Signature* other) {
  std::swap(timestamp_since_start_, other->timestamp_since_start_);
  location_fix_.UnsafeArenaSwap(&other->location_fix_);
  std::swap(gps_info_, other->gps_info_);
  std::swap(sensor_info_, other->sensor_info_);
  std::swap(device_info_, other->device_info_);
  std::swap(activity_status_, other->activity_status_);
  std::swap(location_hash1_, other->location_hash1_);
  std::swap(location_hash2_, other->location_hash2_);
  unknown22_.Swap(&other->unknown22_);
  std::swap(timestamp_, other->timestamp_);
  request_hash_.UnsafeArenaSwap(&other->request_hash_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Signature::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Signature_descriptor_;
  metadata.reflection = Signature_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Signature_LocationFix

// optional string provider = 1;
void Signature_LocationFix::clear_provider() {
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_LocationFix::provider() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  return provider_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_LocationFix::set_provider(const ::std::string& value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
 void Signature_LocationFix::set_provider(const char* value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
 void Signature_LocationFix::set_provider(const char* value, size_t size) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
 ::std::string* Signature_LocationFix::mutable_provider() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  return provider_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_LocationFix::release_provider() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  
  return provider_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_LocationFix::set_allocated_provider(::std::string* provider) {
  if (provider != NULL) {
    
  } else {
    
  }
  provider_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}

// optional uint64 timestamp_since_start = 2;
void Signature_LocationFix::clear_timestamp_since_start() {
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_LocationFix::timestamp_since_start() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.timestamp_since_start)
  return timestamp_since_start_;
}
 void Signature_LocationFix::set_timestamp_since_start(::google::protobuf::uint64 value) {
  
  timestamp_since_start_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.timestamp_since_start)
}

// optional float latitude = 13;
void Signature_LocationFix::clear_latitude() {
  latitude_ = 0;
}
 float Signature_LocationFix::latitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.latitude)
  return latitude_;
}
 void Signature_LocationFix::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.latitude)
}

// optional float longitude = 14;
void Signature_LocationFix::clear_longitude() {
  longitude_ = 0;
}
 float Signature_LocationFix::longitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.longitude)
  return longitude_;
}
 void Signature_LocationFix::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.longitude)
}

// optional float horizontal_accuracy = 20;
void Signature_LocationFix::clear_horizontal_accuracy() {
  horizontal_accuracy_ = 0;
}
 float Signature_LocationFix::horizontal_accuracy() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.horizontal_accuracy)
  return horizontal_accuracy_;
}
 void Signature_LocationFix::set_horizontal_accuracy(float value) {
  
  horizontal_accuracy_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.horizontal_accuracy)
}

// optional float altitude = 21;
void Signature_LocationFix::clear_altitude() {
  altitude_ = 0;
}
 float Signature_LocationFix::altitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.altitude)
  return altitude_;
}
 void Signature_LocationFix::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.altitude)
}

// optional float vertical_accuracy = 22;
void Signature_LocationFix::clear_vertical_accuracy() {
  vertical_accuracy_ = 0;
}
 float Signature_LocationFix::vertical_accuracy() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.vertical_accuracy)
  return vertical_accuracy_;
}
 void Signature_LocationFix::set_vertical_accuracy(float value) {
  
  vertical_accuracy_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.vertical_accuracy)
}

// optional uint64 provider_status = 26;
void Signature_LocationFix::clear_provider_status() {
  provider_status_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_LocationFix::provider_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider_status)
  return provider_status_;
}
 void Signature_LocationFix::set_provider_status(::google::protobuf::uint64 value) {
  
  provider_status_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider_status)
}

// optional uint32 floor = 27;
void Signature_LocationFix::clear_floor() {
  floor_ = 0u;
}
 ::google::protobuf::uint32 Signature_LocationFix::floor() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.floor)
  return floor_;
}
 void Signature_LocationFix::set_floor(::google::protobuf::uint32 value) {
  
  floor_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.floor)
}

// optional uint64 location_type = 28;
void Signature_LocationFix::clear_location_type() {
  location_type_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_LocationFix::location_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.location_type)
  return location_type_;
}
 void Signature_LocationFix::set_location_type(::google::protobuf::uint64 value) {
  
  location_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.location_type)
}

// -------------------------------------------------------------------

// Signature_AndroidGpsInfo

// optional uint64 time_to_fix = 1;
void Signature_AndroidGpsInfo::clear_time_to_fix() {
  time_to_fix_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_AndroidGpsInfo::time_to_fix() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.time_to_fix)
  return time_to_fix_;
}
 void Signature_AndroidGpsInfo::set_time_to_fix(::google::protobuf::uint64 value) {
  
  time_to_fix_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.time_to_fix)
}

// repeated int32 satellites_prn = 2;
int Signature_AndroidGpsInfo::satellites_prn_size() const {
  return satellites_prn_.size();
}
void Signature_AndroidGpsInfo::clear_satellites_prn() {
  satellites_prn_.Clear();
}
 ::google::protobuf::int32 Signature_AndroidGpsInfo::satellites_prn(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return satellites_prn_.Get(index);
}
 void Signature_AndroidGpsInfo::set_satellites_prn(int index, ::google::protobuf::int32 value) {
  satellites_prn_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
}
 void Signature_AndroidGpsInfo::add_satellites_prn(::google::protobuf::int32 value) {
  satellites_prn_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Signature_AndroidGpsInfo::satellites_prn() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return satellites_prn_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Signature_AndroidGpsInfo::mutable_satellites_prn() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return &satellites_prn_;
}

// repeated float snr = 3;
int Signature_AndroidGpsInfo::snr_size() const {
  return snr_.size();
}
void Signature_AndroidGpsInfo::clear_snr() {
  snr_.Clear();
}
 float Signature_AndroidGpsInfo::snr(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return snr_.Get(index);
}
 void Signature_AndroidGpsInfo::set_snr(int index, float value) {
  snr_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
}
 void Signature_AndroidGpsInfo::add_snr(float value) {
  snr_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
}
 const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::snr() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return snr_;
}
 ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_snr() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return &snr_;
}

// repeated float azimuth = 4;
int Signature_AndroidGpsInfo::azimuth_size() const {
  return azimuth_.size();
}
void Signature_AndroidGpsInfo::clear_azimuth() {
  azimuth_.Clear();
}
 float Signature_AndroidGpsInfo::azimuth(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return azimuth_.Get(index);
}
 void Signature_AndroidGpsInfo::set_azimuth(int index, float value) {
  azimuth_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
}
 void Signature_AndroidGpsInfo::add_azimuth(float value) {
  azimuth_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
}
 const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::azimuth() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return azimuth_;
}
 ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_azimuth() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return &azimuth_;
}

// repeated float elevation = 5;
int Signature_AndroidGpsInfo::elevation_size() const {
  return elevation_.size();
}
void Signature_AndroidGpsInfo::clear_elevation() {
  elevation_.Clear();
}
 float Signature_AndroidGpsInfo::elevation(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return elevation_.Get(index);
}
 void Signature_AndroidGpsInfo::set_elevation(int index, float value) {
  elevation_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
}
 void Signature_AndroidGpsInfo::add_elevation(float value) {
  elevation_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
}
 const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::elevation() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return elevation_;
}
 ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_elevation() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return &elevation_;
}

// repeated bool has_almanac = 6;
int Signature_AndroidGpsInfo::has_almanac_size() const {
  return has_almanac_.size();
}
void Signature_AndroidGpsInfo::clear_has_almanac() {
  has_almanac_.Clear();
}
 bool Signature_AndroidGpsInfo::has_almanac(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return has_almanac_.Get(index);
}
 void Signature_AndroidGpsInfo::set_has_almanac(int index, bool value) {
  has_almanac_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
}
 void Signature_AndroidGpsInfo::add_has_almanac(bool value) {
  has_almanac_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
}
 const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::has_almanac() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return has_almanac_;
}
 ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_has_almanac() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return &has_almanac_;
}

// repeated bool has_ephemeris = 7;
int Signature_AndroidGpsInfo::has_ephemeris_size() const {
  return has_ephemeris_.size();
}
void Signature_AndroidGpsInfo::clear_has_ephemeris() {
  has_ephemeris_.Clear();
}
 bool Signature_AndroidGpsInfo::has_ephemeris(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return has_ephemeris_.Get(index);
}
 void Signature_AndroidGpsInfo::set_has_ephemeris(int index, bool value) {
  has_ephemeris_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
}
 void Signature_AndroidGpsInfo::add_has_ephemeris(bool value) {
  has_ephemeris_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
}
 const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::has_ephemeris() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return has_ephemeris_;
}
 ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_has_ephemeris() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return &has_ephemeris_;
}

// repeated bool used_in_fix = 8;
int Signature_AndroidGpsInfo::used_in_fix_size() const {
  return used_in_fix_.size();
}
void Signature_AndroidGpsInfo::clear_used_in_fix() {
  used_in_fix_.Clear();
}
 bool Signature_AndroidGpsInfo::used_in_fix(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return used_in_fix_.Get(index);
}
 void Signature_AndroidGpsInfo::set_used_in_fix(int index, bool value) {
  used_in_fix_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
}
 void Signature_AndroidGpsInfo::add_used_in_fix(bool value) {
  used_in_fix_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
}
 const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::used_in_fix() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return used_in_fix_;
}
 ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_used_in_fix() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return &used_in_fix_;
}

// -------------------------------------------------------------------

// Signature_SensorInfo

// optional uint64 timestamp_snapshot = 1;
void Signature_SensorInfo::clear_timestamp_snapshot() {
  timestamp_snapshot_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_SensorInfo::timestamp_snapshot() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.timestamp_snapshot)
  return timestamp_snapshot_;
}
 void Signature_SensorInfo::set_timestamp_snapshot(::google::protobuf::uint64 value) {
  
  timestamp_snapshot_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.timestamp_snapshot)
}

// optional double magnetometer_x = 3;
void Signature_SensorInfo::clear_magnetometer_x() {
  magnetometer_x_ = 0;
}
 double Signature_SensorInfo::magnetometer_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_x)
  return magnetometer_x_;
}
 void Signature_SensorInfo::set_magnetometer_x(double value) {
  
  magnetometer_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_x)
}

// optional double magnetometer_y = 4;
void Signature_SensorInfo::clear_magnetometer_y() {
  magnetometer_y_ = 0;
}
 double Signature_SensorInfo::magnetometer_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_y)
  return magnetometer_y_;
}
 void Signature_SensorInfo::set_magnetometer_y(double value) {
  
  magnetometer_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_y)
}

// optional double magnetometer_z = 5;
void Signature_SensorInfo::clear_magnetometer_z() {
  magnetometer_z_ = 0;
}
 double Signature_SensorInfo::magnetometer_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_z)
  return magnetometer_z_;
}
 void Signature_SensorInfo::set_magnetometer_z(double value) {
  
  magnetometer_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_z)
}

// optional double angle_normalized_x = 6;
void Signature_SensorInfo::clear_angle_normalized_x() {
  angle_normalized_x_ = 0;
}
 double Signature_SensorInfo::angle_normalized_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_x)
  return angle_normalized_x_;
}
 void Signature_SensorInfo::set_angle_normalized_x(double value) {
  
  angle_normalized_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_x)
}

// optional double angle_normalized_y = 7;
void Signature_SensorInfo::clear_angle_normalized_y() {
  angle_normalized_y_ = 0;
}
 double Signature_SensorInfo::angle_normalized_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_y)
  return angle_normalized_y_;
}
 void Signature_SensorInfo::set_angle_normalized_y(double value) {
  
  angle_normalized_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_y)
}

// optional double angle_normalized_z = 8;
void Signature_SensorInfo::clear_angle_normalized_z() {
  angle_normalized_z_ = 0;
}
 double Signature_SensorInfo::angle_normalized_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_z)
  return angle_normalized_z_;
}
 void Signature_SensorInfo::set_angle_normalized_z(double value) {
  
  angle_normalized_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_z)
}

// optional double accel_raw_x = 10;
void Signature_SensorInfo::clear_accel_raw_x() {
  accel_raw_x_ = 0;
}
 double Signature_SensorInfo::accel_raw_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_x)
  return accel_raw_x_;
}
 void Signature_SensorInfo::set_accel_raw_x(double value) {
  
  accel_raw_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_x)
}

// optional double accel_raw_y = 11;
void Signature_SensorInfo::clear_accel_raw_y() {
  accel_raw_y_ = 0;
}
 double Signature_SensorInfo::accel_raw_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_y)
  return accel_raw_y_;
}
 void Signature_SensorInfo::set_accel_raw_y(double value) {
  
  accel_raw_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_y)
}

// optional double accel_raw_z = 12;
void Signature_SensorInfo::clear_accel_raw_z() {
  accel_raw_z_ = 0;
}
 double Signature_SensorInfo::accel_raw_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_z)
  return accel_raw_z_;
}
 void Signature_SensorInfo::set_accel_raw_z(double value) {
  
  accel_raw_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_z)
}

// optional double gyroscope_raw_x = 13;
void Signature_SensorInfo::clear_gyroscope_raw_x() {
  gyroscope_raw_x_ = 0;
}
 double Signature_SensorInfo::gyroscope_raw_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_x)
  return gyroscope_raw_x_;
}
 void Signature_SensorInfo::set_gyroscope_raw_x(double value) {
  
  gyroscope_raw_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_x)
}

// optional double gyroscope_raw_y = 14;
void Signature_SensorInfo::clear_gyroscope_raw_y() {
  gyroscope_raw_y_ = 0;
}
 double Signature_SensorInfo::gyroscope_raw_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_y)
  return gyroscope_raw_y_;
}
 void Signature_SensorInfo::set_gyroscope_raw_y(double value) {
  
  gyroscope_raw_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_y)
}

// optional double gyroscope_raw_z = 15;
void Signature_SensorInfo::clear_gyroscope_raw_z() {
  gyroscope_raw_z_ = 0;
}
 double Signature_SensorInfo::gyroscope_raw_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_z)
  return gyroscope_raw_z_;
}
 void Signature_SensorInfo::set_gyroscope_raw_z(double value) {
  
  gyroscope_raw_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_z)
}

// optional double accel_normalized_x = 16;
void Signature_SensorInfo::clear_accel_normalized_x() {
  accel_normalized_x_ = 0;
}
 double Signature_SensorInfo::accel_normalized_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_x)
  return accel_normalized_x_;
}
 void Signature_SensorInfo::set_accel_normalized_x(double value) {
  
  accel_normalized_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_x)
}

// optional double accel_normalized_y = 17;
void Signature_SensorInfo::clear_accel_normalized_y() {
  accel_normalized_y_ = 0;
}
 double Signature_SensorInfo::accel_normalized_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_y)
  return accel_normalized_y_;
}
 void Signature_SensorInfo::set_accel_normalized_y(double value) {
  
  accel_normalized_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_y)
}

// optional double accel_normalized_z = 18;
void Signature_SensorInfo::clear_accel_normalized_z() {
  accel_normalized_z_ = 0;
}
 double Signature_SensorInfo::accel_normalized_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_z)
  return accel_normalized_z_;
}
 void Signature_SensorInfo::set_accel_normalized_z(double value) {
  
  accel_normalized_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_z)
}

// optional uint64 accelerometer_axes = 19;
void Signature_SensorInfo::clear_accelerometer_axes() {
  accelerometer_axes_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_SensorInfo::accelerometer_axes() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accelerometer_axes)
  return accelerometer_axes_;
}
 void Signature_SensorInfo::set_accelerometer_axes(::google::protobuf::uint64 value) {
  
  accelerometer_axes_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accelerometer_axes)
}

// -------------------------------------------------------------------

// Signature_DeviceInfo

// optional string device_id = 1;
void Signature_DeviceInfo::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::device_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
 void Signature_DeviceInfo::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
 void Signature_DeviceInfo::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
 ::std::string* Signature_DeviceInfo::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_device_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}

// optional string android_board_name = 2;
void Signature_DeviceInfo::clear_android_board_name() {
  android_board_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::android_board_name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  return android_board_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_android_board_name(const ::std::string& value) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
 void Signature_DeviceInfo::set_android_board_name(const char* value) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
 void Signature_DeviceInfo::set_android_board_name(const char* value, size_t size) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
 ::std::string* Signature_DeviceInfo::mutable_android_board_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  return android_board_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_android_board_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  
  return android_board_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_android_board_name(::std::string* android_board_name) {
  if (android_board_name != NULL) {
    
  } else {
    
  }
  android_board_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_board_name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}

// optional string android_bootloader = 3;
void Signature_DeviceInfo::clear_android_bootloader() {
  android_bootloader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::android_bootloader() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  return android_bootloader_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_android_bootloader(const ::std::string& value) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
 void Signature_DeviceInfo::set_android_bootloader(const char* value) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
 void Signature_DeviceInfo::set_android_bootloader(const char* value, size_t size) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
 ::std::string* Signature_DeviceInfo::mutable_android_bootloader() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  return android_bootloader_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_android_bootloader() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  
  return android_bootloader_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_android_bootloader(::std::string* android_bootloader) {
  if (android_bootloader != NULL) {
    
  } else {
    
  }
  android_bootloader_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_bootloader);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}

// optional string device_brand = 4;
void Signature_DeviceInfo::clear_device_brand() {
  device_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::device_brand() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  return device_brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_device_brand(const ::std::string& value) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
 void Signature_DeviceInfo::set_device_brand(const char* value) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
 void Signature_DeviceInfo::set_device_brand(const char* value, size_t size) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
 ::std::string* Signature_DeviceInfo::mutable_device_brand() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  return device_brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_device_brand() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  
  return device_brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_device_brand(::std::string* device_brand) {
  if (device_brand != NULL) {
    
  } else {
    
  }
  device_brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_brand);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}

// optional string device_model = 5;
void Signature_DeviceInfo::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::device_model() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  return device_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
 void Signature_DeviceInfo::set_device_model(const char* value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
 void Signature_DeviceInfo::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
 ::std::string* Signature_DeviceInfo::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_device_model() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}

// optional string device_model_identifier = 6;
void Signature_DeviceInfo::clear_device_model_identifier() {
  device_model_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::device_model_identifier() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  return device_model_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_device_model_identifier(const ::std::string& value) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
 void Signature_DeviceInfo::set_device_model_identifier(const char* value) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
 void Signature_DeviceInfo::set_device_model_identifier(const char* value, size_t size) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
 ::std::string* Signature_DeviceInfo::mutable_device_model_identifier() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  return device_model_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_device_model_identifier() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  
  return device_model_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_device_model_identifier(::std::string* device_model_identifier) {
  if (device_model_identifier != NULL) {
    
  } else {
    
  }
  device_model_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model_identifier);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}

// optional string device_model_boot = 7;
void Signature_DeviceInfo::clear_device_model_boot() {
  device_model_boot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::device_model_boot() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  return device_model_boot_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_device_model_boot(const ::std::string& value) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
 void Signature_DeviceInfo::set_device_model_boot(const char* value) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
 void Signature_DeviceInfo::set_device_model_boot(const char* value, size_t size) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
 ::std::string* Signature_DeviceInfo::mutable_device_model_boot() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  return device_model_boot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_device_model_boot() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  
  return device_model_boot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_device_model_boot(::std::string* device_model_boot) {
  if (device_model_boot != NULL) {
    
  } else {
    
  }
  device_model_boot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model_boot);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}

// optional string hardware_manufacturer = 8;
void Signature_DeviceInfo::clear_hardware_manufacturer() {
  hardware_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::hardware_manufacturer() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  return hardware_manufacturer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_hardware_manufacturer(const ::std::string& value) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
 void Signature_DeviceInfo::set_hardware_manufacturer(const char* value) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
 void Signature_DeviceInfo::set_hardware_manufacturer(const char* value, size_t size) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
 ::std::string* Signature_DeviceInfo::mutable_hardware_manufacturer() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  return hardware_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_hardware_manufacturer() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  
  return hardware_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_hardware_manufacturer(::std::string* hardware_manufacturer) {
  if (hardware_manufacturer != NULL) {
    
  } else {
    
  }
  hardware_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardware_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}

// optional string hardware_model = 9;
void Signature_DeviceInfo::clear_hardware_model() {
  hardware_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::hardware_model() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  return hardware_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_hardware_model(const ::std::string& value) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
 void Signature_DeviceInfo::set_hardware_model(const char* value) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
 void Signature_DeviceInfo::set_hardware_model(const char* value, size_t size) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
 ::std::string* Signature_DeviceInfo::mutable_hardware_model() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  return hardware_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_hardware_model() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  
  return hardware_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_hardware_model(::std::string* hardware_model) {
  if (hardware_model != NULL) {
    
  } else {
    
  }
  hardware_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardware_model);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}

// optional string firmware_brand = 10;
void Signature_DeviceInfo::clear_firmware_brand() {
  firmware_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::firmware_brand() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  return firmware_brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_firmware_brand(const ::std::string& value) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
 void Signature_DeviceInfo::set_firmware_brand(const char* value) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
 void Signature_DeviceInfo::set_firmware_brand(const char* value, size_t size) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
 ::std::string* Signature_DeviceInfo::mutable_firmware_brand() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  return firmware_brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_firmware_brand() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  
  return firmware_brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_firmware_brand(::std::string* firmware_brand) {
  if (firmware_brand != NULL) {
    
  } else {
    
  }
  firmware_brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_brand);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}

// optional string firmware_tags = 12;
void Signature_DeviceInfo::clear_firmware_tags() {
  firmware_tags_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::firmware_tags() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  return firmware_tags_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_firmware_tags(const ::std::string& value) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
 void Signature_DeviceInfo::set_firmware_tags(const char* value) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
 void Signature_DeviceInfo::set_firmware_tags(const char* value, size_t size) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
 ::std::string* Signature_DeviceInfo::mutable_firmware_tags() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  return firmware_tags_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_firmware_tags() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  
  return firmware_tags_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_firmware_tags(::std::string* firmware_tags) {
  if (firmware_tags != NULL) {
    
  } else {
    
  }
  firmware_tags_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_tags);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}

// optional string firmware_type = 13;
void Signature_DeviceInfo::clear_firmware_type() {
  firmware_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::firmware_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  return firmware_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_firmware_type(const ::std::string& value) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
 void Signature_DeviceInfo::set_firmware_type(const char* value) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
 void Signature_DeviceInfo::set_firmware_type(const char* value, size_t size) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
 ::std::string* Signature_DeviceInfo::mutable_firmware_type() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  return firmware_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_firmware_type() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  
  return firmware_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_firmware_type(::std::string* firmware_type) {
  if (firmware_type != NULL) {
    
  } else {
    
  }
  firmware_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_type);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}

// optional string firmware_fingerprint = 14;
void Signature_DeviceInfo::clear_firmware_fingerprint() {
  firmware_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_DeviceInfo::firmware_fingerprint() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  return firmware_fingerprint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_firmware_fingerprint(const ::std::string& value) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
 void Signature_DeviceInfo::set_firmware_fingerprint(const char* value) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
 void Signature_DeviceInfo::set_firmware_fingerprint(const char* value, size_t size) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
 ::std::string* Signature_DeviceInfo::mutable_firmware_fingerprint() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  return firmware_fingerprint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_DeviceInfo::release_firmware_fingerprint() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  
  return firmware_fingerprint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_DeviceInfo::set_allocated_firmware_fingerprint(::std::string* firmware_fingerprint) {
  if (firmware_fingerprint != NULL) {
    
  } else {
    
  }
  firmware_fingerprint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_fingerprint);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}

// -------------------------------------------------------------------

// Signature_ActivityStatus

// optional uint64 start_time_ms = 1;
void Signature_ActivityStatus::clear_start_time_ms() {
  start_time_ms_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature_ActivityStatus::start_time_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.start_time_ms)
  return start_time_ms_;
}
 void Signature_ActivityStatus::set_start_time_ms(::google::protobuf::uint64 value) {
  
  start_time_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.start_time_ms)
}

// optional bool unknown_status = 2;
void Signature_ActivityStatus::clear_unknown_status() {
  unknown_status_ = false;
}
 bool Signature_ActivityStatus::unknown_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.unknown_status)
  return unknown_status_;
}
 void Signature_ActivityStatus::set_unknown_status(bool value) {
  
  unknown_status_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.unknown_status)
}

// optional bool walking = 3;
void Signature_ActivityStatus::clear_walking() {
  walking_ = false;
}
 bool Signature_ActivityStatus::walking() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.walking)
  return walking_;
}
 void Signature_ActivityStatus::set_walking(bool value) {
  
  walking_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.walking)
}

// optional bool running = 4;
void Signature_ActivityStatus::clear_running() {
  running_ = false;
}
 bool Signature_ActivityStatus::running() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.running)
  return running_;
}
 void Signature_ActivityStatus::set_running(bool value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.running)
}

// optional bool stationary = 5;
void Signature_ActivityStatus::clear_stationary() {
  stationary_ = false;
}
 bool Signature_ActivityStatus::stationary() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.stationary)
  return stationary_;
}
 void Signature_ActivityStatus::set_stationary(bool value) {
  
  stationary_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.stationary)
}

// optional bool automotive = 6;
void Signature_ActivityStatus::clear_automotive() {
  automotive_ = false;
}
 bool Signature_ActivityStatus::automotive() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.automotive)
  return automotive_;
}
 void Signature_ActivityStatus::set_automotive(bool value) {
  
  automotive_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.automotive)
}

// optional bool tilting = 7;
void Signature_ActivityStatus::clear_tilting() {
  tilting_ = false;
}
 bool Signature_ActivityStatus::tilting() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.tilting)
  return tilting_;
}
 void Signature_ActivityStatus::set_tilting(bool value) {
  
  tilting_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.tilting)
}

// optional bool cycling = 8;
void Signature_ActivityStatus::clear_cycling() {
  cycling_ = false;
}
 bool Signature_ActivityStatus::cycling() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.cycling)
  return cycling_;
}
 void Signature_ActivityStatus::set_cycling(bool value) {
  
  cycling_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.cycling)
}

// optional bytes status = 9;
void Signature_ActivityStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature_ActivityStatus::status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_ActivityStatus::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
 void Signature_ActivityStatus::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
 void Signature_ActivityStatus::set_status(const void* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
 ::std::string* Signature_ActivityStatus::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature_ActivityStatus::release_status() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature_ActivityStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}

// -------------------------------------------------------------------

// Signature

// optional uint64 timestamp_since_start = 2;
void Signature::clear_timestamp_since_start() {
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature::timestamp_since_start() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.timestamp_since_start)
  return timestamp_since_start_;
}
 void Signature::set_timestamp_since_start(::google::protobuf::uint64 value) {
  
  timestamp_since_start_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.timestamp_since_start)
}

// repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
int Signature::location_fix_size() const {
  return location_fix_.size();
}
void Signature::clear_location_fix() {
  location_fix_.Clear();
}
const ::POGOProtos::Networking::Envelopes::Signature_LocationFix& Signature::location_fix(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Get(index);
}
::POGOProtos::Networking::Envelopes::Signature_LocationFix* Signature::mutable_location_fix(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Mutable(index);
}
::POGOProtos::Networking::Envelopes::Signature_LocationFix* Signature::add_location_fix() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Add();
}
::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >*
Signature::mutable_location_fix() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return &location_fix_;
}
const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >&
Signature::location_fix() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_;
}

// optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
bool Signature::has_gps_info() const {
  return !_is_default_instance_ && gps_info_ != NULL;
}
void Signature::clear_gps_info() {
  if (GetArenaNoVirtual() == NULL && gps_info_ != NULL) delete gps_info_;
  gps_info_ = NULL;
}
const ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo& Signature::gps_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.gps_info)
  return gps_info_ != NULL ? *gps_info_ : *default_instance_->gps_info_;
}
::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* Signature::mutable_gps_info() {
  
  if (gps_info_ == NULL) {
    gps_info_ = new ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.gps_info)
  return gps_info_;
}
::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* Signature::release_gps_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.gps_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* temp = gps_info_;
  gps_info_ = NULL;
  return temp;
}
void Signature::set_allocated_gps_info(::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* gps_info) {
  delete gps_info_;
  gps_info_ = gps_info;
  if (gps_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.gps_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
bool Signature::has_sensor_info() const {
  return !_is_default_instance_ && sensor_info_ != NULL;
}
void Signature::clear_sensor_info() {
  if (GetArenaNoVirtual() == NULL && sensor_info_ != NULL) delete sensor_info_;
  sensor_info_ = NULL;
}
const ::POGOProtos::Networking::Envelopes::Signature_SensorInfo& Signature::sensor_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  return sensor_info_ != NULL ? *sensor_info_ : *default_instance_->sensor_info_;
}
::POGOProtos::Networking::Envelopes::Signature_SensorInfo* Signature::mutable_sensor_info() {
  
  if (sensor_info_ == NULL) {
    sensor_info_ = new ::POGOProtos::Networking::Envelopes::Signature_SensorInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  return sensor_info_;
}
::POGOProtos::Networking::Envelopes::Signature_SensorInfo* Signature::release_sensor_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* temp = sensor_info_;
  sensor_info_ = NULL;
  return temp;
}
void Signature::set_allocated_sensor_info(::POGOProtos::Networking::Envelopes::Signature_SensorInfo* sensor_info) {
  delete sensor_info_;
  sensor_info_ = sensor_info;
  if (sensor_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.sensor_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
bool Signature::has_device_info() const {
  return !_is_default_instance_ && device_info_ != NULL;
}
void Signature::clear_device_info() {
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) delete device_info_;
  device_info_ = NULL;
}
const ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo& Signature::device_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.device_info)
  return device_info_ != NULL ? *device_info_ : *default_instance_->device_info_;
}
::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* Signature::mutable_device_info() {
  
  if (device_info_ == NULL) {
    device_info_ = new ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.device_info)
  return device_info_;
}
::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* Signature::release_device_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.device_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* temp = device_info_;
  device_info_ = NULL;
  return temp;
}
void Signature::set_allocated_device_info(::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* device_info) {
  delete device_info_;
  device_info_ = device_info;
  if (device_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.device_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
bool Signature::has_activity_status() const {
  return !_is_default_instance_ && activity_status_ != NULL;
}
void Signature::clear_activity_status() {
  if (GetArenaNoVirtual() == NULL && activity_status_ != NULL) delete activity_status_;
  activity_status_ = NULL;
}
const ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus& Signature::activity_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.activity_status)
  return activity_status_ != NULL ? *activity_status_ : *default_instance_->activity_status_;
}
::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* Signature::mutable_activity_status() {
  
  if (activity_status_ == NULL) {
    activity_status_ = new ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.activity_status)
  return activity_status_;
}
::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* Signature::release_activity_status() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.activity_status)
  
  ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* temp = activity_status_;
  activity_status_ = NULL;
  return temp;
}
void Signature::set_allocated_activity_status(::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* activity_status) {
  delete activity_status_;
  activity_status_ = activity_status;
  if (activity_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.activity_status)
}

// optional uint32 location_hash1 = 10;
void Signature::clear_location_hash1() {
  location_hash1_ = 0u;
}
 ::google::protobuf::uint32 Signature::location_hash1() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_hash1)
  return location_hash1_;
}
 void Signature::set_location_hash1(::google::protobuf::uint32 value) {
  
  location_hash1_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.location_hash1)
}

// optional uint32 location_hash2 = 20;
void Signature::clear_location_hash2() {
  location_hash2_ = 0u;
}
 ::google::protobuf::uint32 Signature::location_hash2() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_hash2)
  return location_hash2_;
}
 void Signature::set_location_hash2(::google::protobuf::uint32 value) {
  
  location_hash2_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.location_hash2)
}

// optional bytes unknown22 = 22;
void Signature::clear_unknown22() {
  unknown22_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Signature::unknown22() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.unknown22)
  return unknown22_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature::set_unknown22(const ::std::string& value) {
  
  unknown22_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.unknown22)
}
 void Signature::set_unknown22(const char* value) {
  
  unknown22_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.unknown22)
}
 void Signature::set_unknown22(const void* value, size_t size) {
  
  unknown22_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.unknown22)
}
 ::std::string* Signature::mutable_unknown22() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.unknown22)
  return unknown22_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Signature::release_unknown22() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.unknown22)
  
  return unknown22_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Signature::set_allocated_unknown22(::std::string* unknown22) {
  if (unknown22 != NULL) {
    
  } else {
    
  }
  unknown22_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unknown22);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.unknown22)
}

// optional uint64 timestamp = 23;
void Signature::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Signature::timestamp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.timestamp)
  return timestamp_;
}
 void Signature::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.timestamp)
}

// repeated uint64 request_hash = 24;
int Signature::request_hash_size() const {
  return request_hash_.size();
}
void Signature::clear_request_hash() {
  request_hash_.Clear();
}
 ::google::protobuf::uint64 Signature::request_hash(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return request_hash_.Get(index);
}
 void Signature::set_request_hash(int index, ::google::protobuf::uint64 value) {
  request_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.request_hash)
}
 void Signature::add_request_hash(::google::protobuf::uint64 value) {
  request_hash_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.request_hash)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Signature::request_hash() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return request_hash_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Signature::mutable_request_hash() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return &request_hash_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Envelopes
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)
