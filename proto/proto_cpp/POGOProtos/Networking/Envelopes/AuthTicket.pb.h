// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Envelopes/AuthTicket.proto

#ifndef PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Envelopes {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();

class AuthTicket;

// ===================================================================

class AuthTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.AuthTicket) */ {
 public:
  AuthTicket();
  virtual ~AuthTicket();

  AuthTicket(const AuthTicket& from);

  inline AuthTicket& operator=(const AuthTicket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthTicket& default_instance();

  void Swap(AuthTicket* other);

  // implements Message ----------------------------------------------

  inline AuthTicket* New() const { return New(NULL); }

  AuthTicket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthTicket& from);
  void MergeFrom(const AuthTicket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AuthTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes start = 1;
  void clear_start();
  static const int kStartFieldNumber = 1;
  const ::std::string& start() const;
  void set_start(const ::std::string& value);
  void set_start(const char* value);
  void set_start(const void* value, size_t size);
  ::std::string* mutable_start();
  ::std::string* release_start();
  void set_allocated_start(::std::string* start);

  // optional uint64 expire_timestamp_ms = 2;
  void clear_expire_timestamp_ms();
  static const int kExpireTimestampMsFieldNumber = 2;
  ::google::protobuf::uint64 expire_timestamp_ms() const;
  void set_expire_timestamp_ms(::google::protobuf::uint64 value);

  // optional bytes end = 3;
  void clear_end();
  static const int kEndFieldNumber = 3;
  const ::std::string& end() const;
  void set_end(const ::std::string& value);
  void set_end(const char* value);
  void set_end(const void* value, size_t size);
  ::std::string* mutable_end();
  ::std::string* release_end();
  void set_allocated_end(::std::string* end);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.AuthTicket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr start_;
  ::google::protobuf::uint64 expire_timestamp_ms_;
  ::google::protobuf::internal::ArenaStringPtr end_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto();

  void InitAsDefaultInstance();
  static AuthTicket* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthTicket

// optional bytes start = 1;
inline void AuthTicket::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthTicket::start() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.AuthTicket.start)
  return start_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthTicket::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.AuthTicket.start)
}
inline void AuthTicket::set_start(const char* value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.AuthTicket.start)
}
inline void AuthTicket::set_start(const void* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.AuthTicket.start)
}
inline ::std::string* AuthTicket::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.AuthTicket.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthTicket::release_start() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.AuthTicket.start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthTicket::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.AuthTicket.start)
}

// optional uint64 expire_timestamp_ms = 2;
inline void AuthTicket::clear_expire_timestamp_ms() {
  expire_timestamp_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AuthTicket::expire_timestamp_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.AuthTicket.expire_timestamp_ms)
  return expire_timestamp_ms_;
}
inline void AuthTicket::set_expire_timestamp_ms(::google::protobuf::uint64 value) {
  
  expire_timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.AuthTicket.expire_timestamp_ms)
}

// optional bytes end = 3;
inline void AuthTicket::clear_end() {
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthTicket::end() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.AuthTicket.end)
  return end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthTicket::set_end(const ::std::string& value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.AuthTicket.end)
}
inline void AuthTicket::set_end(const char* value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.AuthTicket.end)
}
inline void AuthTicket::set_end(const void* value, size_t size) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.AuthTicket.end)
}
inline ::std::string* AuthTicket::mutable_end() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.AuthTicket.end)
  return end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthTicket::release_end() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.AuthTicket.end)
  
  return end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthTicket::set_allocated_end(::std::string* end) {
  if (end != NULL) {
    
  } else {
    
  }
  end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.AuthTicket.end)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Envelopes
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fAuthTicket_2eproto__INCLUDED
