// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Envelopes/Signature.proto

#ifndef PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto__INCLUDED
#define PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace POGOProtos {
namespace Networking {
namespace Envelopes {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

class Signature;
class Signature_ActivityStatus;
class Signature_AndroidGpsInfo;
class Signature_DeviceInfo;
class Signature_LocationFix;
class Signature_SensorInfo;

// ===================================================================

class Signature_LocationFix : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature.LocationFix) */ {
 public:
  Signature_LocationFix();
  virtual ~Signature_LocationFix();

  Signature_LocationFix(const Signature_LocationFix& from);

  inline Signature_LocationFix& operator=(const Signature_LocationFix& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature_LocationFix& default_instance();

  void Swap(Signature_LocationFix* other);

  // implements Message ----------------------------------------------

  inline Signature_LocationFix* New() const { return New(NULL); }

  Signature_LocationFix* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature_LocationFix& from);
  void MergeFrom(const Signature_LocationFix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature_LocationFix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string provider = 1;
  void clear_provider();
  static const int kProviderFieldNumber = 1;
  const ::std::string& provider() const;
  void set_provider(const ::std::string& value);
  void set_provider(const char* value);
  void set_provider(const char* value, size_t size);
  ::std::string* mutable_provider();
  ::std::string* release_provider();
  void set_allocated_provider(::std::string* provider);

  // optional uint64 timestamp_snapshot = 2;
  void clear_timestamp_snapshot();
  static const int kTimestampSnapshotFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_snapshot() const;
  void set_timestamp_snapshot(::google::protobuf::uint64 value);

  // optional float latitude = 13;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 13;
  float latitude() const;
  void set_latitude(float value);

  // optional float longitude = 14;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 14;
  float longitude() const;
  void set_longitude(float value);

  // optional float horizontal_accuracy = 20;
  void clear_horizontal_accuracy();
  static const int kHorizontalAccuracyFieldNumber = 20;
  float horizontal_accuracy() const;
  void set_horizontal_accuracy(float value);

  // optional float altitude = 21;
  void clear_altitude();
  static const int kAltitudeFieldNumber = 21;
  float altitude() const;
  void set_altitude(float value);

  // optional float vertical_accuracy = 22;
  void clear_vertical_accuracy();
  static const int kVerticalAccuracyFieldNumber = 22;
  float vertical_accuracy() const;
  void set_vertical_accuracy(float value);

  // optional uint64 provider_status = 26;
  void clear_provider_status();
  static const int kProviderStatusFieldNumber = 26;
  ::google::protobuf::uint64 provider_status() const;
  void set_provider_status(::google::protobuf::uint64 value);

  // optional uint32 floor = 27;
  void clear_floor();
  static const int kFloorFieldNumber = 27;
  ::google::protobuf::uint32 floor() const;
  void set_floor(::google::protobuf::uint32 value);

  // optional uint64 location_type = 28;
  void clear_location_type();
  static const int kLocationTypeFieldNumber = 28;
  ::google::protobuf::uint64 location_type() const;
  void set_location_type(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature.LocationFix)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr provider_;
  ::google::protobuf::uint64 timestamp_snapshot_;
  float latitude_;
  float longitude_;
  float horizontal_accuracy_;
  float altitude_;
  ::google::protobuf::uint64 provider_status_;
  float vertical_accuracy_;
  ::google::protobuf::uint32 floor_;
  ::google::protobuf::uint64 location_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature_LocationFix* default_instance_;
};
// -------------------------------------------------------------------

class Signature_AndroidGpsInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo) */ {
 public:
  Signature_AndroidGpsInfo();
  virtual ~Signature_AndroidGpsInfo();

  Signature_AndroidGpsInfo(const Signature_AndroidGpsInfo& from);

  inline Signature_AndroidGpsInfo& operator=(const Signature_AndroidGpsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature_AndroidGpsInfo& default_instance();

  void Swap(Signature_AndroidGpsInfo* other);

  // implements Message ----------------------------------------------

  inline Signature_AndroidGpsInfo* New() const { return New(NULL); }

  Signature_AndroidGpsInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature_AndroidGpsInfo& from);
  void MergeFrom(const Signature_AndroidGpsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature_AndroidGpsInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 time_to_fix = 1;
  void clear_time_to_fix();
  static const int kTimeToFixFieldNumber = 1;
  ::google::protobuf::uint64 time_to_fix() const;
  void set_time_to_fix(::google::protobuf::uint64 value);

  // repeated int32 satellites_prn = 2;
  int satellites_prn_size() const;
  void clear_satellites_prn();
  static const int kSatellitesPrnFieldNumber = 2;
  ::google::protobuf::int32 satellites_prn(int index) const;
  void set_satellites_prn(int index, ::google::protobuf::int32 value);
  void add_satellites_prn(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      satellites_prn() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_satellites_prn();

  // repeated float snr = 3;
  int snr_size() const;
  void clear_snr();
  static const int kSnrFieldNumber = 3;
  float snr(int index) const;
  void set_snr(int index, float value);
  void add_snr(float value);
  const ::google::protobuf::RepeatedField< float >&
      snr() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_snr();

  // repeated float azimuth = 4;
  int azimuth_size() const;
  void clear_azimuth();
  static const int kAzimuthFieldNumber = 4;
  float azimuth(int index) const;
  void set_azimuth(int index, float value);
  void add_azimuth(float value);
  const ::google::protobuf::RepeatedField< float >&
      azimuth() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_azimuth();

  // repeated float elevation = 5;
  int elevation_size() const;
  void clear_elevation();
  static const int kElevationFieldNumber = 5;
  float elevation(int index) const;
  void set_elevation(int index, float value);
  void add_elevation(float value);
  const ::google::protobuf::RepeatedField< float >&
      elevation() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_elevation();

  // repeated bool has_almanac = 6;
  int has_almanac_size() const;
  void clear_has_almanac();
  static const int kHasAlmanacFieldNumber = 6;
  bool has_almanac(int index) const;
  void set_has_almanac(int index, bool value);
  void add_has_almanac(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      has_almanac() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_has_almanac();

  // repeated bool has_ephemeris = 7;
  int has_ephemeris_size() const;
  void clear_has_ephemeris();
  static const int kHasEphemerisFieldNumber = 7;
  bool has_ephemeris(int index) const;
  void set_has_ephemeris(int index, bool value);
  void add_has_ephemeris(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      has_ephemeris() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_has_ephemeris();

  // repeated bool used_in_fix = 8;
  int used_in_fix_size() const;
  void clear_used_in_fix();
  static const int kUsedInFixFieldNumber = 8;
  bool used_in_fix(int index) const;
  void set_used_in_fix(int index, bool value);
  void add_used_in_fix(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      used_in_fix() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_used_in_fix();

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 time_to_fix_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > satellites_prn_;
  mutable int _satellites_prn_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > snr_;
  mutable int _snr_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > azimuth_;
  mutable int _azimuth_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > elevation_;
  mutable int _elevation_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > has_almanac_;
  mutable int _has_almanac_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > has_ephemeris_;
  mutable int _has_ephemeris_cached_byte_size_;
  ::google::protobuf::RepeatedField< bool > used_in_fix_;
  mutable int _used_in_fix_cached_byte_size_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature_AndroidGpsInfo* default_instance_;
};
// -------------------------------------------------------------------

class Signature_SensorInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature.SensorInfo) */ {
 public:
  Signature_SensorInfo();
  virtual ~Signature_SensorInfo();

  Signature_SensorInfo(const Signature_SensorInfo& from);

  inline Signature_SensorInfo& operator=(const Signature_SensorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature_SensorInfo& default_instance();

  void Swap(Signature_SensorInfo* other);

  // implements Message ----------------------------------------------

  inline Signature_SensorInfo* New() const { return New(NULL); }

  Signature_SensorInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature_SensorInfo& from);
  void MergeFrom(const Signature_SensorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature_SensorInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 timestamp_snapshot = 1;
  void clear_timestamp_snapshot();
  static const int kTimestampSnapshotFieldNumber = 1;
  ::google::protobuf::uint64 timestamp_snapshot() const;
  void set_timestamp_snapshot(::google::protobuf::uint64 value);

  // optional double magnetometer_x = 3;
  void clear_magnetometer_x();
  static const int kMagnetometerXFieldNumber = 3;
  double magnetometer_x() const;
  void set_magnetometer_x(double value);

  // optional double magnetometer_y = 4;
  void clear_magnetometer_y();
  static const int kMagnetometerYFieldNumber = 4;
  double magnetometer_y() const;
  void set_magnetometer_y(double value);

  // optional double magnetometer_z = 5;
  void clear_magnetometer_z();
  static const int kMagnetometerZFieldNumber = 5;
  double magnetometer_z() const;
  void set_magnetometer_z(double value);

  // optional double angle_normalized_x = 6;
  void clear_angle_normalized_x();
  static const int kAngleNormalizedXFieldNumber = 6;
  double angle_normalized_x() const;
  void set_angle_normalized_x(double value);

  // optional double angle_normalized_y = 7;
  void clear_angle_normalized_y();
  static const int kAngleNormalizedYFieldNumber = 7;
  double angle_normalized_y() const;
  void set_angle_normalized_y(double value);

  // optional double angle_normalized_z = 8;
  void clear_angle_normalized_z();
  static const int kAngleNormalizedZFieldNumber = 8;
  double angle_normalized_z() const;
  void set_angle_normalized_z(double value);

  // optional double accel_raw_x = 10;
  void clear_accel_raw_x();
  static const int kAccelRawXFieldNumber = 10;
  double accel_raw_x() const;
  void set_accel_raw_x(double value);

  // optional double accel_raw_y = 11;
  void clear_accel_raw_y();
  static const int kAccelRawYFieldNumber = 11;
  double accel_raw_y() const;
  void set_accel_raw_y(double value);

  // optional double accel_raw_z = 12;
  void clear_accel_raw_z();
  static const int kAccelRawZFieldNumber = 12;
  double accel_raw_z() const;
  void set_accel_raw_z(double value);

  // optional double gyroscope_raw_x = 13;
  void clear_gyroscope_raw_x();
  static const int kGyroscopeRawXFieldNumber = 13;
  double gyroscope_raw_x() const;
  void set_gyroscope_raw_x(double value);

  // optional double gyroscope_raw_y = 14;
  void clear_gyroscope_raw_y();
  static const int kGyroscopeRawYFieldNumber = 14;
  double gyroscope_raw_y() const;
  void set_gyroscope_raw_y(double value);

  // optional double gyroscope_raw_z = 15;
  void clear_gyroscope_raw_z();
  static const int kGyroscopeRawZFieldNumber = 15;
  double gyroscope_raw_z() const;
  void set_gyroscope_raw_z(double value);

  // optional double accel_normalized_x = 16;
  void clear_accel_normalized_x();
  static const int kAccelNormalizedXFieldNumber = 16;
  double accel_normalized_x() const;
  void set_accel_normalized_x(double value);

  // optional double accel_normalized_y = 17;
  void clear_accel_normalized_y();
  static const int kAccelNormalizedYFieldNumber = 17;
  double accel_normalized_y() const;
  void set_accel_normalized_y(double value);

  // optional double accel_normalized_z = 18;
  void clear_accel_normalized_z();
  static const int kAccelNormalizedZFieldNumber = 18;
  double accel_normalized_z() const;
  void set_accel_normalized_z(double value);

  // optional uint64 accelerometer_axes = 19;
  void clear_accelerometer_axes();
  static const int kAccelerometerAxesFieldNumber = 19;
  ::google::protobuf::uint64 accelerometer_axes() const;
  void set_accelerometer_axes(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature.SensorInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 timestamp_snapshot_;
  double magnetometer_x_;
  double magnetometer_y_;
  double magnetometer_z_;
  double angle_normalized_x_;
  double angle_normalized_y_;
  double angle_normalized_z_;
  double accel_raw_x_;
  double accel_raw_y_;
  double accel_raw_z_;
  double gyroscope_raw_x_;
  double gyroscope_raw_y_;
  double gyroscope_raw_z_;
  double accel_normalized_x_;
  double accel_normalized_y_;
  double accel_normalized_z_;
  ::google::protobuf::uint64 accelerometer_axes_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature_SensorInfo* default_instance_;
};
// -------------------------------------------------------------------

class Signature_DeviceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature.DeviceInfo) */ {
 public:
  Signature_DeviceInfo();
  virtual ~Signature_DeviceInfo();

  Signature_DeviceInfo(const Signature_DeviceInfo& from);

  inline Signature_DeviceInfo& operator=(const Signature_DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature_DeviceInfo& default_instance();

  void Swap(Signature_DeviceInfo* other);

  // implements Message ----------------------------------------------

  inline Signature_DeviceInfo* New() const { return New(NULL); }

  Signature_DeviceInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature_DeviceInfo& from);
  void MergeFrom(const Signature_DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature_DeviceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string device_id = 1;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 1;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // optional string android_board_name = 2;
  void clear_android_board_name();
  static const int kAndroidBoardNameFieldNumber = 2;
  const ::std::string& android_board_name() const;
  void set_android_board_name(const ::std::string& value);
  void set_android_board_name(const char* value);
  void set_android_board_name(const char* value, size_t size);
  ::std::string* mutable_android_board_name();
  ::std::string* release_android_board_name();
  void set_allocated_android_board_name(::std::string* android_board_name);

  // optional string android_bootloader = 3;
  void clear_android_bootloader();
  static const int kAndroidBootloaderFieldNumber = 3;
  const ::std::string& android_bootloader() const;
  void set_android_bootloader(const ::std::string& value);
  void set_android_bootloader(const char* value);
  void set_android_bootloader(const char* value, size_t size);
  ::std::string* mutable_android_bootloader();
  ::std::string* release_android_bootloader();
  void set_allocated_android_bootloader(::std::string* android_bootloader);

  // optional string device_brand = 4;
  void clear_device_brand();
  static const int kDeviceBrandFieldNumber = 4;
  const ::std::string& device_brand() const;
  void set_device_brand(const ::std::string& value);
  void set_device_brand(const char* value);
  void set_device_brand(const char* value, size_t size);
  ::std::string* mutable_device_brand();
  ::std::string* release_device_brand();
  void set_allocated_device_brand(::std::string* device_brand);

  // optional string device_model = 5;
  void clear_device_model();
  static const int kDeviceModelFieldNumber = 5;
  const ::std::string& device_model() const;
  void set_device_model(const ::std::string& value);
  void set_device_model(const char* value);
  void set_device_model(const char* value, size_t size);
  ::std::string* mutable_device_model();
  ::std::string* release_device_model();
  void set_allocated_device_model(::std::string* device_model);

  // optional string device_model_identifier = 6;
  void clear_device_model_identifier();
  static const int kDeviceModelIdentifierFieldNumber = 6;
  const ::std::string& device_model_identifier() const;
  void set_device_model_identifier(const ::std::string& value);
  void set_device_model_identifier(const char* value);
  void set_device_model_identifier(const char* value, size_t size);
  ::std::string* mutable_device_model_identifier();
  ::std::string* release_device_model_identifier();
  void set_allocated_device_model_identifier(::std::string* device_model_identifier);

  // optional string device_model_boot = 7;
  void clear_device_model_boot();
  static const int kDeviceModelBootFieldNumber = 7;
  const ::std::string& device_model_boot() const;
  void set_device_model_boot(const ::std::string& value);
  void set_device_model_boot(const char* value);
  void set_device_model_boot(const char* value, size_t size);
  ::std::string* mutable_device_model_boot();
  ::std::string* release_device_model_boot();
  void set_allocated_device_model_boot(::std::string* device_model_boot);

  // optional string hardware_manufacturer = 8;
  void clear_hardware_manufacturer();
  static const int kHardwareManufacturerFieldNumber = 8;
  const ::std::string& hardware_manufacturer() const;
  void set_hardware_manufacturer(const ::std::string& value);
  void set_hardware_manufacturer(const char* value);
  void set_hardware_manufacturer(const char* value, size_t size);
  ::std::string* mutable_hardware_manufacturer();
  ::std::string* release_hardware_manufacturer();
  void set_allocated_hardware_manufacturer(::std::string* hardware_manufacturer);

  // optional string hardware_model = 9;
  void clear_hardware_model();
  static const int kHardwareModelFieldNumber = 9;
  const ::std::string& hardware_model() const;
  void set_hardware_model(const ::std::string& value);
  void set_hardware_model(const char* value);
  void set_hardware_model(const char* value, size_t size);
  ::std::string* mutable_hardware_model();
  ::std::string* release_hardware_model();
  void set_allocated_hardware_model(::std::string* hardware_model);

  // optional string firmware_brand = 10;
  void clear_firmware_brand();
  static const int kFirmwareBrandFieldNumber = 10;
  const ::std::string& firmware_brand() const;
  void set_firmware_brand(const ::std::string& value);
  void set_firmware_brand(const char* value);
  void set_firmware_brand(const char* value, size_t size);
  ::std::string* mutable_firmware_brand();
  ::std::string* release_firmware_brand();
  void set_allocated_firmware_brand(::std::string* firmware_brand);

  // optional string firmware_tags = 12;
  void clear_firmware_tags();
  static const int kFirmwareTagsFieldNumber = 12;
  const ::std::string& firmware_tags() const;
  void set_firmware_tags(const ::std::string& value);
  void set_firmware_tags(const char* value);
  void set_firmware_tags(const char* value, size_t size);
  ::std::string* mutable_firmware_tags();
  ::std::string* release_firmware_tags();
  void set_allocated_firmware_tags(::std::string* firmware_tags);

  // optional string firmware_type = 13;
  void clear_firmware_type();
  static const int kFirmwareTypeFieldNumber = 13;
  const ::std::string& firmware_type() const;
  void set_firmware_type(const ::std::string& value);
  void set_firmware_type(const char* value);
  void set_firmware_type(const char* value, size_t size);
  ::std::string* mutable_firmware_type();
  ::std::string* release_firmware_type();
  void set_allocated_firmware_type(::std::string* firmware_type);

  // optional string firmware_fingerprint = 14;
  void clear_firmware_fingerprint();
  static const int kFirmwareFingerprintFieldNumber = 14;
  const ::std::string& firmware_fingerprint() const;
  void set_firmware_fingerprint(const ::std::string& value);
  void set_firmware_fingerprint(const char* value);
  void set_firmware_fingerprint(const char* value, size_t size);
  ::std::string* mutable_firmware_fingerprint();
  ::std::string* release_firmware_fingerprint();
  void set_allocated_firmware_fingerprint(::std::string* firmware_fingerprint);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature.DeviceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  ::google::protobuf::internal::ArenaStringPtr android_board_name_;
  ::google::protobuf::internal::ArenaStringPtr android_bootloader_;
  ::google::protobuf::internal::ArenaStringPtr device_brand_;
  ::google::protobuf::internal::ArenaStringPtr device_model_;
  ::google::protobuf::internal::ArenaStringPtr device_model_identifier_;
  ::google::protobuf::internal::ArenaStringPtr device_model_boot_;
  ::google::protobuf::internal::ArenaStringPtr hardware_manufacturer_;
  ::google::protobuf::internal::ArenaStringPtr hardware_model_;
  ::google::protobuf::internal::ArenaStringPtr firmware_brand_;
  ::google::protobuf::internal::ArenaStringPtr firmware_tags_;
  ::google::protobuf::internal::ArenaStringPtr firmware_type_;
  ::google::protobuf::internal::ArenaStringPtr firmware_fingerprint_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature_DeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class Signature_ActivityStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature.ActivityStatus) */ {
 public:
  Signature_ActivityStatus();
  virtual ~Signature_ActivityStatus();

  Signature_ActivityStatus(const Signature_ActivityStatus& from);

  inline Signature_ActivityStatus& operator=(const Signature_ActivityStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature_ActivityStatus& default_instance();

  void Swap(Signature_ActivityStatus* other);

  // implements Message ----------------------------------------------

  inline Signature_ActivityStatus* New() const { return New(NULL); }

  Signature_ActivityStatus* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature_ActivityStatus& from);
  void MergeFrom(const Signature_ActivityStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature_ActivityStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_time_ms = 1;
  void clear_start_time_ms();
  static const int kStartTimeMsFieldNumber = 1;
  ::google::protobuf::uint64 start_time_ms() const;
  void set_start_time_ms(::google::protobuf::uint64 value);

  // optional bool unknown_status = 2;
  void clear_unknown_status();
  static const int kUnknownStatusFieldNumber = 2;
  bool unknown_status() const;
  void set_unknown_status(bool value);

  // optional bool walking = 3;
  void clear_walking();
  static const int kWalkingFieldNumber = 3;
  bool walking() const;
  void set_walking(bool value);

  // optional bool running = 4;
  void clear_running();
  static const int kRunningFieldNumber = 4;
  bool running() const;
  void set_running(bool value);

  // optional bool stationary = 5;
  void clear_stationary();
  static const int kStationaryFieldNumber = 5;
  bool stationary() const;
  void set_stationary(bool value);

  // optional bool automotive = 6;
  void clear_automotive();
  static const int kAutomotiveFieldNumber = 6;
  bool automotive() const;
  void set_automotive(bool value);

  // optional bool tilting = 7;
  void clear_tilting();
  static const int kTiltingFieldNumber = 7;
  bool tilting() const;
  void set_tilting(bool value);

  // optional bool cycling = 8;
  void clear_cycling();
  static const int kCyclingFieldNumber = 8;
  bool cycling() const;
  void set_cycling(bool value);

  // optional bytes status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  void set_status(const char* value);
  void set_status(const void* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature.ActivityStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 start_time_ms_;
  bool unknown_status_;
  bool walking_;
  bool running_;
  bool stationary_;
  bool automotive_;
  bool tilting_;
  bool cycling_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature_ActivityStatus* default_instance_;
};
// -------------------------------------------------------------------

class Signature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:POGOProtos.Networking.Envelopes.Signature) */ {
 public:
  Signature();
  virtual ~Signature();

  Signature(const Signature& from);

  inline Signature& operator=(const Signature& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Signature& default_instance();

  void Swap(Signature* other);

  // implements Message ----------------------------------------------

  inline Signature* New() const { return New(NULL); }

  Signature* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Signature& from);
  void MergeFrom(const Signature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Signature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Signature_LocationFix LocationFix;
  typedef Signature_AndroidGpsInfo AndroidGpsInfo;
  typedef Signature_SensorInfo SensorInfo;
  typedef Signature_DeviceInfo DeviceInfo;
  typedef Signature_ActivityStatus ActivityStatus;

  // accessors -------------------------------------------------------

  // optional uint64 timestamp_since_start = 2;
  void clear_timestamp_since_start();
  static const int kTimestampSinceStartFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_since_start() const;
  void set_timestamp_since_start(::google::protobuf::uint64 value);

  // repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
  int location_fix_size() const;
  void clear_location_fix();
  static const int kLocationFixFieldNumber = 4;
  const ::POGOProtos::Networking::Envelopes::Signature_LocationFix& location_fix(int index) const;
  ::POGOProtos::Networking::Envelopes::Signature_LocationFix* mutable_location_fix(int index);
  ::POGOProtos::Networking::Envelopes::Signature_LocationFix* add_location_fix();
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >*
      mutable_location_fix();
  const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >&
      location_fix() const;

  // optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
  bool has_gps_info() const;
  void clear_gps_info();
  static const int kGpsInfoFieldNumber = 5;
  const ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo& gps_info() const;
  ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* mutable_gps_info();
  ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* release_gps_info();
  void set_allocated_gps_info(::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* gps_info);

  // optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
  bool has_sensor_info() const;
  void clear_sensor_info();
  static const int kSensorInfoFieldNumber = 7;
  const ::POGOProtos::Networking::Envelopes::Signature_SensorInfo& sensor_info() const;
  ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* mutable_sensor_info();
  ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* release_sensor_info();
  void set_allocated_sensor_info(::POGOProtos::Networking::Envelopes::Signature_SensorInfo* sensor_info);

  // optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
  bool has_device_info() const;
  void clear_device_info();
  static const int kDeviceInfoFieldNumber = 8;
  const ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo& device_info() const;
  ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* mutable_device_info();
  ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* release_device_info();
  void set_allocated_device_info(::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* device_info);

  // optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
  bool has_activity_status() const;
  void clear_activity_status();
  static const int kActivityStatusFieldNumber = 9;
  const ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus& activity_status() const;
  ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* mutable_activity_status();
  ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* release_activity_status();
  void set_allocated_activity_status(::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* activity_status);

  // optional uint64 location_hash1 = 10;
  void clear_location_hash1();
  static const int kLocationHash1FieldNumber = 10;
  ::google::protobuf::uint64 location_hash1() const;
  void set_location_hash1(::google::protobuf::uint64 value);

  // optional uint64 location_hash2 = 20;
  void clear_location_hash2();
  static const int kLocationHash2FieldNumber = 20;
  ::google::protobuf::uint64 location_hash2() const;
  void set_location_hash2(::google::protobuf::uint64 value);

  // optional bytes session_hash = 22;
  void clear_session_hash();
  static const int kSessionHashFieldNumber = 22;
  const ::std::string& session_hash() const;
  void set_session_hash(const ::std::string& value);
  void set_session_hash(const char* value);
  void set_session_hash(const void* value, size_t size);
  ::std::string* mutable_session_hash();
  ::std::string* release_session_hash();
  void set_allocated_session_hash(::std::string* session_hash);

  // optional uint64 timestamp = 23;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 23;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // repeated uint64 request_hash = 24;
  int request_hash_size() const;
  void clear_request_hash();
  static const int kRequestHashFieldNumber = 24;
  ::google::protobuf::uint64 request_hash(int index) const;
  void set_request_hash(int index, ::google::protobuf::uint64 value);
  void add_request_hash(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      request_hash() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_request_hash();

  // optional int64 unknown25 = 25;
  void clear_unknown25();
  static const int kUnknown25FieldNumber = 25;
  ::google::protobuf::int64 unknown25() const;
  void set_unknown25(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:POGOProtos.Networking.Envelopes.Signature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 timestamp_since_start_;
  ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix > location_fix_;
  ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* gps_info_;
  ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* sensor_info_;
  ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* device_info_;
  ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* activity_status_;
  ::google::protobuf::uint64 location_hash1_;
  ::google::protobuf::uint64 location_hash2_;
  ::google::protobuf::internal::ArenaStringPtr session_hash_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > request_hash_;
  mutable int _request_hash_cached_byte_size_;
  ::google::protobuf::int64 unknown25_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_AssignDesc_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();
  friend void protobuf_ShutdownFile_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto();

  void InitAsDefaultInstance();
  static Signature* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Signature_LocationFix

// optional string provider = 1;
inline void Signature_LocationFix::clear_provider() {
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_LocationFix::provider() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  return provider_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_LocationFix::set_provider(const ::std::string& value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
inline void Signature_LocationFix::set_provider(const char* value) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
inline void Signature_LocationFix::set_provider(const char* value, size_t size) {
  
  provider_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}
inline ::std::string* Signature_LocationFix::mutable_provider() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  return provider_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_LocationFix::release_provider() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
  
  return provider_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_LocationFix::set_allocated_provider(::std::string* provider) {
  if (provider != NULL) {
    
  } else {
    
  }
  provider_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), provider);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider)
}

// optional uint64 timestamp_snapshot = 2;
inline void Signature_LocationFix::clear_timestamp_snapshot() {
  timestamp_snapshot_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_LocationFix::timestamp_snapshot() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.timestamp_snapshot)
  return timestamp_snapshot_;
}
inline void Signature_LocationFix::set_timestamp_snapshot(::google::protobuf::uint64 value) {
  
  timestamp_snapshot_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.timestamp_snapshot)
}

// optional float latitude = 13;
inline void Signature_LocationFix::clear_latitude() {
  latitude_ = 0;
}
inline float Signature_LocationFix::latitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.latitude)
  return latitude_;
}
inline void Signature_LocationFix::set_latitude(float value) {
  
  latitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.latitude)
}

// optional float longitude = 14;
inline void Signature_LocationFix::clear_longitude() {
  longitude_ = 0;
}
inline float Signature_LocationFix::longitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.longitude)
  return longitude_;
}
inline void Signature_LocationFix::set_longitude(float value) {
  
  longitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.longitude)
}

// optional float horizontal_accuracy = 20;
inline void Signature_LocationFix::clear_horizontal_accuracy() {
  horizontal_accuracy_ = 0;
}
inline float Signature_LocationFix::horizontal_accuracy() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.horizontal_accuracy)
  return horizontal_accuracy_;
}
inline void Signature_LocationFix::set_horizontal_accuracy(float value) {
  
  horizontal_accuracy_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.horizontal_accuracy)
}

// optional float altitude = 21;
inline void Signature_LocationFix::clear_altitude() {
  altitude_ = 0;
}
inline float Signature_LocationFix::altitude() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.altitude)
  return altitude_;
}
inline void Signature_LocationFix::set_altitude(float value) {
  
  altitude_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.altitude)
}

// optional float vertical_accuracy = 22;
inline void Signature_LocationFix::clear_vertical_accuracy() {
  vertical_accuracy_ = 0;
}
inline float Signature_LocationFix::vertical_accuracy() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.vertical_accuracy)
  return vertical_accuracy_;
}
inline void Signature_LocationFix::set_vertical_accuracy(float value) {
  
  vertical_accuracy_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.vertical_accuracy)
}

// optional uint64 provider_status = 26;
inline void Signature_LocationFix::clear_provider_status() {
  provider_status_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_LocationFix::provider_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider_status)
  return provider_status_;
}
inline void Signature_LocationFix::set_provider_status(::google::protobuf::uint64 value) {
  
  provider_status_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.provider_status)
}

// optional uint32 floor = 27;
inline void Signature_LocationFix::clear_floor() {
  floor_ = 0u;
}
inline ::google::protobuf::uint32 Signature_LocationFix::floor() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.floor)
  return floor_;
}
inline void Signature_LocationFix::set_floor(::google::protobuf::uint32 value) {
  
  floor_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.floor)
}

// optional uint64 location_type = 28;
inline void Signature_LocationFix::clear_location_type() {
  location_type_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_LocationFix::location_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.LocationFix.location_type)
  return location_type_;
}
inline void Signature_LocationFix::set_location_type(::google::protobuf::uint64 value) {
  
  location_type_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.LocationFix.location_type)
}

// -------------------------------------------------------------------

// Signature_AndroidGpsInfo

// optional uint64 time_to_fix = 1;
inline void Signature_AndroidGpsInfo::clear_time_to_fix() {
  time_to_fix_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_AndroidGpsInfo::time_to_fix() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.time_to_fix)
  return time_to_fix_;
}
inline void Signature_AndroidGpsInfo::set_time_to_fix(::google::protobuf::uint64 value) {
  
  time_to_fix_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.time_to_fix)
}

// repeated int32 satellites_prn = 2;
inline int Signature_AndroidGpsInfo::satellites_prn_size() const {
  return satellites_prn_.size();
}
inline void Signature_AndroidGpsInfo::clear_satellites_prn() {
  satellites_prn_.Clear();
}
inline ::google::protobuf::int32 Signature_AndroidGpsInfo::satellites_prn(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return satellites_prn_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_satellites_prn(int index, ::google::protobuf::int32 value) {
  satellites_prn_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
}
inline void Signature_AndroidGpsInfo::add_satellites_prn(::google::protobuf::int32 value) {
  satellites_prn_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Signature_AndroidGpsInfo::satellites_prn() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return satellites_prn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Signature_AndroidGpsInfo::mutable_satellites_prn() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.satellites_prn)
  return &satellites_prn_;
}

// repeated float snr = 3;
inline int Signature_AndroidGpsInfo::snr_size() const {
  return snr_.size();
}
inline void Signature_AndroidGpsInfo::clear_snr() {
  snr_.Clear();
}
inline float Signature_AndroidGpsInfo::snr(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return snr_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_snr(int index, float value) {
  snr_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
}
inline void Signature_AndroidGpsInfo::add_snr(float value) {
  snr_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
}
inline const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::snr() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return snr_;
}
inline ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_snr() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.snr)
  return &snr_;
}

// repeated float azimuth = 4;
inline int Signature_AndroidGpsInfo::azimuth_size() const {
  return azimuth_.size();
}
inline void Signature_AndroidGpsInfo::clear_azimuth() {
  azimuth_.Clear();
}
inline float Signature_AndroidGpsInfo::azimuth(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return azimuth_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_azimuth(int index, float value) {
  azimuth_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
}
inline void Signature_AndroidGpsInfo::add_azimuth(float value) {
  azimuth_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
}
inline const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::azimuth() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return azimuth_;
}
inline ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_azimuth() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.azimuth)
  return &azimuth_;
}

// repeated float elevation = 5;
inline int Signature_AndroidGpsInfo::elevation_size() const {
  return elevation_.size();
}
inline void Signature_AndroidGpsInfo::clear_elevation() {
  elevation_.Clear();
}
inline float Signature_AndroidGpsInfo::elevation(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return elevation_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_elevation(int index, float value) {
  elevation_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
}
inline void Signature_AndroidGpsInfo::add_elevation(float value) {
  elevation_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
}
inline const ::google::protobuf::RepeatedField< float >&
Signature_AndroidGpsInfo::elevation() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return elevation_;
}
inline ::google::protobuf::RepeatedField< float >*
Signature_AndroidGpsInfo::mutable_elevation() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.elevation)
  return &elevation_;
}

// repeated bool has_almanac = 6;
inline int Signature_AndroidGpsInfo::has_almanac_size() const {
  return has_almanac_.size();
}
inline void Signature_AndroidGpsInfo::clear_has_almanac() {
  has_almanac_.Clear();
}
inline bool Signature_AndroidGpsInfo::has_almanac(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return has_almanac_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_has_almanac(int index, bool value) {
  has_almanac_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
}
inline void Signature_AndroidGpsInfo::add_has_almanac(bool value) {
  has_almanac_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
}
inline const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::has_almanac() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return has_almanac_;
}
inline ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_has_almanac() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_almanac)
  return &has_almanac_;
}

// repeated bool has_ephemeris = 7;
inline int Signature_AndroidGpsInfo::has_ephemeris_size() const {
  return has_ephemeris_.size();
}
inline void Signature_AndroidGpsInfo::clear_has_ephemeris() {
  has_ephemeris_.Clear();
}
inline bool Signature_AndroidGpsInfo::has_ephemeris(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return has_ephemeris_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_has_ephemeris(int index, bool value) {
  has_ephemeris_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
}
inline void Signature_AndroidGpsInfo::add_has_ephemeris(bool value) {
  has_ephemeris_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
}
inline const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::has_ephemeris() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return has_ephemeris_;
}
inline ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_has_ephemeris() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.has_ephemeris)
  return &has_ephemeris_;
}

// repeated bool used_in_fix = 8;
inline int Signature_AndroidGpsInfo::used_in_fix_size() const {
  return used_in_fix_.size();
}
inline void Signature_AndroidGpsInfo::clear_used_in_fix() {
  used_in_fix_.Clear();
}
inline bool Signature_AndroidGpsInfo::used_in_fix(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return used_in_fix_.Get(index);
}
inline void Signature_AndroidGpsInfo::set_used_in_fix(int index, bool value) {
  used_in_fix_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
}
inline void Signature_AndroidGpsInfo::add_used_in_fix(bool value) {
  used_in_fix_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
}
inline const ::google::protobuf::RepeatedField< bool >&
Signature_AndroidGpsInfo::used_in_fix() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return used_in_fix_;
}
inline ::google::protobuf::RepeatedField< bool >*
Signature_AndroidGpsInfo::mutable_used_in_fix() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo.used_in_fix)
  return &used_in_fix_;
}

// -------------------------------------------------------------------

// Signature_SensorInfo

// optional uint64 timestamp_snapshot = 1;
inline void Signature_SensorInfo::clear_timestamp_snapshot() {
  timestamp_snapshot_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_SensorInfo::timestamp_snapshot() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.timestamp_snapshot)
  return timestamp_snapshot_;
}
inline void Signature_SensorInfo::set_timestamp_snapshot(::google::protobuf::uint64 value) {
  
  timestamp_snapshot_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.timestamp_snapshot)
}

// optional double magnetometer_x = 3;
inline void Signature_SensorInfo::clear_magnetometer_x() {
  magnetometer_x_ = 0;
}
inline double Signature_SensorInfo::magnetometer_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_x)
  return magnetometer_x_;
}
inline void Signature_SensorInfo::set_magnetometer_x(double value) {
  
  magnetometer_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_x)
}

// optional double magnetometer_y = 4;
inline void Signature_SensorInfo::clear_magnetometer_y() {
  magnetometer_y_ = 0;
}
inline double Signature_SensorInfo::magnetometer_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_y)
  return magnetometer_y_;
}
inline void Signature_SensorInfo::set_magnetometer_y(double value) {
  
  magnetometer_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_y)
}

// optional double magnetometer_z = 5;
inline void Signature_SensorInfo::clear_magnetometer_z() {
  magnetometer_z_ = 0;
}
inline double Signature_SensorInfo::magnetometer_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_z)
  return magnetometer_z_;
}
inline void Signature_SensorInfo::set_magnetometer_z(double value) {
  
  magnetometer_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.magnetometer_z)
}

// optional double angle_normalized_x = 6;
inline void Signature_SensorInfo::clear_angle_normalized_x() {
  angle_normalized_x_ = 0;
}
inline double Signature_SensorInfo::angle_normalized_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_x)
  return angle_normalized_x_;
}
inline void Signature_SensorInfo::set_angle_normalized_x(double value) {
  
  angle_normalized_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_x)
}

// optional double angle_normalized_y = 7;
inline void Signature_SensorInfo::clear_angle_normalized_y() {
  angle_normalized_y_ = 0;
}
inline double Signature_SensorInfo::angle_normalized_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_y)
  return angle_normalized_y_;
}
inline void Signature_SensorInfo::set_angle_normalized_y(double value) {
  
  angle_normalized_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_y)
}

// optional double angle_normalized_z = 8;
inline void Signature_SensorInfo::clear_angle_normalized_z() {
  angle_normalized_z_ = 0;
}
inline double Signature_SensorInfo::angle_normalized_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_z)
  return angle_normalized_z_;
}
inline void Signature_SensorInfo::set_angle_normalized_z(double value) {
  
  angle_normalized_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.angle_normalized_z)
}

// optional double accel_raw_x = 10;
inline void Signature_SensorInfo::clear_accel_raw_x() {
  accel_raw_x_ = 0;
}
inline double Signature_SensorInfo::accel_raw_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_x)
  return accel_raw_x_;
}
inline void Signature_SensorInfo::set_accel_raw_x(double value) {
  
  accel_raw_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_x)
}

// optional double accel_raw_y = 11;
inline void Signature_SensorInfo::clear_accel_raw_y() {
  accel_raw_y_ = 0;
}
inline double Signature_SensorInfo::accel_raw_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_y)
  return accel_raw_y_;
}
inline void Signature_SensorInfo::set_accel_raw_y(double value) {
  
  accel_raw_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_y)
}

// optional double accel_raw_z = 12;
inline void Signature_SensorInfo::clear_accel_raw_z() {
  accel_raw_z_ = 0;
}
inline double Signature_SensorInfo::accel_raw_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_z)
  return accel_raw_z_;
}
inline void Signature_SensorInfo::set_accel_raw_z(double value) {
  
  accel_raw_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_raw_z)
}

// optional double gyroscope_raw_x = 13;
inline void Signature_SensorInfo::clear_gyroscope_raw_x() {
  gyroscope_raw_x_ = 0;
}
inline double Signature_SensorInfo::gyroscope_raw_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_x)
  return gyroscope_raw_x_;
}
inline void Signature_SensorInfo::set_gyroscope_raw_x(double value) {
  
  gyroscope_raw_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_x)
}

// optional double gyroscope_raw_y = 14;
inline void Signature_SensorInfo::clear_gyroscope_raw_y() {
  gyroscope_raw_y_ = 0;
}
inline double Signature_SensorInfo::gyroscope_raw_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_y)
  return gyroscope_raw_y_;
}
inline void Signature_SensorInfo::set_gyroscope_raw_y(double value) {
  
  gyroscope_raw_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_y)
}

// optional double gyroscope_raw_z = 15;
inline void Signature_SensorInfo::clear_gyroscope_raw_z() {
  gyroscope_raw_z_ = 0;
}
inline double Signature_SensorInfo::gyroscope_raw_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_z)
  return gyroscope_raw_z_;
}
inline void Signature_SensorInfo::set_gyroscope_raw_z(double value) {
  
  gyroscope_raw_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.gyroscope_raw_z)
}

// optional double accel_normalized_x = 16;
inline void Signature_SensorInfo::clear_accel_normalized_x() {
  accel_normalized_x_ = 0;
}
inline double Signature_SensorInfo::accel_normalized_x() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_x)
  return accel_normalized_x_;
}
inline void Signature_SensorInfo::set_accel_normalized_x(double value) {
  
  accel_normalized_x_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_x)
}

// optional double accel_normalized_y = 17;
inline void Signature_SensorInfo::clear_accel_normalized_y() {
  accel_normalized_y_ = 0;
}
inline double Signature_SensorInfo::accel_normalized_y() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_y)
  return accel_normalized_y_;
}
inline void Signature_SensorInfo::set_accel_normalized_y(double value) {
  
  accel_normalized_y_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_y)
}

// optional double accel_normalized_z = 18;
inline void Signature_SensorInfo::clear_accel_normalized_z() {
  accel_normalized_z_ = 0;
}
inline double Signature_SensorInfo::accel_normalized_z() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_z)
  return accel_normalized_z_;
}
inline void Signature_SensorInfo::set_accel_normalized_z(double value) {
  
  accel_normalized_z_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accel_normalized_z)
}

// optional uint64 accelerometer_axes = 19;
inline void Signature_SensorInfo::clear_accelerometer_axes() {
  accelerometer_axes_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_SensorInfo::accelerometer_axes() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accelerometer_axes)
  return accelerometer_axes_;
}
inline void Signature_SensorInfo::set_accelerometer_axes(::google::protobuf::uint64 value) {
  
  accelerometer_axes_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.SensorInfo.accelerometer_axes)
}

// -------------------------------------------------------------------

// Signature_DeviceInfo

// optional string device_id = 1;
inline void Signature_DeviceInfo::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::device_id() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
inline void Signature_DeviceInfo::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
inline void Signature_DeviceInfo::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}
inline ::std::string* Signature_DeviceInfo::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_device_id() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_id)
}

// optional string android_board_name = 2;
inline void Signature_DeviceInfo::clear_android_board_name() {
  android_board_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::android_board_name() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  return android_board_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_android_board_name(const ::std::string& value) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
inline void Signature_DeviceInfo::set_android_board_name(const char* value) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
inline void Signature_DeviceInfo::set_android_board_name(const char* value, size_t size) {
  
  android_board_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}
inline ::std::string* Signature_DeviceInfo::mutable_android_board_name() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  return android_board_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_android_board_name() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
  
  return android_board_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_android_board_name(::std::string* android_board_name) {
  if (android_board_name != NULL) {
    
  } else {
    
  }
  android_board_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_board_name);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_board_name)
}

// optional string android_bootloader = 3;
inline void Signature_DeviceInfo::clear_android_bootloader() {
  android_bootloader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::android_bootloader() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  return android_bootloader_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_android_bootloader(const ::std::string& value) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
inline void Signature_DeviceInfo::set_android_bootloader(const char* value) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
inline void Signature_DeviceInfo::set_android_bootloader(const char* value, size_t size) {
  
  android_bootloader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}
inline ::std::string* Signature_DeviceInfo::mutable_android_bootloader() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  return android_bootloader_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_android_bootloader() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
  
  return android_bootloader_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_android_bootloader(::std::string* android_bootloader) {
  if (android_bootloader != NULL) {
    
  } else {
    
  }
  android_bootloader_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), android_bootloader);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.android_bootloader)
}

// optional string device_brand = 4;
inline void Signature_DeviceInfo::clear_device_brand() {
  device_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::device_brand() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  return device_brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_device_brand(const ::std::string& value) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
inline void Signature_DeviceInfo::set_device_brand(const char* value) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
inline void Signature_DeviceInfo::set_device_brand(const char* value, size_t size) {
  
  device_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}
inline ::std::string* Signature_DeviceInfo::mutable_device_brand() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  return device_brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_device_brand() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
  
  return device_brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_device_brand(::std::string* device_brand) {
  if (device_brand != NULL) {
    
  } else {
    
  }
  device_brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_brand);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_brand)
}

// optional string device_model = 5;
inline void Signature_DeviceInfo::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::device_model() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  return device_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
inline void Signature_DeviceInfo::set_device_model(const char* value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
inline void Signature_DeviceInfo::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}
inline ::std::string* Signature_DeviceInfo::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_device_model() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model)
}

// optional string device_model_identifier = 6;
inline void Signature_DeviceInfo::clear_device_model_identifier() {
  device_model_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::device_model_identifier() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  return device_model_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_device_model_identifier(const ::std::string& value) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
inline void Signature_DeviceInfo::set_device_model_identifier(const char* value) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
inline void Signature_DeviceInfo::set_device_model_identifier(const char* value, size_t size) {
  
  device_model_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}
inline ::std::string* Signature_DeviceInfo::mutable_device_model_identifier() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  return device_model_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_device_model_identifier() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
  
  return device_model_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_device_model_identifier(::std::string* device_model_identifier) {
  if (device_model_identifier != NULL) {
    
  } else {
    
  }
  device_model_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model_identifier);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_identifier)
}

// optional string device_model_boot = 7;
inline void Signature_DeviceInfo::clear_device_model_boot() {
  device_model_boot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::device_model_boot() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  return device_model_boot_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_device_model_boot(const ::std::string& value) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
inline void Signature_DeviceInfo::set_device_model_boot(const char* value) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
inline void Signature_DeviceInfo::set_device_model_boot(const char* value, size_t size) {
  
  device_model_boot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}
inline ::std::string* Signature_DeviceInfo::mutable_device_model_boot() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  return device_model_boot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_device_model_boot() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
  
  return device_model_boot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_device_model_boot(::std::string* device_model_boot) {
  if (device_model_boot != NULL) {
    
  } else {
    
  }
  device_model_boot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model_boot);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.device_model_boot)
}

// optional string hardware_manufacturer = 8;
inline void Signature_DeviceInfo::clear_hardware_manufacturer() {
  hardware_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::hardware_manufacturer() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  return hardware_manufacturer_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_hardware_manufacturer(const ::std::string& value) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
inline void Signature_DeviceInfo::set_hardware_manufacturer(const char* value) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
inline void Signature_DeviceInfo::set_hardware_manufacturer(const char* value, size_t size) {
  
  hardware_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}
inline ::std::string* Signature_DeviceInfo::mutable_hardware_manufacturer() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  return hardware_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_hardware_manufacturer() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
  
  return hardware_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_hardware_manufacturer(::std::string* hardware_manufacturer) {
  if (hardware_manufacturer != NULL) {
    
  } else {
    
  }
  hardware_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardware_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_manufacturer)
}

// optional string hardware_model = 9;
inline void Signature_DeviceInfo::clear_hardware_model() {
  hardware_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::hardware_model() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  return hardware_model_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_hardware_model(const ::std::string& value) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
inline void Signature_DeviceInfo::set_hardware_model(const char* value) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
inline void Signature_DeviceInfo::set_hardware_model(const char* value, size_t size) {
  
  hardware_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}
inline ::std::string* Signature_DeviceInfo::mutable_hardware_model() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  return hardware_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_hardware_model() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
  
  return hardware_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_hardware_model(::std::string* hardware_model) {
  if (hardware_model != NULL) {
    
  } else {
    
  }
  hardware_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hardware_model);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.hardware_model)
}

// optional string firmware_brand = 10;
inline void Signature_DeviceInfo::clear_firmware_brand() {
  firmware_brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::firmware_brand() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  return firmware_brand_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_firmware_brand(const ::std::string& value) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
inline void Signature_DeviceInfo::set_firmware_brand(const char* value) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
inline void Signature_DeviceInfo::set_firmware_brand(const char* value, size_t size) {
  
  firmware_brand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}
inline ::std::string* Signature_DeviceInfo::mutable_firmware_brand() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  return firmware_brand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_firmware_brand() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
  
  return firmware_brand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_firmware_brand(::std::string* firmware_brand) {
  if (firmware_brand != NULL) {
    
  } else {
    
  }
  firmware_brand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_brand);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_brand)
}

// optional string firmware_tags = 12;
inline void Signature_DeviceInfo::clear_firmware_tags() {
  firmware_tags_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::firmware_tags() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  return firmware_tags_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_firmware_tags(const ::std::string& value) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
inline void Signature_DeviceInfo::set_firmware_tags(const char* value) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
inline void Signature_DeviceInfo::set_firmware_tags(const char* value, size_t size) {
  
  firmware_tags_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}
inline ::std::string* Signature_DeviceInfo::mutable_firmware_tags() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  return firmware_tags_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_firmware_tags() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
  
  return firmware_tags_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_firmware_tags(::std::string* firmware_tags) {
  if (firmware_tags != NULL) {
    
  } else {
    
  }
  firmware_tags_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_tags);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_tags)
}

// optional string firmware_type = 13;
inline void Signature_DeviceInfo::clear_firmware_type() {
  firmware_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::firmware_type() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  return firmware_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_firmware_type(const ::std::string& value) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
inline void Signature_DeviceInfo::set_firmware_type(const char* value) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
inline void Signature_DeviceInfo::set_firmware_type(const char* value, size_t size) {
  
  firmware_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}
inline ::std::string* Signature_DeviceInfo::mutable_firmware_type() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  return firmware_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_firmware_type() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
  
  return firmware_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_firmware_type(::std::string* firmware_type) {
  if (firmware_type != NULL) {
    
  } else {
    
  }
  firmware_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_type);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_type)
}

// optional string firmware_fingerprint = 14;
inline void Signature_DeviceInfo::clear_firmware_fingerprint() {
  firmware_fingerprint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_DeviceInfo::firmware_fingerprint() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  return firmware_fingerprint_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_firmware_fingerprint(const ::std::string& value) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
inline void Signature_DeviceInfo::set_firmware_fingerprint(const char* value) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
inline void Signature_DeviceInfo::set_firmware_fingerprint(const char* value, size_t size) {
  
  firmware_fingerprint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}
inline ::std::string* Signature_DeviceInfo::mutable_firmware_fingerprint() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  return firmware_fingerprint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_DeviceInfo::release_firmware_fingerprint() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
  
  return firmware_fingerprint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_DeviceInfo::set_allocated_firmware_fingerprint(::std::string* firmware_fingerprint) {
  if (firmware_fingerprint != NULL) {
    
  } else {
    
  }
  firmware_fingerprint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), firmware_fingerprint);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.DeviceInfo.firmware_fingerprint)
}

// -------------------------------------------------------------------

// Signature_ActivityStatus

// optional uint64 start_time_ms = 1;
inline void Signature_ActivityStatus::clear_start_time_ms() {
  start_time_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature_ActivityStatus::start_time_ms() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.start_time_ms)
  return start_time_ms_;
}
inline void Signature_ActivityStatus::set_start_time_ms(::google::protobuf::uint64 value) {
  
  start_time_ms_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.start_time_ms)
}

// optional bool unknown_status = 2;
inline void Signature_ActivityStatus::clear_unknown_status() {
  unknown_status_ = false;
}
inline bool Signature_ActivityStatus::unknown_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.unknown_status)
  return unknown_status_;
}
inline void Signature_ActivityStatus::set_unknown_status(bool value) {
  
  unknown_status_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.unknown_status)
}

// optional bool walking = 3;
inline void Signature_ActivityStatus::clear_walking() {
  walking_ = false;
}
inline bool Signature_ActivityStatus::walking() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.walking)
  return walking_;
}
inline void Signature_ActivityStatus::set_walking(bool value) {
  
  walking_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.walking)
}

// optional bool running = 4;
inline void Signature_ActivityStatus::clear_running() {
  running_ = false;
}
inline bool Signature_ActivityStatus::running() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.running)
  return running_;
}
inline void Signature_ActivityStatus::set_running(bool value) {
  
  running_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.running)
}

// optional bool stationary = 5;
inline void Signature_ActivityStatus::clear_stationary() {
  stationary_ = false;
}
inline bool Signature_ActivityStatus::stationary() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.stationary)
  return stationary_;
}
inline void Signature_ActivityStatus::set_stationary(bool value) {
  
  stationary_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.stationary)
}

// optional bool automotive = 6;
inline void Signature_ActivityStatus::clear_automotive() {
  automotive_ = false;
}
inline bool Signature_ActivityStatus::automotive() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.automotive)
  return automotive_;
}
inline void Signature_ActivityStatus::set_automotive(bool value) {
  
  automotive_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.automotive)
}

// optional bool tilting = 7;
inline void Signature_ActivityStatus::clear_tilting() {
  tilting_ = false;
}
inline bool Signature_ActivityStatus::tilting() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.tilting)
  return tilting_;
}
inline void Signature_ActivityStatus::set_tilting(bool value) {
  
  tilting_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.tilting)
}

// optional bool cycling = 8;
inline void Signature_ActivityStatus::clear_cycling() {
  cycling_ = false;
}
inline bool Signature_ActivityStatus::cycling() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.cycling)
  return cycling_;
}
inline void Signature_ActivityStatus::set_cycling(bool value) {
  
  cycling_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.cycling)
}

// optional bytes status = 9;
inline void Signature_ActivityStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature_ActivityStatus::status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_ActivityStatus::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
inline void Signature_ActivityStatus::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
inline void Signature_ActivityStatus::set_status(const void* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}
inline ::std::string* Signature_ActivityStatus::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature_ActivityStatus::release_status() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature_ActivityStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.ActivityStatus.status)
}

// -------------------------------------------------------------------

// Signature

// optional uint64 timestamp_since_start = 2;
inline void Signature::clear_timestamp_since_start() {
  timestamp_since_start_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature::timestamp_since_start() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.timestamp_since_start)
  return timestamp_since_start_;
}
inline void Signature::set_timestamp_since_start(::google::protobuf::uint64 value) {
  
  timestamp_since_start_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.timestamp_since_start)
}

// repeated .POGOProtos.Networking.Envelopes.Signature.LocationFix location_fix = 4;
inline int Signature::location_fix_size() const {
  return location_fix_.size();
}
inline void Signature::clear_location_fix() {
  location_fix_.Clear();
}
inline const ::POGOProtos::Networking::Envelopes::Signature_LocationFix& Signature::location_fix(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Get(index);
}
inline ::POGOProtos::Networking::Envelopes::Signature_LocationFix* Signature::mutable_location_fix(int index) {
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Mutable(index);
}
inline ::POGOProtos::Networking::Envelopes::Signature_LocationFix* Signature::add_location_fix() {
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >*
Signature::mutable_location_fix() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return &location_fix_;
}
inline const ::google::protobuf::RepeatedPtrField< ::POGOProtos::Networking::Envelopes::Signature_LocationFix >&
Signature::location_fix() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.location_fix)
  return location_fix_;
}

// optional .POGOProtos.Networking.Envelopes.Signature.AndroidGpsInfo gps_info = 5;
inline bool Signature::has_gps_info() const {
  return !_is_default_instance_ && gps_info_ != NULL;
}
inline void Signature::clear_gps_info() {
  if (GetArenaNoVirtual() == NULL && gps_info_ != NULL) delete gps_info_;
  gps_info_ = NULL;
}
inline const ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo& Signature::gps_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.gps_info)
  return gps_info_ != NULL ? *gps_info_ : *default_instance_->gps_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* Signature::mutable_gps_info() {
  
  if (gps_info_ == NULL) {
    gps_info_ = new ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.gps_info)
  return gps_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* Signature::release_gps_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.gps_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* temp = gps_info_;
  gps_info_ = NULL;
  return temp;
}
inline void Signature::set_allocated_gps_info(::POGOProtos::Networking::Envelopes::Signature_AndroidGpsInfo* gps_info) {
  delete gps_info_;
  gps_info_ = gps_info;
  if (gps_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.gps_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.SensorInfo sensor_info = 7;
inline bool Signature::has_sensor_info() const {
  return !_is_default_instance_ && sensor_info_ != NULL;
}
inline void Signature::clear_sensor_info() {
  if (GetArenaNoVirtual() == NULL && sensor_info_ != NULL) delete sensor_info_;
  sensor_info_ = NULL;
}
inline const ::POGOProtos::Networking::Envelopes::Signature_SensorInfo& Signature::sensor_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  return sensor_info_ != NULL ? *sensor_info_ : *default_instance_->sensor_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* Signature::mutable_sensor_info() {
  
  if (sensor_info_ == NULL) {
    sensor_info_ = new ::POGOProtos::Networking::Envelopes::Signature_SensorInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  return sensor_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* Signature::release_sensor_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.sensor_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_SensorInfo* temp = sensor_info_;
  sensor_info_ = NULL;
  return temp;
}
inline void Signature::set_allocated_sensor_info(::POGOProtos::Networking::Envelopes::Signature_SensorInfo* sensor_info) {
  delete sensor_info_;
  sensor_info_ = sensor_info;
  if (sensor_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.sensor_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.DeviceInfo device_info = 8;
inline bool Signature::has_device_info() const {
  return !_is_default_instance_ && device_info_ != NULL;
}
inline void Signature::clear_device_info() {
  if (GetArenaNoVirtual() == NULL && device_info_ != NULL) delete device_info_;
  device_info_ = NULL;
}
inline const ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo& Signature::device_info() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.device_info)
  return device_info_ != NULL ? *device_info_ : *default_instance_->device_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* Signature::mutable_device_info() {
  
  if (device_info_ == NULL) {
    device_info_ = new ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.device_info)
  return device_info_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* Signature::release_device_info() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.device_info)
  
  ::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* temp = device_info_;
  device_info_ = NULL;
  return temp;
}
inline void Signature::set_allocated_device_info(::POGOProtos::Networking::Envelopes::Signature_DeviceInfo* device_info) {
  delete device_info_;
  device_info_ = device_info;
  if (device_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.device_info)
}

// optional .POGOProtos.Networking.Envelopes.Signature.ActivityStatus activity_status = 9;
inline bool Signature::has_activity_status() const {
  return !_is_default_instance_ && activity_status_ != NULL;
}
inline void Signature::clear_activity_status() {
  if (GetArenaNoVirtual() == NULL && activity_status_ != NULL) delete activity_status_;
  activity_status_ = NULL;
}
inline const ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus& Signature::activity_status() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.activity_status)
  return activity_status_ != NULL ? *activity_status_ : *default_instance_->activity_status_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* Signature::mutable_activity_status() {
  
  if (activity_status_ == NULL) {
    activity_status_ = new ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus;
  }
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.activity_status)
  return activity_status_;
}
inline ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* Signature::release_activity_status() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.activity_status)
  
  ::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* temp = activity_status_;
  activity_status_ = NULL;
  return temp;
}
inline void Signature::set_allocated_activity_status(::POGOProtos::Networking::Envelopes::Signature_ActivityStatus* activity_status) {
  delete activity_status_;
  activity_status_ = activity_status;
  if (activity_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.activity_status)
}

// optional uint64 location_hash1 = 10;
inline void Signature::clear_location_hash1() {
  location_hash1_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature::location_hash1() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_hash1)
  return location_hash1_;
}
inline void Signature::set_location_hash1(::google::protobuf::uint64 value) {
  
  location_hash1_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.location_hash1)
}

// optional uint64 location_hash2 = 20;
inline void Signature::clear_location_hash2() {
  location_hash2_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature::location_hash2() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.location_hash2)
  return location_hash2_;
}
inline void Signature::set_location_hash2(::google::protobuf::uint64 value) {
  
  location_hash2_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.location_hash2)
}

// optional bytes session_hash = 22;
inline void Signature::clear_session_hash() {
  session_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Signature::session_hash() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.session_hash)
  return session_hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature::set_session_hash(const ::std::string& value) {
  
  session_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.session_hash)
}
inline void Signature::set_session_hash(const char* value) {
  
  session_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:POGOProtos.Networking.Envelopes.Signature.session_hash)
}
inline void Signature::set_session_hash(const void* value, size_t size) {
  
  session_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:POGOProtos.Networking.Envelopes.Signature.session_hash)
}
inline ::std::string* Signature::mutable_session_hash() {
  
  // @@protoc_insertion_point(field_mutable:POGOProtos.Networking.Envelopes.Signature.session_hash)
  return session_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Signature::release_session_hash() {
  // @@protoc_insertion_point(field_release:POGOProtos.Networking.Envelopes.Signature.session_hash)
  
  return session_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Signature::set_allocated_session_hash(::std::string* session_hash) {
  if (session_hash != NULL) {
    
  } else {
    
  }
  session_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_hash);
  // @@protoc_insertion_point(field_set_allocated:POGOProtos.Networking.Envelopes.Signature.session_hash)
}

// optional uint64 timestamp = 23;
inline void Signature::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Signature::timestamp() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.timestamp)
  return timestamp_;
}
inline void Signature::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.timestamp)
}

// repeated uint64 request_hash = 24;
inline int Signature::request_hash_size() const {
  return request_hash_.size();
}
inline void Signature::clear_request_hash() {
  request_hash_.Clear();
}
inline ::google::protobuf::uint64 Signature::request_hash(int index) const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return request_hash_.Get(index);
}
inline void Signature::set_request_hash(int index, ::google::protobuf::uint64 value) {
  request_hash_.Set(index, value);
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.request_hash)
}
inline void Signature::add_request_hash(::google::protobuf::uint64 value) {
  request_hash_.Add(value);
  // @@protoc_insertion_point(field_add:POGOProtos.Networking.Envelopes.Signature.request_hash)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Signature::request_hash() const {
  // @@protoc_insertion_point(field_list:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return request_hash_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Signature::mutable_request_hash() {
  // @@protoc_insertion_point(field_mutable_list:POGOProtos.Networking.Envelopes.Signature.request_hash)
  return &request_hash_;
}

// optional int64 unknown25 = 25;
inline void Signature::clear_unknown25() {
  unknown25_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Signature::unknown25() const {
  // @@protoc_insertion_point(field_get:POGOProtos.Networking.Envelopes.Signature.unknown25)
  return unknown25_;
}
inline void Signature::set_unknown25(::google::protobuf::int64 value) {
  
  unknown25_ = value;
  // @@protoc_insertion_point(field_set:POGOProtos.Networking.Envelopes.Signature.unknown25)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Envelopes
}  // namespace Networking
}  // namespace POGOProtos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_POGOProtos_2fNetworking_2fEnvelopes_2fSignature_2eproto__INCLUDED
